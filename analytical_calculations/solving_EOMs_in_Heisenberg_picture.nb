(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1402890,      28081]
NotebookOptionsPosition[   1383410,      27760]
NotebookOutlinePosition[   1383826,      27777]
CellTagsIndexPosition[   1383783,      27774]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Solving EOMs in Heisenberg picture", "Title",
 CellChangeTimes->{{3.896978102685761*^9, 
  3.8969781237880287`*^9}},ExpressionUUID->"40c82feb-b695-4808-9e78-\
94609df15865"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sx", " ", "=", " ", 
   RowBox[{"PauliMatrix", "[", "1", "]"}]}], ";", 
  RowBox[{"sy", " ", "=", " ", 
   RowBox[{"PauliMatrix", "[", "2", "]"}]}], ";", 
  RowBox[{"sz", " ", "=", " ", 
   RowBox[{"PauliMatrix", "[", "3", "]"}]}], ";", 
  RowBox[{"id2", "=", 
   RowBox[{"PauliMatrix", "[", "0", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"comm", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"a", ".", "b"}], "-", 
    RowBox[{"b", ".", "a"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heisEOM", "[", 
   RowBox[{"H_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"comm", "[", 
    RowBox[{"H", ",", " ", "A"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"formVec", "[", "stringState_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "up", ",", " ", "down", ",", " ", "right", ",", " ", "left", ",", " ", 
      "mapping", ",", " ", "vecList", ",", "vec"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"up", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"down", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"right", " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1"}], "}"}], "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"left", " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", " ", 
         RowBox[{"-", "1"}]}], "}"}], "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mapping", " ", "=", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<u\>\"", "->", "up"}], ",", 
        RowBox[{"\"\<d\>\"", "->", "down"}], ",", 
        RowBox[{"\"\<r\>\"", "->", "right"}], ",", 
        RowBox[{"\"\<l\>\"", "->", "left"}]}], " ", "|>"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vecList", " ", "=", 
      RowBox[{
       RowBox[{"Lookup", "[", 
        RowBox[{"Characters", "[", "stringState", "]"}], "]"}], "@", 
       "mapping"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vec", " ", "=", " ", 
      RowBox[{
       RowBox[{"KroneckerProduct", "@@", "vecList"}], "//", "Flatten"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "vec", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8969782684705343`*^9, 3.896978355736108*^9}, {
  3.896981096149646*^9, 3.896981100330716*^9}, {3.897076918250615*^9, 
  3.897076922479228*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"f27721d8-caae-4e5f-8967-0b10b1d7fb01"],

Cell[CellGroupData[{

Cell[TextData[{
 "Beginning with H = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", " ", 
    SubscriptBox["\[Sigma]", "x"], " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "99c97684-1349-4cc2-a2c6-ea30812b2783"],
 " and computing Z(t)"
}], "Subsubsection",
 CellChangeTimes->{{3.89697820495123*^9, 
  3.896978246070537*^9}},ExpressionUUID->"b0318d7d-9b55-4f6b-8201-\
d6fbf6424c0c"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"H", ",", " ", "Z"}], "]"}]], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"14dd63a1-a97b-4c8b-b879-2ffc4b845949"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", " ", "=", " ", 
   RowBox[{"\[Omega]", " ", "sx"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z", "[", "t_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["z", 
      RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", "2"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "1", ",", " ", "2"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z", "'"}], "[", "t", "]"}]}], "Input",
 CellChangeTimes->{{3.896978257936941*^9, 3.8969782638802032`*^9}, {
  3.8969783609198523`*^9, 3.896978367302927*^9}, {3.896978409841762*^9, 
  3.8969784849460773`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"5f2f9630-8c1d-4093-8283-10fe33bbea39"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       SubscriptBox["z", 
        RowBox[{"1", ",", "1"}]], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], ",", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["z", 
        RowBox[{"1", ",", "2"}]], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       SubscriptBox["z", 
        RowBox[{"2", ",", "1"}]], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], ",", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["z", 
        RowBox[{"2", ",", "2"}]], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.8969784859678783`*^9, 3.896979148507859*^9, 
  3.8969792398246517`*^9, 3.896981397786092*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"ca03ef61-942a-450a-8c16-c7f4e614f32b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Z", "'"}], "[", "t", "]"}], "-", 
         RowBox[{"heisEOM", "[", 
          RowBox[{"H", ",", " ", 
           RowBox[{"Z", "[", "t", "]"}]}], "]"}]}], "]"}], "==", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", " ", "4"}], "]"}]}], ",", " ", 
      RowBox[{
       RowBox[{"Z", "[", "0", "]"}], "==", "sz"}]}], "}"}], ",", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Z", "[", "t", "]"}], "]"}], ",", " ", "t"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.896981445247102*^9, 3.8969814618134727`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"fc7b9283-d33b-49c2-baf4-ef3ecd1f7550"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["z", 
       RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t", " ", "\[Omega]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z", 
       RowBox[{"1", ",", "2"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[Omega]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z", 
       RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[Omega]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z", 
       RowBox[{"2", ",", "2"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t", " ", "\[Omega]"}], "]"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.896981454104548*^9, 3.896981462057742*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"b1359b8a-07f1-4320-b49e-c0b6a2c747e9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Next  H = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Omega]", "x"], 
     SubscriptBox["\[Sigma]", "x"]}], "+", 
    RowBox[{
     SubscriptBox["\[Omega]", "y"], " ", 
     SubscriptBox["\[Sigma]", "y"]}], "+", 
    RowBox[{
     SubscriptBox["\[Omega]", 
      RowBox[{"z", " "}]], 
     SubscriptBox["\[Sigma]", "z"], " "}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e1c85b0b-862a-406b-a00f-9a743a48a92e"],
 " and we compute Z(t)"
}], "Subsubsection",
 CellChangeTimes->{{3.89697820495123*^9, 3.896978246070537*^9}, {
  3.8969798161885853`*^9, 3.896979855086925*^9}, {3.896993835433466*^9, 
  3.896993841617092*^9}},ExpressionUUID->"8998a4b7-4d8f-4de9-a59c-\
0c6245ac6cf2"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"H", ",", " ", "Z"}], "]"}]], "Input",
 CellChangeTimes->{{3.896979863198016*^9, 3.896979893926276*^9}},
 CellLabel->
  "In[705]:=",ExpressionUUID->"e76a81e5-f038-47af-bb49-07c3a1be7e5d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Omega]", "x"], " ", "sx"}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["\[Omega]", "y"], " ", "sy"}], " ", "+", " ", 
    RowBox[{
     SubscriptBox["\[Omega]", "z"], " ", "sz"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z", "[", "t_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["z", 
      RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", "2"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "1", ",", " ", "2"}], "}"}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.896978257936941*^9, 3.8969782638802032`*^9}, {
  3.8969783609198523`*^9, 3.896978367302927*^9}, {3.896978409841762*^9, 
  3.8969784849460773`*^9}, {3.896979897224099*^9, 3.896979916245682*^9}, {
  3.896981476878153*^9, 3.896981477028603*^9}},
 CellLabel->
  "In[706]:=",ExpressionUUID->"c678a04a-d2ed-4472-b517-460fef71d48d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "H", "]"}]], "Input",
 CellChangeTimes->{{3.897150085053941*^9, 3.8971500870759*^9}},
 CellLabel->
  "In[708]:=",ExpressionUUID->"f2590870-89f5-4763-8dbb-7c7bb05f7ae3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    SqrtBox[
     RowBox[{
      SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
      SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
      SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ",", 
   SqrtBox[
    RowBox[{
     SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
     SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
     SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.8971500911174726`*^9},
 CellLabel->
  "Out[708]=",ExpressionUUID->"6427dc5e-9998-4bd4-bb0b-6fa20fb5a609"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Z", "'"}], "[", "t", "]"}], "-", 
         RowBox[{"heisEOM", "[", 
          RowBox[{"H", ",", " ", 
           RowBox[{"Z", "[", "t", "]"}]}], "]"}]}], "]"}], "==", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", " ", "4"}], "]"}]}], ",", " ", 
      RowBox[{
       RowBox[{"Z", "[", "0", "]"}], "==", "sz"}]}], "}"}], ",", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Z", "[", "t", "]"}], "]"}], ",", " ", "t"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.896978488651032*^9, 3.896978578197036*^9}, {
   3.8969789708700933`*^9, 3.896979071409851*^9}, {3.896979263579727*^9, 
   3.896979285972986*^9}, {3.896979515257482*^9, 3.896979518822474*^9}, {
   3.896979578528962*^9, 3.896979584977188*^9}, 3.89698149366562*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"87a6caab-305f-4c2e-923f-d0926e264726"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["z", 
       RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "t", " ", 
          SqrtBox[
           RowBox[{
            SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
            SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
            SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
          SubsuperscriptBox["\[Omega]", "y", "2"]}], ")"}]}], "+", 
       SubsuperscriptBox["\[Omega]", "z", "2"]}], 
      RowBox[{
       SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
       SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
       SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z", 
       RowBox[{"1", ",", "2"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"t", " ", 
          SqrtBox[
           RowBox[{
            SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
            SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
            SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "x"], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["\[Omega]", "y"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
           SubscriptBox["\[Omega]", "z"], " ", 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "z", "2"]}], ")"}]}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
          SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
          SubsuperscriptBox["\[Omega]", "z", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z", 
       RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", " ", 
         SqrtBox[
          RowBox[{
           SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
           SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
           SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Omega]", "x"], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["\[Omega]", "y"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
          SubscriptBox["\[Omega]", "z"], " ", 
          SqrtBox[
           RowBox[{
            SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
            SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
            SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
            SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
            SubsuperscriptBox["\[Omega]", "z", "2"]}], ")"}]}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
         SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
         SubsuperscriptBox["\[Omega]", "z", "2"]}], ")"}], 
       RowBox[{"3", "/", "2"}]]]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z", 
       RowBox[{"2", ",", "2"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t", " ", 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
           SubsuperscriptBox["\[Omega]", "y", "2"]}], ")"}]}], "+", 
        SubsuperscriptBox["\[Omega]", "z", "2"]}], 
       RowBox[{
        SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
        SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
        SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8969784951994667`*^9, 3.896978578852058*^9}, 
   3.896978976826046*^9, 3.896979008792121*^9, {3.896979066281487*^9, 
   3.896979095149156*^9}, {3.896979145862493*^9, 3.896979149580832*^9}, 
   3.896979241397924*^9, 3.8969792863758717`*^9, 3.8969795196515627`*^9, {
   3.8969795799583187`*^9, 3.8969795852290077`*^9}, 3.8969799359885397`*^9, 
   3.896981495377928*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"75617ad6-68a3-40ca-a740-a5555f822fca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"ut", ",", " ", "matExpZ"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut", " ", "=", " ", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "H"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matExpZ", " ", "=", " ", 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "ut", "]"}], ".", "sz", ".", "ut"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"matExpZ", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.897055702502275*^9, 3.897055741432126*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"7561ac89-eec9-440e-a784-5a9c6af2bb47"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Conjugate", "[", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
                SqrtBox[
                 RowBox[{
                  SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                  SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                  SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SubscriptBox["\[Omega]", "x"]}], "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "x"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "]"}]}], " ", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "x"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "x"]}], "-", 
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "z"]}], "-", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "z"]}], "+", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "z"]}], "-", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "z"]}], "+", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "z"]}], "-", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "z"]}], "+", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "x"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "x"]}], "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "x"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "x"]}], "-", 
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[Omega]", "z"], "-", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "z"], "+", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Conjugate", "[", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
                SqrtBox[
                 RowBox[{
                  SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                  SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                  SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["\[Omega]", "z"], "-", 
                SqrtBox[
                 RowBox[{
                  SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                  SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                  SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[Omega]", "z"], "+", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "]"}]}], " ", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "x"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "x"]}], "-", 
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "x"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "x"]}], "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "z"]}], "-", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "z"]}], "+", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "x"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "x"]}], "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "x"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "x"]}], "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[Omega]", "z"], "-", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "z"], "+", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[Omega]", "z"], "-", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "z"], "+", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8970557418751087`*^9},
 CellLabel->
  "Out[208]//MatrixForm=",ExpressionUUID->"2741fb11-daa2-4a08-9283-\
0ff650f921a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"matExpZ", ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"t", " ", ">", " ", "0"}], ",", " ", 
     RowBox[{"\[Omega]x", "\[Element]", "Reals"}], ",", " ", 
     RowBox[{"\[Omega]y", "\[Element]", "Reals"}], ",", " ", 
     RowBox[{"\[Omega]z", "\[Element]", "Reals"}]}], "}"}]}], "]"}]], "Input",\

 CellLabel->
  "In[209]:=",ExpressionUUID->"0d28255c-f29a-416f-bf27-0df57ae94492"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.897055785244729*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"f74253ec-334d-4b05-bcf1-9455ff759453"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"ut", ",", " ", "udgt", ",", " ", "matExpZ"}], "]"}]], "Input",
 CellChangeTimes->{{3.896979293387846*^9, 3.896979371667544*^9}, {
  3.896993875463757*^9, 3.896993879055436*^9}, {3.897056105870841*^9, 
  3.897056108558034*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"bee6fa84-b5a3-4e61-96e4-0f69db1f24bc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ut", " ", "=", " ", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "H"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"udgt", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Conjugate", "[", "ut", "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matExpZ", " ", "=", " ", 
   RowBox[{"udgt", ".", "sz", ".", "ut"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"matExpZ", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.896993882570043*^9, 3.8969938925119753`*^9}, {
  3.897056113613524*^9, 3.897056119503687*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"e7105b84-a449-44a7-891e-27a8167f1c64"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "x"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "x"]}], "-", 
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "2"]}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"t", " ", 
                SqrtBox[
                 RowBox[{
                  SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                  SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                  SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
              SubscriptBox["\[Omega]", "x"]}], "+", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"t", " ", 
                SqrtBox[
                 RowBox[{
                  SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                  SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                  SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
              SubscriptBox["\[Omega]", "y"]}]}], 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]]}], "-", 
          FractionBox[
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
             SubscriptBox["\[Omega]", "x"]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
             SubscriptBox["\[Omega]", "y"]}]}], 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "z", "2"]}]]], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "2"]}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"t", " ", 
                  SqrtBox[
                   RowBox[{
                    SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
                
                SubscriptBox["\[Omega]", "x"]}], "-", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"t", " ", 
                  SqrtBox[
                   RowBox[{
                    SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
                
                SubscriptBox["\[Omega]", "y"]}]}], 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]], "+", 
             FractionBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "2"]}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"t", " ", 
                  SqrtBox[
                   RowBox[{
                    SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
                
                SubscriptBox["\[Omega]", "x"]}], "+", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"t", " ", 
                  SqrtBox[
                   RowBox[{
                    SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
                
                SubscriptBox["\[Omega]", "y"]}]}], 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]]}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "z"]}], "-", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "z"]}], "+", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "z"]}], "-", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "z"]}], "+", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"t", " ", 
                 SqrtBox[
                  RowBox[{
                   SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SubscriptBox["\[Omega]", "z"]}], "-", 
                 SqrtBox[
                  RowBox[{
                   SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], "+", 
             FractionBox[
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"t", " ", 
                 SqrtBox[
                  RowBox[{
                   SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SubscriptBox["\[Omega]", "z"]}], "+", 
                 SqrtBox[
                  RowBox[{
                   SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}]}]}], 
         ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "2"]}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"t", " ", 
                SqrtBox[
                 RowBox[{
                  SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                  SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                  SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
              SubscriptBox["\[Omega]", "x"]}], "+", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"t", " ", 
                SqrtBox[
                 RowBox[{
                  SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                  SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                  SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
              SubscriptBox["\[Omega]", "y"]}]}], 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]]}], "-", 
          FractionBox[
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
             SubscriptBox["\[Omega]", "x"]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
             SubscriptBox["\[Omega]", "y"]}]}], 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "z", "2"]}]]], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "2"]}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"t", " ", 
                  SqrtBox[
                   RowBox[{
                    SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
                
                SubscriptBox["\[Omega]", "x"]}], "-", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"t", " ", 
                  SqrtBox[
                   RowBox[{
                    SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
                
                SubscriptBox["\[Omega]", "y"]}]}], 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]], "+", 
             FractionBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "2"]}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"t", " ", 
                  SqrtBox[
                   RowBox[{
                    SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
                
                SubscriptBox["\[Omega]", "x"]}], "+", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"t", " ", 
                  SqrtBox[
                   RowBox[{
                    SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
                
                SubscriptBox["\[Omega]", "y"]}]}], 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]]}], ")"}]}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[Omega]", "z"], "-", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "z"], "+", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "x"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "x"]}], "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "z"]}], "-", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "z"]}], "+", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"t", " ", 
                 SqrtBox[
                  RowBox[{
                   SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SubscriptBox["\[Omega]", "z"]}], "-", 
                 SqrtBox[
                  RowBox[{
                   SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], "+", 
             FractionBox[
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"t", " ", 
                 SqrtBox[
                  RowBox[{
                   SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SubscriptBox["\[Omega]", "z"]}], "+", 
                 SqrtBox[
                  RowBox[{
                   SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}]}]}], 
         ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
             SubscriptBox["\[Omega]", "x"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
             SubscriptBox["\[Omega]", "y"]}]}], 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "z", "2"]}]]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
             SubscriptBox["\[Omega]", "x"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
             SubscriptBox["\[Omega]", "y"]}]}], 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "z", "2"]}]]], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "2"]}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"t", " ", 
                  SqrtBox[
                   RowBox[{
                    SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
                
                SubscriptBox["\[Omega]", "x"]}], "-", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"t", " ", 
                  SqrtBox[
                   RowBox[{
                    SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
                
                SubscriptBox["\[Omega]", "y"]}]}], 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]], "+", 
             FractionBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "2"]}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"t", " ", 
                  SqrtBox[
                   RowBox[{
                    SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
                
                SubscriptBox["\[Omega]", "x"]}], "+", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"t", " ", 
                  SqrtBox[
                   RowBox[{
                    SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
                
                SubscriptBox["\[Omega]", "y"]}]}], 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]]}], ")"}]}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "z"]}], "-", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "z"]}], "+", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "x"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "x"]}], "-", 
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "z"], "-", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "z"], "+", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"t", " ", 
                 SqrtBox[
                  RowBox[{
                   SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["\[Omega]", "z"], "-", 
                 SqrtBox[
                  RowBox[{
                   SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], "+", 
             FractionBox[
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"t", " ", 
                 SqrtBox[
                  RowBox[{
                   SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["\[Omega]", "z"], "+", 
                 SqrtBox[
                  RowBox[{
                   SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}]}]}], 
         ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "x"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "x"]}], "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               SubscriptBox["\[Omega]", "y"]}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
             SubscriptBox["\[Omega]", "x"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
             SubscriptBox["\[Omega]", "y"]}]}], 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "z", "2"]}]]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
             SubscriptBox["\[Omega]", "x"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
             SubscriptBox["\[Omega]", "y"]}]}], 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "z", "2"]}]]], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "2"]}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"t", " ", 
                  SqrtBox[
                   RowBox[{
                    SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
                
                SubscriptBox["\[Omega]", "x"]}], "-", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"t", " ", 
                  SqrtBox[
                   RowBox[{
                    SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
                
                SubscriptBox["\[Omega]", "y"]}]}], 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]], "+", 
             FractionBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "2"]}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"t", " ", 
                  SqrtBox[
                   RowBox[{
                    SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
                
                SubscriptBox["\[Omega]", "x"]}], "+", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"t", " ", 
                  SqrtBox[
                   RowBox[{
                    SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
                
                SubscriptBox["\[Omega]", "y"]}]}], 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]]}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[Omega]", "z"], "-", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "z"], "+", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "z"], "-", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"t", " ", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "z"], "+", 
              SqrtBox[
               RowBox[{
                SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"t", " ", 
                 SqrtBox[
                  RowBox[{
                   SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["\[Omega]", "z"], "-", 
                 SqrtBox[
                  RowBox[{
                   SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]], "+", 
             FractionBox[
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"t", " ", 
                 SqrtBox[
                  RowBox[{
                   SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["\[Omega]", "z"], "+", 
                 SqrtBox[
                  RowBox[{
                   SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                   SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], ")"}]}], 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]]}], ")"}]}]}], 
         ")"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.897056119804653*^9},
 CellLabel->
  "Out[214]//MatrixForm=",ExpressionUUID->"733d796e-699d-40c7-b478-\
726e1fbafc01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"matExpZ", ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"t", " ", ">", " ", "0"}], ",", " ", 
     RowBox[{"\[Omega]x", "\[Element]", "Reals"}], ",", " ", 
     RowBox[{"\[Omega]y", "\[Element]", "Reals"}], ",", " ", 
     RowBox[{"\[Omega]z", "\[Element]", "Reals"}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.89699392708182*^9, 3.8969940550189*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"e572d8f5-7d32-42d2-8db5-d2d361781e1f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "t", " ", 
          SqrtBox[
           RowBox[{
            SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
            SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
            SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
          SubsuperscriptBox["\[Omega]", "y", "2"]}], ")"}]}], "+", 
       SubsuperscriptBox["\[Omega]", "z", "2"]}], 
      RowBox[{
       SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
       SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
       SubsuperscriptBox["\[Omega]", "z", "2"]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Omega]", "x"], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["\[Omega]", "y"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], "2"], " ", 
          SubscriptBox["\[Omega]", "z"]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "t", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
          SqrtBox[
           RowBox[{
            SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
            SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
            SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]}], ")"}]}], 
      RowBox[{
       SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
       SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
       SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Omega]", "x"], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["\[Omega]", "y"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], "2"], " ", 
          SubscriptBox["\[Omega]", "z"]}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "t", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
          SqrtBox[
           RowBox[{
            SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
            SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
            SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]}], ")"}]}], 
      RowBox[{
       SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
       SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
       SubsuperscriptBox["\[Omega]", "z", "2"]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t", " ", 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "z", "2"]}]]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
           SubsuperscriptBox["\[Omega]", "y", "2"]}], ")"}]}], "+", 
        SubsuperscriptBox["\[Omega]", "z", "2"]}], 
       RowBox[{
        SubsuperscriptBox["\[Omega]", "x", "2"], "+", 
        SubsuperscriptBox["\[Omega]", "y", "2"], "+", 
        SubsuperscriptBox["\[Omega]", "z", "2"]}]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.89699392999971*^9, 3.8969939903680964`*^9}, 
   3.896994047122127*^9, 3.896994285339402*^9, 3.8969945638729963`*^9, 
   3.897056127169256*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"ad0056e3-be09-4f38-a85e-af38071968e9"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.896993916049253*^9, 
  3.896993917439982*^9}},ExpressionUUID->"90c083ad-a662-4d64-a9d1-\
1dde279e6fed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Try H = -\[CapitalGamma] (X1 + X2 + X3) (actually solves fast enough to have \
generic \[CapitalGamma] and use DSolve\
\>", "Subsubsection",
 CellChangeTimes->{{3.89697820495123*^9, 3.896978246070537*^9}, {
  3.8969798161885853`*^9, 3.896979855086925*^9}, {3.896981072938651*^9, 
  3.896981077114258*^9}, {3.896981967280442*^9, 3.896981979207862*^9}, {
  3.8969855551905518`*^9, 
  3.896985568246086*^9}},ExpressionUUID->"ae39839f-f386-493d-87d8-\
d9c57bdf78c4"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "H", ",", " ", "Z1", ",", " ", "Z2", ",", " ", "Z3", ",", " ", "z1Sol", ",",
    " ", "z2Sol", ",", " ", "z3Sol"}], "]"}]], "Input",
 CellChangeTimes->{{3.896979863198016*^9, 3.896979893926276*^9}, 
   3.896981776263473*^9, {3.8969819872108707`*^9, 3.896982007400817*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"73a3ebc8-e050-416d-943a-b3a3c3f0b00f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sx1", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"sx", ",", " ", "id2", ",", " ", "id2"}], "]"}]}], ";", " ", 
  RowBox[{"sx2", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "sx", ",", " ", "id2"}], "]"}]}], ";", " ", 
  RowBox[{"sx3", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "id2", ",", " ", "sx"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sz1", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"sz", ",", " ", "id2", ",", " ", "id2"}], "]"}]}], ";", 
  RowBox[{"sz2", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "sz", ",", " ", "id2"}], "]"}]}], ";", 
  RowBox[{"sz3", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "id2", ",", " ", "sz"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", " ", "=", 
   RowBox[{
    RowBox[{"-", "\[CapitalGamma]"}], 
    RowBox[{"(", 
     RowBox[{"sx1", " ", "+", " ", "sx2", " ", "+", " ", "sx3"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z1", "[", "t_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z2", "[", "t_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["z2", 
       RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z3", "[", "t_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["z3", 
       RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.896978257936941*^9, 3.8969782638802032`*^9}, {
   3.8969783609198523`*^9, 3.896978367302927*^9}, {3.896978409841762*^9, 
   3.8969784849460773`*^9}, {3.896979897224099*^9, 3.896979916245682*^9}, {
   3.8969811136455708`*^9, 3.896981150259633*^9}, {3.89698120705234*^9, 
   3.896981287564788*^9}, {3.8969815333766937`*^9, 3.8969816120241957`*^9}, 
   3.896981772018119*^9, {3.896981838136853*^9, 3.8969818723440523`*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"6b1036ff-2bc0-4fc2-85d8-42c8784da09a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"z1Sol", " ", "=", " ", 
   RowBox[{
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Z1", "'"}], "[", "t", "]"}], "-", 
           RowBox[{"heisEOM", "[", 
            RowBox[{"H", ",", " ", 
             RowBox[{"Z1", "[", "t", "]"}]}], "]"}]}], "]"}], "==", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", " ", "64"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Z1", "[", "0", "]"}], "==", "sz1"}]}], "}"}], ",", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Z1", "[", "t", "]"}], "]"}], ",", " ", "t"}], "]"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z2Sol", " ", "=", " ", 
   RowBox[{
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Z2", "'"}], "[", "t", "]"}], "-", 
           RowBox[{"heisEOM", "[", 
            RowBox[{"H", ",", " ", 
             RowBox[{"Z2", "[", "t", "]"}]}], "]"}]}], "]"}], "==", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", " ", "64"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Z2", "[", "0", "]"}], "==", "sz2"}]}], "}"}], ",", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Z2", "[", "t", "]"}], "]"}], ",", " ", "t"}], "]"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z3Sol", " ", "=", " ", 
   RowBox[{
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Z3", "'"}], "[", "t", "]"}], "-", 
           RowBox[{"heisEOM", "[", 
            RowBox[{"H", ",", " ", 
             RowBox[{"Z3", "[", "t", "]"}]}], "]"}]}], "]"}], "==", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", " ", "64"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Z3", "[", "0", "]"}], "==", "sz3"}]}], "}"}], ",", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Z3", "[", "t", "]"}], "]"}], ",", " ", "t"}], "]"}], "//", 
    "FullSimplify"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.896978488651032*^9, 3.896978578197036*^9}, {
  3.8969789708700933`*^9, 3.896979071409851*^9}, {3.896979263579727*^9, 
  3.896979285972986*^9}, {3.896979515257482*^9, 3.896979518822474*^9}, {
  3.896979578528962*^9, 3.896979584977188*^9}, {3.896981293795644*^9, 
  3.896981294718136*^9}, {3.896981364797228*^9, 3.896981367397428*^9}, {
  3.896981506542035*^9, 3.896981516125771*^9}, {3.8969816183499317`*^9, 
  3.8969816415214167`*^9}, {3.8969817942958403`*^9, 3.896981802311328*^9}, {
  3.896981877576458*^9, 3.896981909591454*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"e0aab22a-4880-470d-bf88-4ec2ca5d1c86"],

Cell[CellGroupData[{

Cell[BoxData["z1Sol"], "Input",
 CellChangeTimes->{{3.896989596253834*^9, 3.8969895996189327`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"453d99fd-d8dc-44b8-97a9-ba70a36b3fd9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"1", ",", "2"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"1", ",", "3"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"1", ",", "4"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"1", ",", "5"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"1", ",", "6"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"1", ",", "7"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"1", ",", "8"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"2", ",", "2"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"2", ",", "3"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"2", ",", "4"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"2", ",", "5"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"2", ",", "6"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"2", ",", "7"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"2", ",", "8"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"3", ",", "1"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"3", ",", "2"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"3", ",", "3"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"3", ",", "4"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"3", ",", "5"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"3", ",", "6"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"3", ",", "7"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"3", ",", "8"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"4", ",", "1"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"4", ",", "2"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"4", ",", "3"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"4", ",", "4"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"4", ",", "5"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"4", ",", "6"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"4", ",", "7"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"4", ",", "8"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"5", ",", "1"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"5", ",", "2"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"5", ",", "3"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"5", ",", "4"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"5", ",", "5"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"5", ",", "6"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"5", ",", "7"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"5", ",", "8"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"6", ",", "1"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"6", ",", "2"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"6", ",", "3"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"6", ",", "4"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"6", ",", "5"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"6", ",", "6"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"6", ",", "7"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"6", ",", "8"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"7", ",", "1"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"7", ",", "2"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"7", ",", "3"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"7", ",", "4"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"7", ",", "5"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"7", ",", "6"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"7", ",", "7"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"7", ",", "8"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"8", ",", "1"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"8", ",", "2"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"8", ",", "3"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"8", ",", "4"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"8", ",", "5"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"8", ",", "6"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"8", ",", "7"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"8", ",", "8"}]], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.89698959988583*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"2662300e-ba9b-44fd-829a-016311d70665"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"udgt", " ", "=", " ", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{"\[ImaginaryI]", " ", "H", " ", "t"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.896989620652401*^9, 3.896989644404005*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"2a635fb0-a056-462b-9fc4-cfc9d4141fc9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"altZ1Sol", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"udgt", ".", "sz1", ".", 
     RowBox[{"ConjugateTranspose", "[", "udgt", "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", ">", "0"}], ",", 
      RowBox[{"\[CapitalGamma]", ">", "0"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8969896460370693`*^9, 3.896989709989254*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"e8e0eb6c-4f4f-4741-af09-71be7d9fe0e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}], ",", "0", ",", 
     "0", ",", "0", ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}], ",", "0", 
     ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}], ",", "0", ",", 
     "0", ",", "0", ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}], ",", "0", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}], ",", "0", ",", 
     "0", ",", "0", ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}], ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}], ",", "0", ",", 
     "0", ",", "0", ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}], ",", "0", 
     ",", "0", ",", "0", ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}], ",", "0", 
     ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}], ",", "0", 
     ",", "0", ",", "0", ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}], ",", "0", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}], ",", "0", 
     ",", "0", ",", "0", ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}], ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}], ",", "0", 
     ",", "0", ",", "0", ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t", " ", "\[CapitalGamma]"}], "]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.896989667212213*^9, 3.896989677721661*^9}, 
   3.896989710358676*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"72a3dd94-5ba0-4095-b101-726b7c3ac22c"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.896989639212792*^9, 
  3.8969896405950737`*^9}},ExpressionUUID->"eed803b7-cef9-4e52-a879-\
c4affeab1873"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Try H = -0.1 (X1 + X2 + X3) + (Z1Z2 + Z1Z3 + Z2Z3) (also took very long time, \
so better to solve with NDSolve)\
\>", "Subsubsection",
 CellChangeTimes->{{3.89697820495123*^9, 3.896978246070537*^9}, {
   3.8969798161885853`*^9, 3.896979855086925*^9}, {3.896981072938651*^9, 
   3.896981077114258*^9}, {3.896981967280442*^9, 3.896981979207862*^9}, {
   3.896982015338512*^9, 3.8969820276400537`*^9}, 3.896982987432002*^9, {
   3.896985541309412*^9, 
   3.8969855504854307`*^9}},ExpressionUUID->"04c08a85-473d-4910-984c-\
e40f21165530"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "H", ",", " ", "Z1", ",", " ", "Z2", ",", " ", "Z3", ",", " ", "z1Sol", ",",
    " ", "z2Sol", ",", " ", "z3Sol", ",", " ", "matExpZ1Sol", ",", " ", 
   "udgt"}], "]"}]], "Input",
 CellChangeTimes->{{3.896979863198016*^9, 3.896979893926276*^9}, 
   3.896981776263473*^9, {3.8969820122500467`*^9, 3.896982013673253*^9}, {
   3.896989756630886*^9, 3.896989782950727*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"546cf172-44e8-4b3e-b4db-8f58dfb7cbfe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sx1", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"sx", ",", " ", "id2", ",", " ", "id2"}], "]"}]}], ";", " ", 
  RowBox[{"sx2", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "sx", ",", " ", "id2"}], "]"}]}], ";", " ", 
  RowBox[{"sx3", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "id2", ",", " ", "sx"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sz1", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"sz", ",", " ", "id2", ",", " ", "id2"}], "]"}]}], ";", 
  RowBox[{"sz2", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "sz", ",", " ", "id2"}], "]"}]}], ";", 
  RowBox[{"sz3", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "id2", ",", " ", "sz"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.1"}], 
     RowBox[{"(", 
      RowBox[{"sx1", " ", "+", " ", "sx2", " ", "+", " ", "sx3"}], ")"}]}], 
    " ", "+", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"sz1", ".", "sz2"}], "+", 
      RowBox[{"sz1", ".", "sz3"}], "+", 
      RowBox[{"sz2", ".", "sz3"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z1", "[", "t_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z2", "[", "t_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["z2", 
       RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z3", "[", "t_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["z3", 
       RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.896978257936941*^9, 3.8969782638802032`*^9}, {
   3.8969783609198523`*^9, 3.896978367302927*^9}, {3.896978409841762*^9, 
   3.8969784849460773`*^9}, {3.896979897224099*^9, 3.896979916245682*^9}, {
   3.8969811136455708`*^9, 3.896981150259633*^9}, {3.89698120705234*^9, 
   3.896981287564788*^9}, {3.8969815333766937`*^9, 3.8969816120241957`*^9}, 
   3.896981772018119*^9, {3.896981838136853*^9, 3.8969818723440523`*^9}, {
   3.896982032020103*^9, 3.89698205049767*^9}, 3.8969829812260847`*^9, {
   3.896983035567071*^9, 3.896983036574911*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"b2d71438-1e50-4ddc-afb8-61f4a8629262"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"ut", ",", " ", "udgt", ",", " ", "matExpZ1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut", " ", "=", " ", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "H"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"udgt", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Conjugate", "[", "ut", "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matExpZ1", " ", "=", " ", 
   RowBox[{"udgt", ".", "sz1", ".", "ut"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.896989749087878*^9, 3.8969898038933783`*^9}, {
  3.897056511527418*^9, 3.897056559220276*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"41f13d11-62ae-4062-b805-cb7ebaa08904"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"matExpZ1", ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", " ", ">", " ", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8969898049523783`*^9, 3.896989846199819*^9}, {
  3.8969899137049026`*^9, 3.896989914152997*^9}, {3.897056568981214*^9, 
  3.897056589372609*^9}, {3.897057033165119*^9, 3.897057035070436*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"c28bce29-1204-4c94-8e36-b4c3065cc554"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                  RowBox[{"-", "2.9507042716607684`*^-15"}], " ", "t"}]], " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"4.991141641695965`*^-19", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2.8951931204295098`*^-15", " ", "t"}]], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{"0.8078784028338919`", " ", "t"}], "]"}], "2"]}], 
                   "+", 
                   TemplateBox[{"129"}, "OutputSizeLimit`Skeleton"], "+", 
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"0.8078784028338919`", " ", "t"}], "]"}], " ", 
                    RowBox[{"(", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], 
                   "+", 
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"0.9000000000000002`", " ", "t"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"7.800987521040032`*^-33", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2.831068741760136`*^-15", " ", "t"}]]}], "-", 
                    RowBox[{"3.4277097651505264`*^-33", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"3.0617265741232832`*^-15", " ", "t"}]]}]}], 
                    ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"1.0999999999999996`", " ", "t"}], "]"}]}], "+", 
                    TemplateBox[{"29"}, "OutputSizeLimit`Skeleton"]}], 
                    ")"}]}]}], ")"}]}], ",", 
             TemplateBox[{"6"}, "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                  RowBox[{"-", "2.9507042716607684`*^-15"}], " ", "t"}]], " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5.039846036163087`*^-19"}], "+", 
                    
                    RowBox[{
                    "2.2787017822099027`*^-20", " ", "\[ImaginaryI]"}]}], 
                    ")"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    TemplateBox[{"24"}, "OutputSizeLimit`Skeleton"], " ", 
                    "t"}]], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    TemplateBox[{"19"}, "OutputSizeLimit`Skeleton"], " ", 
                    "t"}], "]"}], "2"]}], "+", 
                   TemplateBox[{"130"}, "OutputSizeLimit`Skeleton"], "+", 
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    TemplateBox[{"19"}, "OutputSizeLimit`Skeleton"], " ", 
                    "t"}], "]"}], " ", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}]}], 
                 ")"}]}]}], "}"}], ",", 
         TemplateBox[{"6"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "}"}]}], "}"}], 
     Short[#, 8]& ], "line" -> 239, "sessionID" -> 26115282580420316454, 
   "byteCount" -> 3826648, "size" -> 8, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.896989831908691*^9, 3.896989909302845*^9, 
  3.896990125858917*^9, 3.897057024520356*^9, 3.897057230054744*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"9bf1a858-7f13-40ca-9b0b-78bbdfa78617"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"z1Sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["Z1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{"heisEOM", "[", 
           RowBox[{"H", ",", 
            RowBox[{"Z1", "[", "t", "]"}]}], "]"}]}], "]"}], "\[Equal]", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "64"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Z1", "[", "0", "]"}], "\[Equal]", "sz1"}]}], "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Z1", "[", "t", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.896978488651032*^9, 3.896978578197036*^9}, {
   3.8969789708700933`*^9, 3.896979071409851*^9}, {3.896979263579727*^9, 
   3.896979285972986*^9}, {3.896979515257482*^9, 3.896979518822474*^9}, {
   3.896979578528962*^9, 3.896979584977188*^9}, {3.896981293795644*^9, 
   3.896981294718136*^9}, {3.896981364797228*^9, 3.896981367397428*^9}, {
   3.896981506542035*^9, 3.896981516125771*^9}, {3.8969816183499317`*^9, 
   3.8969816415214167`*^9}, {3.8969817942958403`*^9, 3.896981802311328*^9}, {
   3.896981877576458*^9, 3.896981909591454*^9}, {3.896982995576907*^9, 
   3.896983001840412*^9}, {3.8969847474710913`*^9, 3.896984770149144*^9}, 
   3.896985452558426*^9},
 CellLabel->
  "In[137]:=",ExpressionUUID->"87f1eb86-cbb5-4c18-aff8-4a1c06ea7388"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"z1Sol", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896984772142252*^9, 3.8969848083490133`*^9}, 
   3.896985465189663*^9},
 CellLabel->
  "In[139]:=",ExpressionUUID->"d170d7d6-10b5-4305-8be7-deac4c3718e4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwcnHc81e8XwGVnZScre2fvdY97Jcn6NqwIKSQJSSmjocyUkYRURlSSnVGE
IhKSQkbIHtlb+p37659e79flGee8n/N5Pvf5fAifPH/4NCUFBYUFIwUF+X+R
u38z0gRr9A8v/cN/s4Q39NJ7z7k/JpQ8qr7fhVxzOS9Tyv01QZNwaeUkcrz6
sD1zzBvCSQHP0Sfbs4R6RR83WvdqgnZo+X/3/84SArn+lf17UkdY2ptLMNya
JSTG7dffutNAcLJ2+Vi4MUt4vSu6bu3KZ0KRje/M6Nos4VN0u/GyWythf/dM
+tjKLGEulGns8ouvhDe3Tie+XZolBNW9ll598o1Qs/Fsr9cCtgcreYt3OglR
/WlfI2dmCaIhD+d9QrsJIqe/v6efmiXkv9NVnbvSQ6hj8QgLH58lNGrfLJ92
+0WwHtF8W/R7lvBSlyNY7fUAgV82IdVncJYw33Pqsd+LQcLb0uWVY79mCZpX
S98XZQ0RGqJXmt37ZgnBvPRDC09+EwJLKU8V9MwSPpTbUimnDhPa9j5RU/85
S2CwfSnm82CEkBk+1b7VNUuwXNvanx83Svg2bVqyE/nBA3O32TtjBFpvhtNO
nbOEfvUn4fIR44SQ2veKVMhiP+afnwudIDRPdu1f/DFL8LhI+pwbMkl4XB5d
qoif53Pen566MkUwfplwoAJ5pWiUWdZ/msBo0PzuDravd0RTwcNnhpDE8DAj
u3uWELoQYfnc8w/BULoohArH2xTb4zPuhv8b+Y6k9M4SwpMSG+OV5gjEPQfO
ePTPEuTcCXYqr+cIbEyN024DswRfutirvi/mCWy+HT9ah2cJXJ1aTOxSC4Te
vJh5qbFZQtmzodSCrAXCs/cJOTETs4Tt/apVc08WCVEZn6/b/ZklPOXqM78n
uEQYc/67I29ulmA4cuuXQuoSwVY4YO8E5m+8WN67dc8yQfxVuBHV8iwhKrST
4vyDZcLXK6bWS5h/+aPXYlm4VgghcU7jxehHu6i0SF7cCmEH16CxPvpzcfFr
oRnrKuHeqaXkyM1ZAk/dFdLMnVXCd51Y+vvoW2WcaEc04xph5rhLqi36eOJk
8ym5iDVC8Yha3HfkHcoXlz/TrhP2Wazuo0N/M3cI3j4buk6QLVtqncHPD3yt
52ak3CCUJs+xRSJPPjmf/SJkg3CDLyWsD9uP8ebRNPm7QUgwPrY9if0rQc2n
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
FY/g844lN7ahP6izqSvu/WJA0Whdnyb6y8BAVij2NwOC826NGhH5UPnyKbt5
BrwfFv2ZTuTbC6N+mgkw4TPppMsy5IM0eWGv5hImNGUph91sJOa7gz/KCjOh
3N2KdAD5tbBmun7hciZ8zDwwzkP+/RX2qRxawQS1xt/rwpGvo4yhFy0rmWA3
Gnlmsg6/v2Kd8l6uZsL6yPG2u4g/N/Tcz5Bnwm25kSXXEX+QsEm9uJ4JIs4F
TfWIa/a0JARsYoLRTfu1NGyv9Crrgr0yE758Es1ZjP0VfKw5S1djQoiLKE8A
5cmUJQVoazIhhyndr4/y3rZ96Sm/gwkk2ehdWcj3xJRdTkt0mZB3ztt2D+ob
15NnO7obccYGf6J+bbiiGu+jERNeP50R2Ij2CTySQSsnMcHrTmczsb/ZeTBp
52UGE0587OcvQn7bqUirBbGZMNrt2bQY45Gl+8UNjnuYYDiovoKL8cp47Jy4
ji0TpOSzDlehf3W28wmuO8SEJOPY+E5if69vwJzQESbsskvPbSLmt59OTIwf
ZUK+FXV3CvJL9o/Hj09uTOhvO2egO4rfj3qDPa88mRDhq302eQzfJ0H2bY+O
Y/+WURGV45gvlXyuSziJ9l5j/foRsX7At+91SCATnny2vsyawPzMuPH50dNM
2JbTxM5E3B1Gz2WHMaH2p4L/S8QtlZUZupGo7/0r/v8hrhU0SlGMZsIjkTk+
YcSvaM+viMShvA5qBSRsvyhaO3ryEhPcjy631cf+s+uyznReZYJySFXNOMp7
T0zZv+oGE96UxecT81Fq/funF6YywZ+dr3kex8vT5//5Gd9hgqe2dbUXMV/s
OOhbnMkE4WW+p0qJ+4f0V03+zWbC13rdu7vRnh/FzY7r5DPhtL/trUfI9+8v
MrzziplQICAQdRnfn97xbWOjZUwwWPHfw/WYv8w4CXqpVTJBuvJXYgORX+/W
GXWtYcKptxWLMtH/IhJHj92vY8Ktfs33z5EflweuDvc3MqHy4qFpIeSPXEmV
+4ZWJgw9rPRLRr7dufT756FPTOjIeDIVgnzc6qzkltLFBAH95y15yNcCg70/
OnqxvwCZ5QaIDSQjXFYPMIHReGRaAXHlYMHg3p/Yf3rkCVvEzJf9R6+MMkFn
NalhHHHL5ZUDjRNoP4PZh53Y/kEXspPYHybcmX24ew0xX2p4op/xD+Wzu7vt
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
MX5chZQCjP9Z2ccn/v3D+GB+fFMk2u//VlmDtA==
       "]]},
     Annotation[#, "Charting`Private`Tag$40735#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9924289403459146},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {0.9924289403459123, 0.999999999999668}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.896984773577137*^9, 3.896984808794896*^9}, {
  3.896985460758354*^9, 3.89698546602724*^9}},
 CellLabel->
  "Out[139]=",ExpressionUUID->"b5b1ce8b-35f2-4880-9c25-2fce58ce2739"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"z2Sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["Z2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{"heisEOM", "[", 
           RowBox[{"H", ",", 
            RowBox[{"Z2", "[", "t", "]"}]}], "]"}]}], "]"}], "\[Equal]", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "64"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Z2", "[", "0", "]"}], "\[Equal]", "sz2"}]}], "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Z2", "[", "t", "]"}], "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"z3Sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["Z3", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{"heisEOM", "[", 
           RowBox[{"H", ",", 
            RowBox[{"Z3", "[", "t", "]"}]}], "]"}]}], "]"}], "\[Equal]", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "64"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Z3", "[", "0", "]"}], "\[Equal]", "sz3"}]}], "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Z3", "[", "t", "]"}], "]"}], ",", "t"}], "]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"9784b526-6bc9-439f-9753-7724d1dc37cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Try H = -0.1 (X1 + X2 + X3) + (Z1Z2 + Z1Z3 + Z2Z3) with pre-processing tricks \
on commutator\
\>", "Subsubsection",
 CellChangeTimes->{{3.89697820495123*^9, 3.896978246070537*^9}, {
   3.8969798161885853`*^9, 3.896979855086925*^9}, {3.896981072938651*^9, 
   3.896981077114258*^9}, {3.896981967280442*^9, 3.896981979207862*^9}, {
   3.896982015338512*^9, 3.8969820276400537`*^9}, 3.896982987432002*^9, {
   3.896985541309412*^9, 3.8969855504854307`*^9}, {3.896985582549556*^9, 
   3.896985588989718*^9}},ExpressionUUID->"a7b2f8a3-5244-495d-be56-\
5f2736ba7565"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "H", ",", " ", "Z1", ",", " ", "Z2", ",", " ", "Z3", ",", " ", "z1Sol", ",",
    " ", "z2Sol", ",", " ", "z3Sol"}], "]"}]], "Input",
 CellChangeTimes->{{3.896979863198016*^9, 3.896979893926276*^9}, 
   3.896981776263473*^9, {3.8969820122500467`*^9, 3.896982013673253*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"70ce98c3-c827-426e-bfab-0684f33e5842"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sx1", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"sx", ",", " ", "id2", ",", " ", "id2"}], "]"}]}], ";", " ", 
  RowBox[{"sx2", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "sx", ",", " ", "id2"}], "]"}]}], ";", " ", 
  RowBox[{"sx3", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "id2", ",", " ", "sx"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sz1", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"sz", ",", " ", "id2", ",", " ", "id2"}], "]"}]}], ";", 
  RowBox[{"sz2", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "sz", ",", " ", "id2"}], "]"}]}], ";", 
  RowBox[{"sz3", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "id2", ",", " ", "sz"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.1"}], 
     RowBox[{"(", 
      RowBox[{"sx1", " ", "+", " ", "sx2", " ", "+", " ", "sx3"}], ")"}]}], 
    " ", "+", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"sz1", ".", "sz2"}], "+", 
      RowBox[{"sz1", ".", "sz3"}], "+", 
      RowBox[{"sz2", ".", "sz3"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z1", "[", "t_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z2", "[", "t_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["z2", 
       RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z3", "[", "t_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["z3", 
       RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.896978257936941*^9, 3.8969782638802032`*^9}, {
   3.8969783609198523`*^9, 3.896978367302927*^9}, {3.896978409841762*^9, 
   3.8969784849460773`*^9}, {3.896979897224099*^9, 3.896979916245682*^9}, {
   3.8969811136455708`*^9, 3.896981150259633*^9}, {3.89698120705234*^9, 
   3.896981287564788*^9}, {3.8969815333766937`*^9, 3.8969816120241957`*^9}, 
   3.896981772018119*^9, {3.896981838136853*^9, 3.8969818723440523`*^9}, {
   3.896982032020103*^9, 3.89698205049767*^9}, 3.8969829812260847`*^9, {
   3.896983035567071*^9, 3.896983036574911*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"59bb3519-21c8-4921-a4b7-7770b4017a68"],

Cell[BoxData[
 RowBox[{
  RowBox[{"z1Sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["Z1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{"heisEOM", "[", 
           RowBox[{"H", ",", 
            RowBox[{"Z1", "[", "t", "]"}]}], "]"}]}], "]"}], "\[Equal]", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "64"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Z1", "[", "0", "]"}], "\[Equal]", "sz1"}]}], "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Z1", "[", "t", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.896978488651032*^9, 3.896978578197036*^9}, {
   3.8969789708700933`*^9, 3.896979071409851*^9}, {3.896979263579727*^9, 
   3.896979285972986*^9}, {3.896979515257482*^9, 3.896979518822474*^9}, {
   3.896979578528962*^9, 3.896979584977188*^9}, {3.896981293795644*^9, 
   3.896981294718136*^9}, {3.896981364797228*^9, 3.896981367397428*^9}, {
   3.896981506542035*^9, 3.896981516125771*^9}, {3.8969816183499317`*^9, 
   3.8969816415214167`*^9}, {3.8969817942958403`*^9, 3.896981802311328*^9}, {
   3.896981877576458*^9, 3.896981909591454*^9}, {3.896982995576907*^9, 
   3.896983001840412*^9}, {3.8969847474710913`*^9, 3.896984770149144*^9}, 
   3.896985452558426*^9},
 CellLabel->
  "In[137]:=",ExpressionUUID->"726b2f15-9ba6-47d8-b8fc-5c606fe9d64e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"z1Sol", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896984772142252*^9, 3.8969848083490133`*^9}, 
   3.896985465189663*^9},
 CellLabel->
  "In[139]:=",ExpressionUUID->"bf3dc569-f342-45d1-90b9-d558746658cc"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwcnHc81e8XwGVnZScre2fvdY97Jcn6NqwIKSQJSSmjocyUkYRURlSSnVGE
IhKSQkbIHtlb+p37659e79flGee8n/N5Pvf5fAifPH/4NCUFBYUFIwUF+X+R
u38z0gRr9A8v/cN/s4Q39NJ7z7k/JpQ8qr7fhVxzOS9Tyv01QZNwaeUkcrz6
sD1zzBvCSQHP0Sfbs4R6RR83WvdqgnZo+X/3/84SArn+lf17UkdY2ptLMNya
JSTG7dffutNAcLJ2+Vi4MUt4vSu6bu3KZ0KRje/M6Nos4VN0u/GyWythf/dM
+tjKLGEulGns8ouvhDe3Tie+XZolBNW9ll598o1Qs/Fsr9cCtgcreYt3OglR
/WlfI2dmCaIhD+d9QrsJIqe/v6efmiXkv9NVnbvSQ6hj8QgLH58lNGrfLJ92
+0WwHtF8W/R7lvBSlyNY7fUAgV82IdVncJYw33Pqsd+LQcLb0uWVY79mCZpX
S98XZQ0RGqJXmt37ZgnBvPRDC09+EwJLKU8V9MwSPpTbUimnDhPa9j5RU/85
S2CwfSnm82CEkBk+1b7VNUuwXNvanx83Svg2bVqyE/nBA3O32TtjBFpvhtNO
nbOEfvUn4fIR44SQ2veKVMhiP+afnwudIDRPdu1f/DFL8LhI+pwbMkl4XB5d
qoif53Pen566MkUwfplwoAJ5pWiUWdZ/msBo0PzuDravd0RTwcNnhpDE8DAj
u3uWELoQYfnc8w/BULoohArH2xTb4zPuhv8b+Y6k9M4SwpMSG+OV5gjEPQfO
ePTPEuTcCXYqr+cIbEyN024DswRfutirvi/mCWy+HT9ah2cJXJ1aTOxSC4Te
vJh5qbFZQtmzodSCrAXCs/cJOTETs4Tt/apVc08WCVEZn6/b/ZklPOXqM78n
uEQYc/67I29ulmA4cuuXQuoSwVY4YO8E5m+8WN67dc8yQfxVuBHV8iwhKrST
4vyDZcLXK6bWS5h/+aPXYlm4VgghcU7jxehHu6i0SF7cCmEH16CxPvpzcfFr
oRnrKuHeqaXkyM1ZAk/dFdLMnVXCd51Y+vvoW2WcaEc04xph5rhLqi36eOJk
8ym5iDVC8Yha3HfkHcoXlz/TrhP2Wazuo0N/M3cI3j4buk6QLVtqncHPD3yt
52ak3CCUJs+xRSJPPjmf/SJkg3CDLyWsD9uP8ebRNPm7QUgwPrY9if0rQc2n
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
FY/g844lN7ahP6izqSvu/WJA0Whdnyb6y8BAVij2NwOC826NGhH5UPnyKbt5
BrwfFv2ZTuTbC6N+mgkw4TPppMsy5IM0eWGv5hImNGUph91sJOa7gz/KCjOh
3N2KdAD5tbBmun7hciZ8zDwwzkP+/RX2qRxawQS1xt/rwpGvo4yhFy0rmWA3
Gnlmsg6/v2Kd8l6uZsL6yPG2u4g/N/Tcz5Bnwm25kSXXEX+QsEm9uJ4JIs4F
TfWIa/a0JARsYoLRTfu1NGyv9Crrgr0yE758Es1ZjP0VfKw5S1djQoiLKE8A
5cmUJQVoazIhhyndr4/y3rZ96Sm/gwkk2ehdWcj3xJRdTkt0mZB3ztt2D+ob
15NnO7obccYGf6J+bbiiGu+jERNeP50R2Ij2CTySQSsnMcHrTmczsb/ZeTBp
52UGE0587OcvQn7bqUirBbGZMNrt2bQY45Gl+8UNjnuYYDiovoKL8cp47Jy4
ji0TpOSzDlehf3W28wmuO8SEJOPY+E5if69vwJzQESbsskvPbSLmt59OTIwf
ZUK+FXV3CvJL9o/Hj09uTOhvO2egO4rfj3qDPa88mRDhq302eQzfJ0H2bY+O
Y/+WURGV45gvlXyuSziJ9l5j/foRsX7At+91SCATnny2vsyawPzMuPH50dNM
2JbTxM5E3B1Gz2WHMaH2p4L/S8QtlZUZupGo7/0r/v8hrhU0SlGMZsIjkTk+
YcSvaM+viMShvA5qBSRsvyhaO3ryEhPcjy631cf+s+uyznReZYJySFXNOMp7
T0zZv+oGE96UxecT81Fq/funF6YywZ+dr3kex8vT5//5Gd9hgqe2dbUXMV/s
OOhbnMkE4WW+p0qJ+4f0V03+zWbC13rdu7vRnh/FzY7r5DPhtL/trUfI9+8v
MrzziplQICAQdRnfn97xbWOjZUwwWPHfw/WYv8w4CXqpVTJBuvJXYgORX+/W
GXWtYcKptxWLMtH/IhJHj92vY8Ktfs33z5EflweuDvc3MqHy4qFpIeSPXEmV
+4ZWJgw9rPRLRr7dufT756FPTOjIeDIVgnzc6qzkltLFBAH95y15yNcCg70/
OnqxvwCZ5QaIDSQjXFYPMIHReGRaAXHlYMHg3p/Yf3rkCVvEzJf9R6+MMkFn
NalhHHHL5ZUDjRNoP4PZh53Y/kEXspPYHybcmX24ew0xX2p4op/xD+Wzu7vt
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
MX5chZQCjP9Z2ccn/v3D+GB+fFMk2u//VlmDtA==
       "]]},
     Annotation[#, "Charting`Private`Tag$40735#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9924289403459146},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {0.9924289403459123, 0.999999999999668}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.896984773577137*^9, 3.896984808794896*^9}, {
  3.896985460758354*^9, 3.89698546602724*^9}},
 CellLabel->
  "Out[139]=",ExpressionUUID->"81bd6177-98f5-42c0-b3e3-326017b1f6f6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"z2Sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["Z2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{"heisEOM", "[", 
           RowBox[{"H", ",", 
            RowBox[{"Z2", "[", "t", "]"}]}], "]"}]}], "]"}], "\[Equal]", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "64"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Z2", "[", "0", "]"}], "\[Equal]", "sz2"}]}], "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Z2", "[", "t", "]"}], "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"z3Sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["Z3", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{"heisEOM", "[", 
           RowBox[{"H", ",", 
            RowBox[{"Z3", "[", "t", "]"}]}], "]"}]}], "]"}], "\[Equal]", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "64"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Z3", "[", "0", "]"}], "\[Equal]", "sz3"}]}], "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Z3", "[", "t", "]"}], "]"}], ",", "t"}], "]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"6698ec73-c572-4a39-8b50-0d8dd87314ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"comm", "[", 
  RowBox[{"sx", ",", " ", "sz"}], "]"}]], "Input",
 CellChangeTimes->{{3.8969932793251247`*^9, 3.8969932830196877`*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"2b79c0f0-bfef-4a2f-84a3-b24ee3e2a020"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.896993283953257*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"f22a012f-be2a-45cf-9f8e-52e0ca510d56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "sy"}]], "Input",
 CellChangeTimes->{{3.89699328656413*^9, 3.896993292563607*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"e2a3ece1-ed1e-45ff-b153-9061a33501f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896993289533833*^9, 3.89699329333076*^9}},
 CellLabel->
  "Out[177]=",ExpressionUUID->"b931f786-515e-4215-8799-1b669cc94835"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"comm", "[", 
  RowBox[{"sy", ",", "sz"}], "]"}]], "Input",
 CellChangeTimes->{{3.896993309238318*^9, 3.896993312436419*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"5ddc54bd-c40e-45b1-b9f6-2685620a6440"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8969933136800003`*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"cb9647da-ac30-4d81-af78-1e2fcb2f20e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[ImaginaryI]", " ", "sx"}]], "Input",
 CellChangeTimes->{{3.8969933190289097`*^9, 3.8969933277086906`*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"8505a167-8e64-40ea-804d-586bd6b6aa40"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.89699332793299*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"a629e78c-7508-4a61-9c1d-358c4bde0b0e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Try H = -\[CapitalGamma] (X1 + X2 + X3) + J(Z1Z2 + Z1Z3 + Z2Z3) + ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", 
     RowBox[{"1", " "}]], "Z1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a0d5cf1c-e5bd-49ce-a489-a23b254f2997"],
 "+ ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", 
     RowBox[{"2", " "}]], "Z2"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3b2e475f-3c08-4e44-ab1c-e5a8b3af7492"],
 "+ ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", 
     RowBox[{"3", " "}]], "Z3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9b60a614-a83b-485e-9f29-0e9e4ba9ee10"]
}], "Subsubsection",
 CellChangeTimes->{{3.89697820495123*^9, 3.896978246070537*^9}, {
   3.8969798161885853`*^9, 3.896979855086925*^9}, {3.896981072938651*^9, 
   3.896981077114258*^9}, {3.896981967280442*^9, 3.896981979207862*^9}, {
   3.896982015338512*^9, 3.8969820276400537`*^9}, 3.896982987432002*^9, {
   3.896985541309412*^9, 3.8969855504854307`*^9}, {3.897073303102707*^9, 
   3.897073364561502*^9}},ExpressionUUID->"1002164c-8861-44d7-bd3e-\
02126a58d2e2"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"H", ",", " ", "Z1", ",", " ", "Z2", ",", " ", "Z3"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.896979863198016*^9, 3.896979893926276*^9}, 
   3.896981776263473*^9, {3.8969820122500467`*^9, 3.896982013673253*^9}, {
   3.896989756630886*^9, 3.896989782950727*^9}, {3.897073434841201*^9, 
   3.897073437376178*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"a576deb4-3f0d-4789-8b51-c50180b6f029"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sx1", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"sx", ",", " ", "id2", ",", " ", "id2"}], "]"}]}], ";", " ", 
  RowBox[{"sx2", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "sx", ",", " ", "id2"}], "]"}]}], ";", " ", 
  RowBox[{"sx3", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "id2", ",", " ", "sx"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sz1", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"sz", ",", " ", "id2", ",", " ", "id2"}], "]"}]}], ";", 
  RowBox[{"sz2", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "sz", ",", " ", "id2"}], "]"}]}], ";", 
  RowBox[{"sz3", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "id2", ",", " ", "sz"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sy1", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"sy", ",", " ", "id2", ",", " ", "id2"}], "]"}]}], ";", 
  RowBox[{"sy2", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "sy", ",", " ", "id2"}], "]"}]}], ";", 
  RowBox[{"sy3", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "id2", ",", " ", "sy"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[CapitalGamma]"}], 
     RowBox[{"(", 
      RowBox[{"sx1", " ", "+", " ", "sx2", " ", "+", " ", "sx3"}], ")"}]}], 
    " ", "+", " ", 
    RowBox[{"J", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"sz1", ".", "sz2"}], "+", 
       RowBox[{"sz1", ".", "sz3"}], "+", 
       RowBox[{"sz2", ".", "sz3"}]}], ")"}]}], " ", "+", " ", 
    RowBox[{"h1", " ", "sz1"}], " ", "+", " ", 
    RowBox[{"h2", " ", "sz2"}], " ", "+", " ", 
    RowBox[{"h3", " ", "sz3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z1", "[", "t_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z2", "[", "t_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["z2", 
       RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z3", "[", "t_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["z3", 
       RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.896978257936941*^9, 3.8969782638802032`*^9}, {
   3.8969783609198523`*^9, 3.896978367302927*^9}, {3.896978409841762*^9, 
   3.8969784849460773`*^9}, {3.896979897224099*^9, 3.896979916245682*^9}, {
   3.8969811136455708`*^9, 3.896981150259633*^9}, {3.89698120705234*^9, 
   3.896981287564788*^9}, {3.8969815333766937`*^9, 3.8969816120241957`*^9}, 
   3.896981772018119*^9, {3.896981838136853*^9, 3.8969818723440523`*^9}, {
   3.896982032020103*^9, 3.89698205049767*^9}, 3.8969829812260847`*^9, {
   3.896983035567071*^9, 3.896983036574911*^9}, {3.897073371281869*^9, 
   3.8970733945447083`*^9}, {3.89707552873275*^9, 3.897075544979154*^9}, {
   3.8970767194185*^9, 3.897076719649094*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"26600b75-b5af-4493-b6ce-b13f0da79953"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"ut", ",", " ", "udgt", ",", " ", "matExpZ1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut", " ", "=", " ", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "H"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"udgt", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Conjugate", "[", "ut", "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matExpZ1", " ", "=", " ", 
   RowBox[{"udgt", ".", "sz1", ".", "ut"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.896989749087878*^9, 3.8969898038933783`*^9}, {
  3.897056511527418*^9, 3.897056559220276*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"6fc36715-13b2-402b-a422-f5e93a1d61bd"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.89707673788901*^9},
 CellLabel->
  "Out[296]=",ExpressionUUID->"543c0af5-2363-468d-94c6-17c69a8b2d37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"z1Sol", "=", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["Z1", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "+", 
           RowBox[{"2", " ", "\[CapitalGamma]", " ", 
            RowBox[{"udgt", ".", "sy1", ".", "ut"}]}]}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[CapitalGamma]", "->", "0.1"}], ",", 
            RowBox[{"J", "->", "1"}], ",", 
            RowBox[{"h1", "->", "0"}], ",", 
            RowBox[{"h2", "->", "0"}], ",", 
            RowBox[{"h3", "->", "0"}]}], "}"}]}], "]"}], "\[Equal]", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "64"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Z1", "[", "0", "]"}], "\[Equal]", "sz1"}]}], "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Z1", "[", "t", "]"}], "]"}], ",", "t"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8970754841858997`*^9, 3.8970755207243032`*^9}, 
   3.897075671713615*^9},
 CellLabel->
  "In[278]:=",ExpressionUUID->"c70aadcf-e080-466e-9065-b7f213984cbb"],

Cell[BoxData[
 TemplateBox[{
  "FactorSquareFree", "lrgexp", 
   "\"Exponent is out of bounds for function \
\\!\\(\\*RowBox[{\\\"FactorSquareFree\\\"}]\\).\"", 2, 278, 13, 
   26115282580420316454, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.89707568565847*^9},
 CellLabel->
  "During evaluation of \
In[278]:=",ExpressionUUID->"aa74ae91-7490-45b2-bc27-b261ef275d8a"],

Cell[BoxData[
 TemplateBox[{
  "FactorSquareFree", "lrgexp", 
   "\"Exponent is out of bounds for function \
\\!\\(\\*RowBox[{\\\"FactorSquareFree\\\"}]\\).\"", 2, 278, 14, 
   26115282580420316454, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8970756867441263`*^9},
 CellLabel->
  "During evaluation of \
In[278]:=",ExpressionUUID->"1f564412-1257-489e-9c8c-7a17c1a20f61"],

Cell[BoxData[
 TemplateBox[{
  "FactorSquareFree", "lrgexp", 
   "\"Exponent is out of bounds for function \
\\!\\(\\*RowBox[{\\\"FactorSquareFree\\\"}]\\).\"", 2, 278, 15, 
   26115282580420316454, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8970756873416862`*^9},
 CellLabel->
  "During evaluation of \
In[278]:=",ExpressionUUID->"47606f44-a7c9-4733-932d-666d8de456d4"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"FactorSquareFree\\\", \
\\\"::\\\", \\\"lrgexp\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 278, 16, 26115282580420316454, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.897075687454112*^9},
 CellLabel->
  "During evaluation of \
In[278]:=",ExpressionUUID->"2bca4161-ff6e-458a-8cd2-fce0958c2d0e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"z1Sol", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"t", "->", "0.1"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.897075831492303*^9, 3.8970758742533617`*^9}, 
   3.897076222611732*^9},
 CellLabel->
  "In[284]:=",ExpressionUUID->"a5f6c365-b40b-4bf7-9802-16948eea4c17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"z1Sol", "=", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["Z1", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "-", 
           RowBox[{"heisEOM", "[", 
            RowBox[{"H", ",", " ", 
             RowBox[{"Z1", "[", "t", "]"}]}], "]"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[CapitalGamma]", "->", "0.1"}], ",", 
            RowBox[{"J", "->", "1"}], ",", 
            RowBox[{"h1", "->", "0"}], ",", 
            RowBox[{"h2", "->", "0"}], ",", 
            RowBox[{"h3", "->", "0"}]}], "}"}]}], "]"}], "\[Equal]", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "64"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Z1", "[", "0", "]"}], "\[Equal]", "sz1"}]}], "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Z1", "[", "t", "]"}], "]"}], ",", "t"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.897076232764538*^9, 3.8970762879419947`*^9}, {
  3.897076759252755*^9, 
  3.8970767723947077`*^9}},ExpressionUUID->"68a7d2b7-31a4-4f91-8220-\
971b61c9a361"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.897076538496722*^9},
 CellLabel->
  "Out[286]=",ExpressionUUID->"cbb94d83-10f5-425d-906a-094eb40a5d90"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"z1Sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["Z1", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "-", 
           RowBox[{"heisEOM", "[", 
            RowBox[{"H", ",", " ", 
             RowBox[{"Z1", "[", "t", "]"}]}], "]"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[CapitalGamma]", "->", "0.1"}], ",", 
            RowBox[{"J", "->", "1"}], ",", 
            RowBox[{"h1", "->", "0"}], ",", 
            RowBox[{"h2", "->", "0"}], ",", 
            RowBox[{"h3", "->", "0"}]}], "}"}]}], "]"}], "\[Equal]", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "64"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Z1", "[", "0", "]"}], "\[Equal]", "sz1"}]}], "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Z1", "[", "t", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.897076777577664*^9, 3.897076779137719*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"402df7cc-4aa0-4415-a2e5-9ff9ba9677e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"phi0", " ", "=", " ", 
   RowBox[{"formVec", "[", "\"\<uud\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8970767805712433`*^9, 3.89707681913872*^9}, {
  3.8970769037795687`*^9, 3.897076977164852*^9}},
 CellLabel->
  "In[324]:=",ExpressionUUID->"4f95d862-0745-450c-8b95-5f110f1240cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "\[CapitalGamma]", " ", 
   RowBox[{"udgt", ".", "sy1", ".", "ut"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[CapitalGamma]", "->", "0.1"}], ",", 
    RowBox[{"J", "->", "1"}], ",", 
    RowBox[{"h1", "->", "0"}], ",", 
    RowBox[{"h2", "->", "0"}], ",", 
    RowBox[{"h3", "->", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8970756353743753`*^9, 3.897075654647072*^9}},
 CellLabel->
  "In[277]:=",ExpressionUUID->"d24d3919-8e17-481d-8e6d-5616acb5a373"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], ",", 
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], ",", 
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], ",", 
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], ",", 
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], ",", 
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], ",", 
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], ",", 
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}]}], 
           "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], ",", 
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], ",", 
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], ",", 
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], ",", 
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], ",", 
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], ",", 
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], ",", 
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}]}], 
           "}"}], ",", 
         TemplateBox[{"2"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"0.2`", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "8"]}], " ", "\[ImaginaryI]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "+", 
                    TemplateBox[{"6"}, "OutputSizeLimit`Skeleton"]}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], " ", "\[ImaginaryI]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.05241424183466933`"}], " ", 
                    RowBox[{"Im", "[", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.8078784028330984`", " ", "\[ImaginaryI]"}]}], 
                    ")"}], " ", "t"}]], "]"}]}], "+", 
                    RowBox[{"0.015625`", " ", 
                    RowBox[{"Im", "[", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.899999999999481`", " ", "\[ImaginaryI]"}]}], 
                    ")"}], " ", "t"}]], "]"}]}], "+", 
                    RowBox[{"0.04745789978815001`", " ", 
                    RowBox[{"Im", "[", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"1.2071307505701974`", " ", "\[ImaginaryI]"}]}], 
                    ")"}], " ", "t"}]], "]"}]}], "-", 
                    RowBox[{"0.04745789984422505`", " ", 
                    RowBox[{"Im", "[", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"3.007130750570972`", " ", "\[ImaginaryI]"}]}], 
                    ")"}], " ", "t"}]], "]"}]}], "+", 
                    RowBox[{"0.0524142419299618`", " ", 
                    RowBox[{"Im", "[", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"3.0078784028331893`", " ", "\[ImaginaryI]"}]}], 
                    ")"}], " ", "t"}]], "]"}]}]}], ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1900.7105516712513`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.00002757613029957806`", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.8078784028330984`", " ", "\[ImaginaryI]"}]}], 
                    ")"}], " ", "t"}]]}]}], ")"}]}], "+", 
                    RowBox[{"1.125899906842624`*^15", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"1.3877787807814457`*^-17", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], ")"}], 
                    " ", "t"}]]}]}], ")"}]}], "+", 
                    RowBox[{"1041.9517493020987`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"3"}, "OutputSizeLimit`Skeleton"], 
                    "\[VeryThinSpace]"}], "+", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], ")"}]}],
                     "+", 
                    RowBox[{"2.5845225305421753`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.01836234711959328`", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]]}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2.581629310114237`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.020302776128476197`", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"3.0078784028331893`", " ", "\[ImaginaryI]"}]}], 
                    ")"}], " ", "t"}]]}]}], ")"}]}]}], "]"}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                   TemplateBox[{"9"}, "OutputSizeLimit`Skeleton"], "+", 
                   TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], ")"}]}], 
             ",", 
             TemplateBox[{"6"}, "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"0.2`", " ", 
               TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}]}], "}"}], ",", 
         RowBox[{"{", 
           TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "}"}], ",", 
         RowBox[{"{", 
           TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "}"}]}], "}"}], 
     Short[#, 16]& ], "line" -> 277, "sessionID" -> 26115282580420316454, 
   "byteCount" -> 3346792, "size" -> 16, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.897075661416892*^9},
 CellLabel->
  "Out[277]=",ExpressionUUID->"4a2aea33-4639-4294-94f3-0326d13d6b46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"z1Sol", "=", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["Z1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{"heisEOM", "[", 
           RowBox[{"H", ",", 
            RowBox[{"Z1", "[", "t", "]"}]}], "]"}]}], "]"}], "\[Equal]", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "64"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Z1", "[", "0", "]"}], "\[Equal]", "sz1"}]}], "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Z1", "[", "t", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.896978488651032*^9, 3.896978578197036*^9}, {
   3.8969789708700933`*^9, 3.896979071409851*^9}, {3.896979263579727*^9, 
   3.896979285972986*^9}, {3.896979515257482*^9, 3.896979518822474*^9}, {
   3.896979578528962*^9, 3.896979584977188*^9}, {3.896981293795644*^9, 
   3.896981294718136*^9}, {3.896981364797228*^9, 3.896981367397428*^9}, {
   3.896981506542035*^9, 3.896981516125771*^9}, {3.8969816183499317`*^9, 
   3.8969816415214167`*^9}, {3.8969817942958403`*^9, 3.896981802311328*^9}, {
   3.896981877576458*^9, 3.896981909591454*^9}, {3.896982995576907*^9, 
   3.896983001840412*^9}, {3.8969847474710913`*^9, 3.896984770149144*^9}, 
   3.896985452558426*^9, 3.8970737403245907`*^9},
 CellLabel->
  "In[268]:=",ExpressionUUID->"68341ccd-9487-496f-aa95-436ae45c626f"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.897073742727206*^9},
 CellLabel->
  "Out[268]=",ExpressionUUID->"c987c256-1449-4b0f-ab87-47e92260d584"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"z1Sol", "=", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["Z1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-"}], "]"}], 
        "\[Equal]", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "64"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Z1", "[", "0", "]"}], "\[Equal]", "sz1"}]}], "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Z1", "[", "t", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.897073749059203*^9},ExpressionUUID->"55be65f6-98d4-4f54-b3db-\
73fe5a3e5dd2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"z2Sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["Z2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{"heisEOM", "[", 
           RowBox[{"H", ",", 
            RowBox[{"Z2", "[", "t", "]"}]}], "]"}]}], "]"}], "\[Equal]", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "64"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Z2", "[", "0", "]"}], "\[Equal]", "sz2"}]}], "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Z2", "[", "t", "]"}], "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"z3Sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["Z3", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{"heisEOM", "[", 
           RowBox[{"H", ",", 
            RowBox[{"Z3", "[", "t", "]"}]}], "]"}]}], "]"}], "\[Equal]", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "64"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Z3", "[", "0", "]"}], "\[Equal]", "sz3"}]}], "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Z3", "[", "t", "]"}], "]"}], ",", "t"}], "]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"5e84ffe7-2f8c-4e3a-86ae-3aec6b0cfe6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"z1Sol", "=", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["Z1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{"heisEOM", "[", 
           RowBox[{"H", ",", 
            RowBox[{"Z1", "[", "t", "]"}]}], "]"}]}], "]"}], "\[Equal]", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "64"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Z1", "[", "0", "]"}], "\[Equal]", "sz1"}]}], "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Z1", "[", "t", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8970818148248863`*^9, 
  3.897081821306653*^9}},ExpressionUUID->"7a119d9f-3afb-40c3-8ef0-\
1534dd74f962"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Z1", "'"}], "[", "t", "]"}], ")"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.897081838620199*^9, 3.8970818451869698`*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"1051bebb-dd67-448b-b93f-e9a04715c5d9"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   SubscriptBox["z1", 
    RowBox[{"1", ",", "2"}]], "\[Prime]",
   MultilineFunction->None], "[", "t", "]"}]], "Output",
 CellChangeTimes->{3.8970818456428747`*^9},
 CellLabel->
  "Out[334]=",ExpressionUUID->"259c0972-da27-4ca8-ac3b-081016513bff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"k", ",", " ", "l", ",", " ", "j"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", " ", "=", " ", "1"}], ";", " ", 
  RowBox[{"l", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp0", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Z1", "'"}], "[", "t", "]"}], ")"}], "[", 
    RowBox[{"[", 
     RowBox[{"k", ",", "l"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp1", " ", "=", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"[", 
        RowBox[{"k", ",", "j"}], "]"}], "]"}], "*", 
      RowBox[{
       RowBox[{"Z1", "[", "t", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"j", ",", " ", "l"}], "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp2", " ", "=", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Z1", "[", "t", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"k", ",", " ", "j"}], "]"}], "]"}], "*", 
      RowBox[{"H", "[", 
       RowBox[{"[", 
        RowBox[{"j", ",", "l"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"temp0", " ", "-", 
       RowBox[{"\[ImaginaryI]", 
        RowBox[{"(", 
         RowBox[{"temp1", "-", "temp2"}], ")"}]}]}], "==", "0"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Z1", "[", "0", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"k", ",", "l"}], "]"}], "]"}], "==", 
      RowBox[{"sz1", "[", 
       RowBox[{"[", 
        RowBox[{"k", ",", "l"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{
    SubscriptBox["z1", 
     RowBox[{"k", ",", "l"}]], "[", "t", "]"}], ",", "t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.897081858763769*^9, 3.89708191362884*^9}, {
  3.8970822755805063`*^9, 3.8970823706869507`*^9}, {3.897138202271923*^9, 
  3.897138216574769*^9}, {3.897138264503784*^9, 3.8971382886706467`*^9}, {
  3.897138462305867*^9, 3.897138465366643*^9}, {3.8971398022288103`*^9, 
  3.897139802323003*^9}},
 CellLabel->
  "In[456]:=",ExpressionUUID->"d3870d17-56b2-4e43-940f-fe72093e31a1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["z1", 
      RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"1", "+", 
     TemplateBox[{
       RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"\[CapitalGamma]", " ", 
               RowBox[{
                 SubscriptBox["z1", 
                  RowBox[{"1", ",", "2"}]], "[", 
                 RowBox[{"K", "[", "1", "]"}], "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]", " ", 
               RowBox[{
                 SubscriptBox["z1", 
                  RowBox[{"1", ",", "3"}]], "[", 
                 RowBox[{"K", "[", "1", "]"}], "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]", " ", 
               RowBox[{
                 SubscriptBox["z1", 
                  RowBox[{"1", ",", "5"}]], "[", 
                 RowBox[{"K", "[", "1", "]"}], "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]", " ", 
               RowBox[{
                 SubscriptBox["z1", 
                  RowBox[{"2", ",", "1"}]], "[", 
                 RowBox[{"K", "[", "1", "]"}], "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]", " ", 
               RowBox[{
                 SubscriptBox["z1", 
                  RowBox[{"3", ",", "1"}]], "[", 
                 RowBox[{"K", "[", "1", "]"}], "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]", " ", 
               RowBox[{
                 SubscriptBox["z1", 
                  RowBox[{"5", ",", "1"}]], "[", 
                 RowBox[{"K", "[", "1", "]"}], "]"}]}]}], ")"}]}], 
       RowBox[{"K", "[", "1", "]"}], "0", "t"},
      "InactiveIntegrate",
      DisplayFunction->(RowBox[{
         SubsuperscriptBox[
          StyleBox["\[Integral]", "Inactive"], #3, #4], 
         RowBox[{#, 
           RowBox[{
             StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
      InterpretationFunction->(RowBox[{
         RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.897081879348672*^9, {3.8970822828299026`*^9, 3.89708233179105*^9}, 
   3.897082372195775*^9, {3.897138206060876*^9, 3.897138217334013*^9}, {
   3.897138271803142*^9, 3.897138289246255*^9}, 3.8971384658197393`*^9, {
   3.8971397976739283`*^9, 3.8971398027981243`*^9}},
 CellLabel->
  "Out[461]=",ExpressionUUID->"8804bd82-cfbe-4bca-8a5f-f87ee337c4cc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Try H = -\[CapitalGamma](X1 + X2 + X3) + J (Z1Z2 + Z1Z3 + Z2Z3) + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "Z1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "24424071-c1e3-47d8-8ea0-74ead062bac4"],
 "+ ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "Z2"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "84a7208c-9725-46db-91d2-d27679847963"],
 "+ ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "Z3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5811f94a-82f1-4128-986c-a3fe7768e907"]
}], "Subsubsection",
 CellChangeTimes->{{3.89697820495123*^9, 3.896978246070537*^9}, {
   3.8969798161885853`*^9, 3.896979855086925*^9}, {3.896981072938651*^9, 
   3.896981077114258*^9}, {3.896981967280442*^9, 3.896981979207862*^9}, {
   3.896982015338512*^9, 3.8969820276400537`*^9}, 3.896982987432002*^9, {
   3.896985541309412*^9, 3.8969855504854307`*^9}, {3.897073303102707*^9, 
   3.897073364561502*^9}, {3.8971385906954937`*^9, 3.897138603021418*^9}, {
   3.8971386877919073`*^9, 
   3.8971386973901253`*^9}},ExpressionUUID->"cbd746c2-1602-49b2-b3c8-\
394e6fff7a8e"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"H", ",", " ", "Z1", ",", " ", "Z2", ",", " ", "Z3"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.896979863198016*^9, 3.896979893926276*^9}, 
   3.896981776263473*^9, {3.8969820122500467`*^9, 3.896982013673253*^9}, {
   3.896989756630886*^9, 3.896989782950727*^9}, {3.897073434841201*^9, 
   3.897073437376178*^9}},
 CellLabel->
  "In[709]:=",ExpressionUUID->"64fd395f-7521-417f-b9ab-94a887351598"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sx1", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"sx", ",", " ", "id2", ",", " ", "id2"}], "]"}]}], ";", " ", 
  RowBox[{"sx2", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "sx", ",", " ", "id2"}], "]"}]}], ";", " ", 
  RowBox[{"sx3", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "id2", ",", " ", "sx"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sz1", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"sz", ",", " ", "id2", ",", " ", "id2"}], "]"}]}], ";", 
  RowBox[{"sz2", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "sz", ",", " ", "id2"}], "]"}]}], ";", 
  RowBox[{"sz3", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "id2", ",", " ", "sz"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sy1", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"sy", ",", " ", "id2", ",", " ", "id2"}], "]"}]}], ";", 
  RowBox[{"sy2", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "sy", ",", " ", "id2"}], "]"}]}], ";", 
  RowBox[{"sy3", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"id2", ",", " ", "id2", ",", " ", "sy"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[CapitalGamma]"}], 
     RowBox[{"(", 
      RowBox[{"sx1", " ", "+", " ", "sx2", " ", "+", " ", "sx3"}], ")"}]}], 
    " ", "+", " ", 
    RowBox[{"J", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"sz1", ".", "sz2"}], "+", 
       RowBox[{"sz1", ".", "sz3"}], "+", 
       RowBox[{"sz2", ".", "sz3"}]}], ")"}]}], " ", "+", " ", 
    RowBox[{"h1", " ", "sz1"}], " ", "+", " ", 
    RowBox[{"h2", " ", "sz2"}], " ", "+", " ", 
    RowBox[{"h3", " ", "sz3z"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z1", "[", "t_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["z1", 
       RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z2", "[", "t_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["z2", 
       RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z3", "[", "t_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["z3", 
       RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.896978257936941*^9, 3.8969782638802032`*^9}, {
   3.8969783609198523`*^9, 3.896978367302927*^9}, {3.896978409841762*^9, 
   3.8969784849460773`*^9}, {3.896979897224099*^9, 3.896979916245682*^9}, {
   3.8969811136455708`*^9, 3.896981150259633*^9}, {3.89698120705234*^9, 
   3.896981287564788*^9}, {3.8969815333766937`*^9, 3.8969816120241957`*^9}, 
   3.896981772018119*^9, {3.896981838136853*^9, 3.8969818723440523`*^9}, {
   3.896982032020103*^9, 3.89698205049767*^9}, 3.8969829812260847`*^9, {
   3.896983035567071*^9, 3.896983036574911*^9}, {3.897073371281869*^9, 
   3.8970733945447083`*^9}, {3.89707552873275*^9, 3.897075544979154*^9}, {
   3.8970767194185*^9, 3.897076719649094*^9}, {3.89713861187943*^9, 
   3.897138619414378*^9}, 3.8971386577067413`*^9, 3.897404961833753*^9},
 CellLabel->
  "In[710]:=",ExpressionUUID->"facf8d4f-39e5-424b-bbf0-0391f2936859"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solving with \[CapitalGamma] = 0.1, J = 1, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", "i"], " ", "=", " ", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c68c5dc2-471a-4820-9c69-025ab90e7c7d"]
}], "Subsubsection",
 CellChangeTimes->{{3.8971386634392242`*^9, 
  3.8971386799846992`*^9}},ExpressionUUID->"f5bebd0d-37eb-486d-960a-\
a91a86c9643a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalGamma]", "->", "0.1"}], ",", 
     RowBox[{"J", "->", "1"}], ",", 
     RowBox[{"h1", "->", "0"}], ",", 
     RowBox[{"h2", "->", "0"}], ",", 
     RowBox[{"h3", "->", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tf", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z1Sol", "=", 
   RowBox[{"First", "[", 
    RowBox[{
     RowBox[{"Z1", "[", "t", "]"}], "/.", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              SuperscriptBox["Z1", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "-", 
             RowBox[{"heisEOM", "[", 
              RowBox[{"H", ",", " ", 
               RowBox[{"Z1", "[", "t", "]"}]}], "]"}]}], "/.", "params"}], 
           "]"}], "\[Equal]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", "64"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Z1", "[", "0", "]"}], "\[Equal]", "sz1"}]}], "}"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Z1", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tf"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z2Sol", "=", 
   RowBox[{"First", "[", 
    RowBox[{
     RowBox[{"Z2", "[", "t", "]"}], "/.", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              SuperscriptBox["Z2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "-", 
             RowBox[{"heisEOM", "[", 
              RowBox[{"H", ",", " ", 
               RowBox[{"Z2", "[", "t", "]"}]}], "]"}]}], "/.", "params"}], 
           "]"}], "\[Equal]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", "64"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Z2", "[", "0", "]"}], "\[Equal]", "sz2"}]}], "}"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Z2", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tf"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z3Sol", "=", 
   RowBox[{"First", "[", 
    RowBox[{
     RowBox[{"Z3", "[", "t", "]"}], "/.", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              SuperscriptBox["Z3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "-", 
             RowBox[{"heisEOM", "[", 
              RowBox[{"H", ",", " ", 
               RowBox[{"Z3", "[", "t", "]"}]}], "]"}]}], "/.", "params"}], 
           "]"}], "\[Equal]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", "64"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Z3", "[", "0", "]"}], "\[Equal]", "sz3"}]}], "}"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Z3", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tf"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiSol", " ", "=", " ", 
   RowBox[{"z1Sol", " ", "+", " ", 
    RowBox[{"z2Sol", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"\[ImaginaryI]", " ", "2", " ", 
       RowBox[{"\[Pi]", " ", "/", " ", "3"}]}], "]"}]}], " ", "+", " ", 
    RowBox[{"z3Sol", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"\[ImaginaryI]", " ", "4", " ", 
       RowBox[{"\[Pi]", " ", "/", "3"}]}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.897076777577664*^9, 3.897076779137719*^9}, {
  3.897138971642777*^9, 3.897138974529207*^9}, {3.897139012545874*^9, 
  3.8971391018651667`*^9}, {3.8971395406683064`*^9, 3.8971395525061703`*^9}, {
  3.897139727284042*^9, 3.897139757904883*^9}},
 CellLabel->
  "In[444]:=",ExpressionUUID->"6078a5be-23dc-4b16-9be8-5282b03c64b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"params2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalGamma]", "->", "0.1"}], ",", 
     RowBox[{"J", "->", "1"}], ",", 
     RowBox[{"h1", "->", "1"}], ",", 
     RowBox[{"h2", "->", "0"}], ",", 
     RowBox[{"h3", "->", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tf", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z1Solh1", "=", 
   RowBox[{"First", "[", 
    RowBox[{
     RowBox[{"Z1", "[", "t", "]"}], "/.", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              SuperscriptBox["Z1", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "-", 
             RowBox[{"heisEOM", "[", 
              RowBox[{"H", ",", " ", 
               RowBox[{"Z1", "[", "t", "]"}]}], "]"}]}], "/.", "params2"}], 
           "]"}], "\[Equal]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", "64"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Z1", "[", "0", "]"}], "\[Equal]", "sz1"}]}], "}"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Z1", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tf"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z2Solh1", "=", 
   RowBox[{"First", "[", 
    RowBox[{
     RowBox[{"Z2", "[", "t", "]"}], "/.", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              SuperscriptBox["Z2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "-", 
             RowBox[{"heisEOM", "[", 
              RowBox[{"H", ",", " ", 
               RowBox[{"Z2", "[", "t", "]"}]}], "]"}]}], "/.", "params2"}], 
           "]"}], "\[Equal]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", "64"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Z2", "[", "0", "]"}], "\[Equal]", "sz2"}]}], "}"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Z2", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tf"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z3Solh1", "=", 
   RowBox[{"First", "[", 
    RowBox[{
     RowBox[{"Z3", "[", "t", "]"}], "/.", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              SuperscriptBox["Z3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "-", 
             RowBox[{"heisEOM", "[", 
              RowBox[{"H", ",", " ", 
               RowBox[{"Z3", "[", "t", "]"}]}], "]"}]}], "/.", "params2"}], 
           "]"}], "\[Equal]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", "64"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Z3", "[", "0", "]"}], "\[Equal]", "sz3"}]}], "}"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Z3", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tf"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiSolh1", " ", "=", " ", 
   RowBox[{"z1Solh1", " ", "+", " ", 
    RowBox[{"z2Solh1", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"\[ImaginaryI]", " ", "2", " ", 
       RowBox[{"\[Pi]", " ", "/", " ", "3"}]}], "]"}]}], " ", "+", " ", 
    RowBox[{"z3Solh1", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"\[ImaginaryI]", " ", "4", " ", 
       RowBox[{"\[Pi]", " ", "/", "3"}]}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.897145025972229*^9, 3.89714504689856*^9}},
 CellLabel->
  "In[640]:=",ExpressionUUID->"679e9c50-1407-4795-83cc-69ef7b79711e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"params2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalGamma]", "->", "0.1"}], ",", 
     RowBox[{"J", "->", "1"}], ",", 
     RowBox[{"h1", "->", "1"}], ",", 
     RowBox[{"h2", "->", "1"}], ",", 
     RowBox[{"h3", "->", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tf", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z1Solh1", "=", 
   RowBox[{"First", "[", 
    RowBox[{
     RowBox[{"Z1", "[", "t", "]"}], "/.", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              SuperscriptBox["Z1", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "-", 
             RowBox[{"heisEOM", "[", 
              RowBox[{"H", ",", " ", 
               RowBox[{"Z1", "[", "t", "]"}]}], "]"}]}], "/.", "params2"}], 
           "]"}], "\[Equal]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", "64"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Z1", "[", "0", "]"}], "\[Equal]", "sz1"}]}], "}"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Z1", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tf"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z2Solh1", "=", 
   RowBox[{"First", "[", 
    RowBox[{
     RowBox[{"Z2", "[", "t", "]"}], "/.", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              SuperscriptBox["Z2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "-", 
             RowBox[{"heisEOM", "[", 
              RowBox[{"H", ",", " ", 
               RowBox[{"Z2", "[", "t", "]"}]}], "]"}]}], "/.", "params2"}], 
           "]"}], "\[Equal]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", "64"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Z2", "[", "0", "]"}], "\[Equal]", "sz2"}]}], "}"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Z2", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tf"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z3Solh1", "=", 
   RowBox[{"First", "[", 
    RowBox[{
     RowBox[{"Z3", "[", "t", "]"}], "/.", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              SuperscriptBox["Z3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "-", 
             RowBox[{"heisEOM", "[", 
              RowBox[{"H", ",", " ", 
               RowBox[{"Z3", "[", "t", "]"}]}], "]"}]}], "/.", "params2"}], 
           "]"}], "\[Equal]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", "64"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Z3", "[", "0", "]"}], "\[Equal]", "sz3"}]}], "}"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Z3", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tf"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiSolh1", " ", "=", " ", 
   RowBox[{"z1Solh1", " ", "+", " ", 
    RowBox[{"z2Solh1", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"\[ImaginaryI]", " ", "2", " ", 
       RowBox[{"\[Pi]", " ", "/", " ", "3"}]}], "]"}]}], " ", "+", " ", 
    RowBox[{"z3Solh1", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"\[ImaginaryI]", " ", "4", " ", 
       RowBox[{"\[Pi]", " ", "/", "3"}]}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.897149683912569*^9, 3.8971496840234632`*^9}},
 CellLabel->
  "In[677]:=",ExpressionUUID->"5a2d5f29-7a8e-43e7-be49-f7821cea8fc0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Analysis of solution for \[OpenCurlyDoubleQuote]diagonal element,\
\[CloseCurlyDoubleQuote] i.e. applied to |up up down>\
\>", "Subsubsection",
 CellChangeTimes->{{3.897141633264501*^9, 
  3.8971416544045343`*^9}},ExpressionUUID->"d54f113c-b306-4745-bbc5-\
81b7e12cb744"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"formVec", "[", "\"\<uud\>\"", "]"}], ".", "z1Sol", ".", 
    RowBox[{"formVec", "[", "\"\<uud\>\"", "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.897139556163664*^9, 3.897139586585956*^9}},
 CellLabel->
  "In[440]:=",ExpressionUUID->"ced500c8-9557-446f-a40a-9b4dbeef5b83"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
62b6YAQTROqzLxn/uoH+B9JQaCU=
       "]], LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAhNzWvl+dWECgW8nzWsCJv67Ho9VZ
n1hApoFFPGUNkL/d3IceI6hYQNIajKDfFZ6/OgdQsLW5WECEkMfKCb2sv4YM
iQLou1hAsO0E6Ztrrr/REcJUGr5YQHq37Y6LDLC/aBw0+X7CWEDgIeEf+Lix
v5cxGEJIy1hAkgQT0AcStb/0W+DT2txYQDdgV0975bu/QGEZJg3fWECRUPgG
5sS8v4tmUng/4VhAuowIOIGlvb8iccQcpOVYQOdnSEoaar+/UYaoZW3uWECH
0HViJn/Bv5yL4bef8FhASP3KcnHywb/okBoK0vJYQDYxdyLiZcK/gJuMrjb3
WEBvrfOn10zDv8ygxQBp+VhAnpQVlCzAw78Xpv5Sm/tYQBqfixFIM8S/Yqs3
pc39WECKw+NXEqbEv66wcPf//1hAcXR4ZXQYxb+CSahB
       "]]},
     Annotation[#, "Charting`Private`Tag$280630#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {-0.49680684848362233`, 0.999999999999668}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8971395695107203`*^9, 3.897139587000399*^9}},
 CellLabel->
  "Out[440]=",ExpressionUUID->"76e7b503-d172-4b6b-85e7-0f44bd93e5b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"z1Sol", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"z2Sol", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"z3Sol", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(Z\), \(1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(Z\), \(2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(Z\), \(3\)]\)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.897139604508113*^9, 3.8971396268025103`*^9}, {
  3.897139675777457*^9, 3.897139687618862*^9}, {3.897139838908675*^9, 
  3.897139854648733*^9}, {3.8971398916999617`*^9, 3.8971399944025173`*^9}},
 CellLabel->
  "In[469]:=",ExpressionUUID->"10d6f194-b7aa-4e5b-8647-c767810c1113"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1: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
62b6YAQTROqzLxn/uoH+B9JQaCU=
          "]], 
         LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAhNzWvl+dWECgW8nzWsCJv67Ho9VZ
n1hApoFFPGUNkL/d3IceI6hYQNIajKDfFZ6/OgdQsLW5WECEkMfKCb2sv4YM
iQLou1hAsO0E6Ztrrr/REcJUGr5YQHq37Y6LDLC/aBw0+X7CWEDgIeEf+Lix
v5cxGEJIy1hAkgQT0AcStb/0W+DT2txYQDdgV0975bu/QGEZJg3fWECRUPgG
5sS8v4tmUng/4VhAuowIOIGlvb8iccQcpOVYQOdnSEoaar+/UYaoZW3uWECH
0HViJn/Bv5yL4bef8FhASP3KcnHywb/okBoK0vJYQDYxdyLiZcK/gJuMrjb3
WEBvrfOn10zDv8ygxQBp+VhAnpQVlCzAw78Xpv5Sm/tYQBqfixFIM8S/Yqs3
pc39WECKw+NXEqbEv66wcPf//1hAcXR4ZXQYxb+CSahB
          "]]}, Annotation[#, "Charting`Private`Tag$286943#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVWHc81d8bJ7LSslJSQki+9kXWeXCvVVFSVkMkIjMkK5KM7JUiVCqkJCvz
2ImSlX3vRSjERYQKv/v7/PN5vV/P6/Wc97POOe9zyMbVxG4LAwPDP0YGhv//
hWPXn2UcqNM0WdqkfzRUxnbkoLNDJiJNiUT003Gdz5tsCYcC5HvCXMqGjhOV
xs9vjylDjP+Up9I3aKhZ1t2exQGjV59b68LXacifd/P9ZlYDGtLZVX74Hw2l
JJA0/0V/QCQL8e4bf2ioYGdUw6pvG/r20Jf3xioNtUR16S/bf0Evmf7cE/lN
Q/N3Ob/75HWiu3FnZUN/0VBAQ8GRlaxuZOqguT91noY4tpy57vXgK9pilWt2
fpbuH36/+RXdh1YfblvsnKIhkdsPF9zvDqBxs6L11QkaelutrjjvO4Qas37E
do7S0EfVkPKf9lS0q47/9YN+Gnqlzh1IKBhBj6ZdboR209DC0JVMz7xRxMe/
oXS4nYYC97GNLWZ9Qyq97KZ+9TTUWG7BJJ8+jmoyk7fKV9H5WLwSdX8wgUy3
/3clrYSGHjwwsqdFf0ecXw3W772kIYpSVrh0xA9E7VjJYc+iIdHehVznu1Po
lmjKN5RK58eT/HPGdwYRRvZsfgijodb4Ifcf9jR0tiy096QtDYWnpnxMlJtH
a/v+0W5Y0JCUA7JUKJhHSf1nk42NaciDNd7PI28BqcZbuEuo0tAGSbFmPusX
Kk+dsb/KSUNPeMlGcQeW0PMjbpOaDDREnAilyqQvIbM7OhHtv+bQ/bt9DK4P
ltF/3O++cg/OIf4GX53Z6BX0VbXbTvXZHKpMEOmJ2raKghYV174kzaGLNp+u
SEWsIq09tz4J3ptD2YwH7jndXUMVl5Y6xuznkBzUtUz5/kVOivYJeyTmkGE1
q9Gk/SaKX7LKcUqbRXKbNst885uo5353LmfYLIoSutQuos4Acm+/Dl3ymEWe
NhVepo0M8EFtlVVIfxYRJ90aS3oY4SFFpuHg/E80Nku+7LPMBLbiKvqT8j9R
b8z9krhjzHA/Ve8Q176fqFXmGHtuADP86nziss7wE71zT3o7sHUrjNfyhfK0
z6DgZcNNVT4W2FzknTS2m0FC62Xp60pskM80zygZPo14Muzmef3Y4Pye0nA3
p2nEhriJ0pgNrujfpN0ymka0IJeZi3rs4L9CPtnLPY1qmA+r1ppxQMuKxa7a
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
          "]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1: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
MR1973j4H2ZTbDU=
          "]], 
         LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAlK03miGfWEDIWASyL2aPv67Ho9VZ
n1hA3IBFPGUNkL/d3IceI6hYQOMajKDfFZ6/OgdQsLW5WEADkMfKCb2sv4YM
iQLou1hAX+0E6Ztrrr/REcJUGr5YQE237Y6LDLC/aBw0+X7CWEDGIeEf+Lix
v5cxGEJIy1hAYwQT0AcStb/0W+DT2txYQAJgV0975bu/QGEZJg3fWEBwUPgG
5sS8v4tmUng/4VhApIwIOIGlvb8iccQcpOVYQHVnSEoaar+/UYaoZW3uWEBe
0HViJn/Bv5yL4bef8FhAH/3KcnHywb/okBoK0vJYQBMxdyLiZcK/gJuMrjb3
WEBSrfOn10zDv8ygxQBp+VhAapQVlCzAw78Xpv5Sm/tYQNSeixFIM8S/Yqs3
pc39WEAn9hlYEqbEv66wcPf//1hA3SCbZXQYxb/P1aMY
          "]]}, Annotation[#, "Charting`Private`Tag$286943#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Wucy6ke9lfdaasdMwXPjh+NRSv0od8nk152/plD99+e6Ans/yrAIoFz7Zwr1
pZQNnSt96EZK6s8IZjNonnXdmzrbh06pTvzw5DIDJd8jTmZ9fcjYN+Wr2hYz
GNRJeDpb3ofUSiusd241g07K2FBkcR+SZRurE9tuBoY3G/QM8/vwfDKqXVcw
Aw++5RyHjD60OuljMadsBl8/XjyYn9KHpgySv4yomkGKzzlbs+t9qKVt5NMP
XTO4zjPoujOyD9Xs3GxWZWgGbtcUfgSH4/tpqEF1MZiB6bVNvCvB/79vJ1Wm
W5nBip2zfOWxPnTcUu/j8YNm0GPzWKTLAdtX2PLl9WEziDxFe3zSpg+FcP/9
/tfdDOyf9bxUN+9DET/edV87bgZdzSv3/zPoQ0l7dFdzz5lBx2ySOUXh//dl
HYPxDDNINiXYylj6kIGJqJn6IzOwdF/LvYnfB5U7/ticyzaD7LsRnxNmqKh+
uNSF+5UZgBX/tV09+H3ur31OiTCDGCvuW2+K8PvRXiQ65JMZkDf+YHXPpaIR
lcVr72vNoF3jjoN8JhUxZkru2zSaQZhMWIF6An4PNd95lNxiBo0R0owbl/D7
uTgst7PdDHQfXR/TDKcilnCtMr9+7L+xEFuiNxXFOgtXvRnG/qameDm5URGv
wULd8pgZZBWi14n4vZck+bvRdMoM9rvfXzB1oCLhteL2+FkzmP7iP3PeiorS
qCl9TYtmkDSss25oSkVSVadGxVfMwKH+/NdrhlT05PHeaY91M3BPNw/w0qEi
hSuaS3msJEga4Nj3Q52KXh4TYprbQAJh417pTypUpG45v8GAlwQxJmVNpruo
6K1Cy6bL/CRIjHH8bKlARYbcxaLfhEiw82D90287qahq4vY2wS0kOE+5UF0j
g9/nP0LlD20lgVDRAKfqDir6+mrP7ifbSUDWClX4J01FDkkaOhM7SdDzFKg7
MLcECyINJRL8O5W58c42Kjq4Z87ivAoJktUbliww92g2kz+pkwBcC2N3YfYQ
KdrPo0OCBxv1Q7Uw0/4ku+0xIMF7l2uJBzAHdIR4pyMS/Bb6NH4F88x7pxOD
ZiS4ttqu8Rrz6Qz107usSLCb+b+GRswrFwQuhtqR4OGPZpYOzFFHZq9+oGD9
fsccKzGzmTRdZ91HgvSU6YiLmK/teHPH1pkEjjLqz3kx87ElP7jtSsL37frM
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
j78fLqrQledSQFwOzmx9V4m/ztVa3g==
          "]], 
         LineBox[CompressedData["
1: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
h/8BjZpQCQ==
          "]]}, Annotation[#, "Charting`Private`Tag$286943#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 100}, {-0.999999999999668, 0.999999999999668}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(Z\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(Z\\), \\(2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(Z\\), \\(3\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.897139978398121*^9, 3.897139995301199*^9}},
 CellLabel->
  "Out[469]=",ExpressionUUID->"3899e92d-8993-4def-b051-d04528ef7aab"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.897139940748337*^9, 
  3.897139941048592*^9}},ExpressionUUID->"d932620a-4952-4774-89e9-\
e5951f379a9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"psiSol", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "//", "Re"}], ",", " ", 
       RowBox[{
        RowBox[{"psiSol", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "//", "Im"}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Re[\[Psi]]\>\"", ",", "\"\<Im[\[Psi]]\>\""}], "}"}]}]}], 
    "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"z1Sol", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", 
          RowBox[{"\[Pi]", "/", "3"}]}], "]"}], "*", 
        RowBox[{"z2Sol", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"4", 
          RowBox[{"\[Pi]", "/", "3"}]}], "]"}], 
        RowBox[{"z3Sol", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"psiSol", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "//", "Re"}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(Z\), \(1\)]\)\>\"", ",", 
        "\"\<Cos(2\[Pi]/3)*\!\(\*SubscriptBox[\(Z\), \(2\)]\)\>\"", ",", 
        "\"\<Cos(4\[Pi]/3)*\!\(\*SubscriptBox[\(Z\), \(3\)]\)\>\"", ",", " ", 
        "\"\<Re[\[Psi]]\>\""}], "}"}]}]}], "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", 
          RowBox[{"\[Pi]", "/", "3"}]}], "]"}], "*", 
        RowBox[{"z2Sol", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"4", 
          RowBox[{"\[Pi]", "/", "3"}]}], "]"}], 
        RowBox[{"z3Sol", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"psiSol", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "//", "Im"}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Sin(2\[Pi]/3)*\!\(\*SubscriptBox[\(Z\), \(2\)]\)\>\"", ",", 
        "\"\<Sin(4\[Pi]/3)*\!\(\*SubscriptBox[\(Z\), \(3\)]\)\>\"", ",", " ", 
        "\"\<Im[\[Psi]]\>\""}], "}"}]}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8971402290664387`*^9, 3.8971402759319687`*^9}, {
  3.897140434873616*^9, 3.8971404755572147`*^9}, {3.897140512934462*^9, 
  3.8971405219565573`*^9}, {3.897140611275992*^9, 3.897140640070383*^9}},
 CellLabel->
  "In[490]:=",ExpressionUUID->"41e5d4d0-fcc0-449c-869c-489c13529da9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{}, {}, 
        TagBox[{
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$339363#1"]& ], 
        TagBox[{
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$339363#2"]& ]}, {}}, 
      AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction -> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> All, 
      ImageSize -> {344.464782714844, Automatic}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 100}, {-0.8530366739450148, 1.7320508075683028`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Re[\[Psi]]\"", "\"Im[\[Psi]]\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {}, 
        TagBox[{
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1: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
           "]], 
          LineBox[CompressedData["
1:eJwVl3k4lN8bxkkkSZZSCUWLJVuUfKnOk1TWmTHeWZIthYSypFSKtGiRRClK
2UJZkrUFx77MiBLCjMq+zpC0UPSb31/vdV/Xc97zfO5zP+d6XxXXE1S3BUJC
QkXCQkL/f2r2+pePFlpCmOb5ozUi4Wj5Ebbd6mJLaOwOHz2Rcw2Zqstmcmot
IWAjhe1+7T76a6QtPiBqBWdX7l/tWfsSiY/OJ7QttoJJWbGgj3fykNzD9wa1
S63gVvtmdZ5TPtKcC3BOX2EFqgNU+5XzBehAxZsiz41WcK2PbKtGfoWKLMzd
+GZWkDQ7qb5cByNf+8OVvy5ZQZbYzu0rimqR1JPRrzuuWUHipgvjkQZ1KKvP
79/FCCs4+V9w8oGXdWjIO3SH5D0rMH7rniucU4+cQhKK1qVZQegZ44fRWSxk
nfrpuUW9FdxeaPdocW0TUudbxTyUtAbZKrVeoZKPqOfi1iPonjUEGJn0ciu5
aJO8VKRvnDVMj59nZUp0o2PPh4qTEqyhN+r7+lhqN5puiV+yMM0aQm9vG37T
243ENwjn1xdZA73Y6prywi9Ip/adMLXDGvK0M6XOpn5FZyU8nhxZYwPLzQZl
57/0IvwYGu6ttYFxg7GsjgV9aKGBwvfa9TZAWmO75+7GPnTr4Lt9Glo2IKHa
oJtzrA8lZhnweTtswIw+Eev/vQ/VkYR2nnayAeX91/Oe/etHy2Piuq4n2UC8
6pLW5wuHkESb3Af/pzYAuuIeX1SGkNDKyLqDz2xAUV2OObVrCPHiwwq0X9qA
8JISyeygIVSb7BX5odwGeK+VaeajQygob6fp6q82YB2+9sKr6mF0fLrYaEG/
DdjbRqav/jKMjhjq644N2cDSgcF605lhZPtmk2LphA0YKbuaj2qNIM3KZT9d
/tmAZ4zEz7A7I6j7Q8+zDGUSSGTd4A6QR1GrnEPiHVUS6Mxv7y9yH0UsWnvs
2U0keLG5U416fhQVdbIuWeuQoLwyRn702SiK6sl3nNxJgoI/RzNyhcaQ6bcr
MkaOJIi8Kf/9a+oYMjIQElc5RAI7Bd/zl1+NIZ3As/OL3QT1L+I539ljaM3M
8TGONwm23Lbeqz81hqaFmDUhwSQY93t1VXLHOEqT1jxT95AEzchAfaxqHOkM
Hvi9MJEEqSMeGnOt46j47fXTpqkkmJ7p4hYNjKN695HA0iwS+Khtll0jxkOj
JRn++aUkkKF5ci6b8pB/dMe3yQoSuDxyj39J4aE/HuJ+OrUkiLaZjLrgxEOS
ckdPPGsigbd01uWZIB7S9lTzfvKFBGOPaGphz3ioaBdjjNtHgtqFp4+VFvDQ
ruXhxxSGSXAwJKrwMeYhEh48em+SBPWnuL+ZrTzUfld+uGWaBNukd33e+pmH
nI/t85CeIUGFzLN7JUM85Lsize2mMBksgkR2t83w0O/Rtv56UTLQVHV4Rxfw
0cVy0SNiEmRwfHG1MVuCj6K93FwvypIhM3D/TrICHynsvtdTJk+GiWTD49kq
fJQiX+PyV4EMRhlYrFydjwoqNjifXk8GiYg0PxFDPtpxn/hcoEaGpaLntmzd
wUc13pcdpzaTYY+OpeFqUz4imRZwdfXI0HcnvOflfj5qX9l/0GcrGXIT8p3n
rPnIiSfHeW5Ehj+iK5/O2vLRYOUe++EdZAja880vg85Hv3xSmIf3kkFF/+G7
Zc58FLrn46dECzJ4556SrnXlI/HVIozPNmTwu7KD2OTOR1F8/fY1VDK8SxnO
1/Hko1XVrrQDdDJo5xyDbi8+SoyLbo21J8OFTY6L9I7zkcaJSrtWJzKsNYtV
3OjLR3lmUy0yh8lwt1E1+Y0fHxkrqFLJHmToNj7SzPfno8oJ2w8RXmR4f6Py
Lw7gI6uaixTWCTL85D1O0zrJR63xL5sXnSSDxqD5KQOBdvDtIe0NIoOWkavV
R0F9/16ZprBgMpwUXm+8RKB91uy2KQ8lQ/wl4dguwX4/J30b5y6TYROHNQ2C
fi7UJlqZXCeDovQBzV2CfsUevWcF3SID06yR2iLgue0nZFl0hwyqm6vfzR0V
8O7Xa/h+jwxhth3/VbgJeBVdzLfEkyG/UOacksAv9anbdccfC/p36X4h58RH
uXV4X1YyGeavkbWfHuCjCv+1e9UyBeeVIGefSOaj2R8TUYovyMCSi/I+YclH
W8+Uc2XyyTBsplE/bsZHGSGHTv59Q4Z0EflFM0Z81LtAv/xbGRn+UUbsburz
keLVBZJDlWQoLg9+0bJZcD4RKSkfWGRYovxNPVyJj1jLTk7UNpGh04vj9msF
Hy2MMTMpaSHDLampHlUpPgqKG2hJ6yID1ff6/dw5HnJJU1sQPEqG86fuDZR3
8lC8xm8bPz4Z8sb2ftv4nodas+rj3KfIYOnR+daqlofM8z232M6SwabvcHbH
Sx5a9ZWmJydKAc9tNsNDV3ioUGVX+9JFFOjfGWZjdpaHqIc3BYsvpsD5/1JO
HjzOQxGDP+vmJCmg2zbSWEDjoX/j952Hl1PgZW1WE28dDz3SCRXtk6eAS5Gm
wh9ZHjLyPZrZvYoC5pPs3lcLBffDd6NfLYoU2CHhZ2Q6NI4GZzojSzdQoCqe
ZXEuYxw1iSmWRW+lwBe98A3P14wjL/OFR24ZUoBp8PpDvvg4Er8xvviaEQW+
jiQzA38I7sOlpbTzOyhQTOiVqzWNoSI5J56HGQW0hqQTLgWPocfrEhV3EhS4
552o39A0iqRubKnXplPg3J0htfRXoyjke2WAMpMC8X2XPjOTR5FL7QDr30FB
PxFjhUaBo0jVe/OZysMUePghpnho1ShKKy5q2x9Aga1ZJ1f5MUZQDuldJDWa
AmTzWM8TmUNI+ZWT8Z67FJh24p7qjBxCt1UmBwxiKZBcvLhN1n8I+U7L7lwR
T4HjNw/v/7N9COnHM8c+JVHAzPbc9+6KQVQ00Lff8SUFosQMeqqbB1Bp8KzQ
0fcUODkSJerB7UM/XwxOhrUI/LbaLln3ug/p9bV8TWilQL1NaOGi+30o1SKz
/GMHBazFp5o22vahG/IOoaiHAtn2DmJvqnoRPbf0n/wUBaQu3HD7L7kHTfSF
ztfI2ULVbYOkiuTPSMVq0d/1DFsICZ6sPBzchra27WlROGAL+SXSY8uM2tA+
59AMmYO2oMB+uunD91Z0LGCG+OdkC+UuZ2PTvVpRwcOx7C53W4jcW/rA0PEj
2jfe7HznlC3sr+6bqrP6gI7delA1f88WdhVVRIqXsFDwyra4H/dtQSzm86Gy
3SwUmSTjOx5nC+7919a9qGtA+YU3FLsSbCGYnmOn2VqP/nYHBxY+tYU1VTva
FSZq0W2dQ2rehbbwb13RpLV2FSpo1rjZ2WoLjxwXyw3OF6Oo9RVPZ9tt4TJj
9f5XcsXI6zSzfE2nLVT71Gnd1yxCqmvDfzh220LZgoxtvk4F6PbxfufeAVt4
vnIiwb87Fx1b+mTr2E9bmF8gQVO3SUXrrJZ//ruKCin/vT3vcuoK/vs487fS
Gioo3z3+Ry3/Jv40ZSqHlKgQ2/xS6db3KBwZ72d+UYUKGTfdAxxX3cd/Rpry
RDWpUE0XNlobkYTbr10PlzKhwnfhnDvFTVk4onZeb50jFbQa0mcp6BUGv8Et
Ss5UMFrxr6ii4RWeXtOkr3BI8H5JT4lOu9fYwS9h63I3KrRssDD9z+MN1lbc
YSTuQwV+jQYqu1mCm/zOoMlgKmxV2sZ3OVKOwxQPAe8CFfLdPZ5IpZdjwzrz
3aOhVBBeJ+FFGynHjxVX7em/TIWS6g8PznhX4BN1Rfs6IqhgMejeludViaWV
pm3KH1HBzgf57NtbjavrOKTSx1Q4lPDbMy24Ggf5V5HfJFJhuiO/SC+/Gn+t
i7YtSKUCc5nuuc9KNfil/xZaRhYVxFSMxrNGazC1/rhDVImAX1RT7J9PHY4J
GDnmwqWC/H5lsZUnWFhh31k/u89U+NI9QVQ9ZuHkVUuC9n2lQkPmmjKiiYXz
SrWuaPVTQdvx0q9pLTZ+v8j3ye8xKvRvrFtdMcjGUo9+foz6Q4WpyLq3r0zf
4djj4V2X5qjQ5HjtP3+vd1hp96qeU/+oYM2aHr4a8w5rDf7HdxCxg46JJxua
et5hK73z4hpL7IB22vXa5dNN+Fq1yM4KBTuYfxPwi36nGQevUF6mesAO/j6/
f+qncgt+piHKOvnVDv79hYNfcttxi+LuPz69drAiRHHKv7wd/112Xsuj3w5u
z+dtX/m+HZN+TkceGLYDupK0VepEO56u7LfbNWkHDYvvXzHQ+4TBobp7kRAB
Q17yuotffcLHyELLhBcQcICj43ml4ROOMd0BsyIENEhHPJXhfMKD6gXJ44sI
4Jk1W+6d/4QjfqR4fFhGwHN3I9lzZh24I/LSt/i1BERcSI90YXfgBWFY9a4K
ASLEVRc3TgfeHPjH7tZ6Ahx0n3dtGevAFw4GFIWoEbCHlWmxVqITb1A/fO6I
LgFlJfp/HPZ24hMVpqI6iACTi0NDsfmdWGxaeHWFEwHC+78ScVe78O/cB5H9
LgSYBqpIc+924TEf3YXihwmooelelEnpwu+HHCZIHgTEdOGzgLtwPKe4hnuC
gPRU3RdyP7twxAOSiZA/AeU8yXFChINDaAO5608SkPvFuN9BmoOPNMs+OhZE
gJlr1fpsDQ7WqfLx/x1KwDAaW/+ZycHrQhcOr7lEwMSFml29hzlYbudDR3SF
AKclrqIxxzn4d1G9+dXrBFSPhanNhHHwaIBz2bObBLTn811eRHBwt95Pg3e3
CNh+7euQXCwHVz5fv3Z5NAEp8oVXJ9I5uMDjzd3tdwnYYnc8xCuXg9M32Eoc
jBXwrdvk8uQVB0c8vvAjKZ6Ap9fNbpnUczA9upOtm0KAnPHdvsR+DjYn++62
e0rA+Yv9jG1jHGwiuaj4VDoBOT7KZXHfBP1f3ZpcmklA8U3dE51zHCy7h72y
J1vgb98dhWIRLhYVcr21MJeAkSv5Bz0Xc/HomdtBVgUELHV5GWm5nIu5hpv4
x4sICLIbfHB6NRc3fy85HP1KsP/zA4GBylxc4DNK6iwhYDIs1K5LjYvTNC9W
/y0jYDz1XbyJFhfHDa00XldBQNj8dmdXPS6+cGjvRo8aAtbKql/+tp2LfZW5
8TfqCLhkEi5FNeHiwxx/6ZwGAhb9VIs8uouL6Q8WX/3AFvDvRCJbdnOxOS3x
z/Q7AtyuZF1P38PFxrLb/Va9J0DTe8i7fi8Xaze/GzRpIeCUUrd+1H4uXhdx
xMG5lYAdVIvCP+ZcLGvx50NYuyBvLWGa4pZcvFAsen9aBwHvroduzhfoX5Xq
pQ1dBPR43GTPCvRoCNbncQlwl6yI7hZo7g56hvQXwfzsVr9oL9DNM+NKW3sI
yHONU/Kz4OLKoksxjD4CzrZtPqIi2K8gQGHxuQHBPJRm13rt4+J0vZcXHg8J
/Do2pG1rxsXHV3ybKR4R5En5l9sXAd/WWb3AD2MEnBlMlV6GuHj2s+/kKI8A
URGlhb0Cf8qrcr0WThKQaGpuaW/ExVczJgeVpggYU/m56uxWLra+pee6fZqA
5Dxy6R6B3x30XOax3wTciKF96N7ExY9NJj9emiUgNTauJE+Fi4+s0yMn/CVg
uYg3w1iRiydHXux9L0QD/vm2sKPSXFzUNFE+soAGUi26zTISXBycr7tDRJQG
FhsnVAIE+RE//0LfcDENGlXK9J1/cHDToYls8hIarOE1hY3wOPjuPl0Nz6U0
4G2MW7h5UJBH6RdrH8nQ4NsN2sy7Ng4enObHF8rRID1zLmHzOw7O6tSRb15B
g6HEC5+NqjnYKCVHcoECDYjd4z30lxw8H84PX6NIg6dbN7seEsxPtbeOyDZl
GiTcaldYlsDBFMOcGQ9VGqxy/Ou3L5yDjzZkD77TpIH0UL9ZPV0w3zm8Q0Na
NEiz8lh8x4KDp6O1u4V0acAd+UoMmHBwqEP2RwMDGrx/3BaluZaDH0xklceZ
0KBho+Vaha9d2Kl13CR/Jw069uha6jR34Q2vtYobEQ3MhguozaVdODcsK/vf
Hhqw8r8NVMR14foVWfFu1jTwXXtNrtK6C0fOjq0IIdHgct+ESbRRFya+bL7z
gEKDpSX/lkhs6MJfMzLD2QQNSgyo1v9mOvFvk8yTWxxpULonSo2Z3Ik1XJ+T
5nxocGdwU7DwYAeuTzDOnTpBg1H7tdu6mzqweydLZtiPBnbxXBn/4g6cShlr
bQmkgaWizo/X4R14HdI6mHGeBsuq+K/tN3RgecUcD7tbNEg94S3z0vITLmTs
ajC/TYNLgc15IdqfMBHTpLnrDg0uSpQu7Vz2Cd+RmOCp3xP467yK0P7YjiVn
dE/OP6KB0aNDreFEO17Q/jL0WRYNMo9uPrZmbxtOkjHtfZxDg72XRp90qbRh
sGnZczeXBk9SDJ+4zLfi89VTYiEFNKCp24e0FbXi33kGt4gSGtiviLD5vLEV
828Xxv1j0+C73r47p+dbMMfidR5tjAYiQp9zUm+8x6bkVGYgT7BePOvRlMN7
/Jy4PX93ggauXhcCKnTe47PObpat32nwMHT7cHlSM1YIlOml/qXBvSB1l0Ll
JsxM9JShLKWDrBGrbW6ahdt/rva11KWD3fnK3cER1bgl5aw2CqBDgdgKJ0fl
bCwrVPTaOJAO2C9eqSA0E9s5fNtreJoO7qvIaVX9z3Dr8qNO2ufoEDNdKW6Q
n4Y/XaHdXnOJDs/ogfK9JxIx10Pv269oOtyoXX51lVAYHtg8WJCbRwfPh53R
R2aS0KZrKruzCujwTXz/6tlDKci93+FdehEdxu59gFR2Khp+9HHg8Rs6/LSi
bdFJTkejSyvkb1XSQVv9SsrZA9mIP/EwyLOFDoaa++75CL5Hdaw/LXRrpcNR
r+W3udKF6ESG7B2Xdjr4RFje/FhRiCZdrj9jdNEhWCbL87FyMfr+4VTX3l46
7JbatF4Fv0a/8213qE7RgTyS96DxShmSNDJskpumQ/7nm9tFpDFaV6LgIvqT
DuVvB9y672NkXt13aXiGDvPLDygGUspRXGsgO0eYAVLMDWmSpApk/CPO3kSG
AQVZg4VhWlWIdObCuJYcAz6aGt4V9ahCrnOuF5RXMKCkKtLNO6kK3RDVShZe
zQDvm7ueiMhXI86KspG6dQzwkNzNujNfjYINe4MIPQa8E7kQYlNbi6Le1Ers
02dAmqbWkOpcLUrdlflo+1YGtG4XU9lmUIca950sVzBiQL4GSeLFozr0lcWk
ShozQHsXNXOwuQ5Nk3b2z5kwwPWj2Ms/wvVIiSEm3oMY4NhxdcLdtR7pc0bj
WnYzwGvdJcd7UfWC/5nmzdV7GNDvbbWPWlqPjns8IKfvF/B0GvF3yjagsLHg
ngcWDEhpohrSjRtQ7IlDATesGOBf81r4vUsDKjuted+HzADDgON+nRkNqOWP
lIazLQNWMhtvHmU1oMGQ728odgJ+Zdpp5mgDkrpW8tmAwQCzmFHXoI0spCqZ
5LvxgKC+XGqoFFjIMOrKgpUHGWAx0loTac9CTg9Im2adBPwaCb9W3GAhf0WD
V2MuDAi+4U5MPWGhq4krLbtdGVAhiU8+LWChnIyvPuXuDEi0l7g93MVClVo1
/14eZUBYaePnp+Ms1J777E7KMQYcLvSZipljoX+v/AuvHhf4mbPhvr0SG3HF
8m4m+zKgKsMTJWiz0Rvi26EyfwY0ZCyxIO9ko5OTJ6R+nmIAynTPIQ6y0bCa
j4dbCAPUG5Q552PYqCYwa+fFiwyY7C0+0J/IRslVY3IJlxigdL2wXzyHjRyd
j5W3hjNgR3D2aa86NjLOfhY7eZ0BAX2UPVEf2WjVn2FvyQgGjIouSIMvbNQS
67HaLIoBU5wRR/40G73oT5twjmaATNlS+zfzbBShP1hz7i4DSBsa9uUuakTH
Qjc+uh/LgBsUMYP8ZY1of9MR//wHDFCYsXV5Kt+INiimmjfHM+DcD/3qo4qN
aMGxPuWxRwz4K/v8xpd1jehLseoPsScM+O22/fn4+kZUIurKVk1iwKopl10n
NzaiOLukpF0pgnyb+po5CPSppK+n7Z8ywL498EuEoN5uYi3pVDoD4t2k8ifX
NiK9nc4bop8xIGFB6JNAhUa09Obj2exMBtztmkqSlGtEox3d7xuyBfN01cny
+eJGVL9JKX3gBQOazzho7BfwPT3pcF44jwFvzd94f5lko7DKh3ZKBQxYdOux
W0APG7lIczT+K2JAU/zFU4ves9FOJwUh2isGPNT8lJhSwkYKWQfafd8w4POf
Ep5dOhv9mnmQFVHCAO75J31qUWzUur8jLKOMAR+EczX0T7NRZB9d92slA7JP
a9/eA2zktSVW9G81A9pCHwacV2Uj85A2zso6BuBzGfepImwksoa4RmYzwOoT
T25vBQsFUW17yj4K8mVdWnt3CwvREqOKu9oEOs1wzeASFtLnN9/6+YkBj+n5
GkUDDYh3nWSsw2XA/aIv7RseNCDXCquYhH4GcHTdhOtn6pGV3r69wT8Y8Hwu
oy48tw4JtbUJn/wlyPvmMG/1a3Wo6IxbmdcMA+afF19Y51yHVKsubz84x4DZ
LcsGsEQdmqVVaRiLMuEK0dBOp9ei3Fnq4JZFTAhSa31I21SL3J/0JmssZoJL
Vpa+2I8a1DIsrLh6KRNK+h36IbIGPT8HUr+XM+H4LfbN2Zxq5LLuPWtCngkq
jk06BwKqkXyNc/jQKiacGrt3Qd+wGoVJhQh9UmRC90HzGe/iKmSfVDpVuIEJ
cyk9arueVaLFdcafArYyYXK6fnGmfTkq82LFeBkygS5Uf+LL0nJ0UtqectiI
CQNVc7nHL2L09cCZBuoOJnTUHmrYY1WGXo0Xv91ixgRRBdsXTO5bdFR2W+KE
HRMyr3qvMBUuRnWOup5eAUxYsmXLCps3z5Ds4aNvEwKZMKxE4uRvyUBOR5OW
vj/NhDWdb4taU9LQT3+5vK3BTLgT4n5fNygFbbj2a3buMhP0ErlJuvVxyPeW
no1eOBP6LNqGLTxi0dtozyeu15ng8apv/uJ8NBJ7kPzt7k2BX4a9wyZKtxFr
62b6YAQTROqzLxn/uoH+B9JQaCU=
           "]], 
          LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAhNzWvl+dWECgW8nzWsCJv67Ho9VZ
n1hApoFFPGUNkL/d3IceI6hYQNIajKDfFZ6/OgdQsLW5WECEkMfKCb2sv4YM
iQLou1hAsO0E6Ztrrr/REcJUGr5YQHq37Y6LDLC/aBw0+X7CWEDgIeEf+Lix
v5cxGEJIy1hAkgQT0AcStb/0W+DT2txYQDdgV0975bu/QGEZJg3fWECRUPgG
5sS8v4tmUng/4VhAuowIOIGlvb8iccQcpOVYQOdnSEoaar+/UYaoZW3uWECH
0HViJn/Bv5yL4bef8FhASP3KcnHywb/okBoK0vJYQDYxdyLiZcK/gJuMrjb3
WEBvrfOn10zDv8ygxQBp+VhAnpQVlCzAw78Xpv5Sm/tYQBqfixFIM8S/Yqs3
pc39WECKw+NXEqbEv66wcPf//1hAcXR4ZXQYxb+CSahB
           "]]}, Annotation[#, "Charting`Private`Tag$342152#1"]& ], 
        TagBox[{
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1:eJwVWXc4le8bJ7LSslJSQki+9kHWc+Mcq0JSGU0SkRmSFdmyV0JGKSOcZGU+
ZvY5klC2pGgYESr8zu/9570+131d9/O51/M+n+c9YulkbL2Njo7uHz0d3f/f
gjEbTzMONaobL2/RnnFcyXLssINtJiLNCoUP0XCjZ3GOmC0ZeZ0ylbCk4QSF
6Ys7oysR/T/F2fTNcfxG2sWGyRajFz2djWEb49iHe+v1VlYzGtbaU3X03zhO
jiep/4tqQyQz0Xe3/4xj8u7I5jWvLvTpkRf37bVx3B7Zp7tiQ0W5DH9ChH6P
44Ug9i+eBW9RUOw56eBf49i3mXxsNesdMrFVP5iyMI7Ztp295f7wPdpmkX/h
4g+af/hd/CtqEK092rH0dnYcC917tOgS9AFNXyjdWPs8jl/WqcoveA2jlqyv
MW8nx3GHcmDVd5txtKeRt+jh0Dh+ocrpRyBPoNQ5x9vB78bx4vD1TLeCScTD
u6lwlDKO/Q6wTC1lfUJKA6wm3k3juKXKjEE2fRrVZyZtl62l8TF7Iezy8DMy
2fnf9bTycfzwoYHNfNQXxP5ebyMkdxyPKWSFSYZ/ReO9q3msWeNYeGAx3yFo
Ft0VTv6EUmj8uJK+f/P6hggT+7baQsdxZ9ywy1ebeXSuMnjgtNU4DktJ7kiQ
WUDrB/7N3zYbxxK2yFyOvIASh84lGRqOY1fmOG/XgkWkHGfmIqY8jjdJ8vUL
Wb9QVco3mxvs4zibe9Qg9tAyenbMeUadbhwTPwePS6Uvowv3tcIpv8bwg6BB
OqeHK+g/zlfvOT+OYd5mL60fUavovfI7a+WnY7gmXqg/csca8l+SX6cmjuHL
lt3XJcLXkMa+u938IWM4h/5QiH3QOqq+stw7ZTOGZaCxfdbrL7KXt4nfJzaG
9euYDWZstlDcskWefdooltmyXOFZ2EL9D97ls4eO4kiBKxQhVTqQefl++Irr
KHazrHY3aaGDNpU1ZgHdUUyccW4p76eHR2NSzYcXRvDUj9FrnisMYCWqpDsj
O4IHoh+Ux55ghAcpOkc4DozgTqkTrPm+jPDrbbbjBt0IfuWS+PLD9u0w3cAT
zEUZxgEr+lvKPEywtcQ9Y2g9jAU2KtM3FFigkGGBXjzsI+bKsF7g9maBi/sq
wpztP2IWxEmUxCxwXffO/F2Dj3je3/HbZR1W8FkdPT3A+RHXMx5VbrjABu2r
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
C0sT
           "]], 
          LineBox[CompressedData["
1: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
           "]], 
          LineBox[CompressedData["
1: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
530e/wfY8J6F
           "]], 
          LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAlK03miGfWEDIWASyL2Z/P67Ho9VZ
n1hA3IBFPGUNgD/d3IceI6hYQOMajKDfFY4/OgdQsLW5WEADkMfKCb2cP4YM
iQLou1hAX+0E6Ztrnj/REcJUGr5YQE237Y6LDKA/aBw0+X7CWEDGIeEf+Lih
P5cxGEJIy1hAYwQT0AcSpT/0W+DT2txYQAJgV0975as/QGEZJg3fWEBwUPgG
5sSsP4tmUng/4VhApIwIOIGlrT8iccQcpOVYQHVnSEoaaq8/UYaoZW3uWEBe
0HViJn+xP5yL4bef8FhAH/3KcnHysT/okBoK0vJYQBMxdyLiZbI/gJuMrjb3
WEBSrfOn10yzP8ygxQBp+VhAapQVlCzAsz8Xpv5Sm/tYQNSeixFIM7Q/Yqs3
pc39WEAn9hlYEqa0P66wcPf//1hA3SCbZXQYtT8U+5fY
           "]]}, Annotation[#, "Charting`Private`Tag$342152#2"]& ], 
        TagBox[{
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1: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
u58tLnJ2IZrBhtmFbCq4G4g+nGLvQu3rrM7o5FOhJvGUy0cW4t/Hl365n6hg
88GoYpbkxy+mbXKilApvLv4uDST5XPTk8lUup4La8JzCKlIPfEJep9PrqJDK
vBZr9ZOJ4obvjw82knwOtNlJkvkgWVxxUoZBha5Nt+9uHGSi57F/fh7qpMJd
bcWfe74z0X/H5LyTe0i927/8Xd9L6s1o7xjzOxUELo6uju0m/SQcdlx8mOyX
uaD3jEnmx0jByN6fVNDNyzTk7GQiKh70ujdBBbdVqca4nYla40SHG2eokO6m
20En8+3gcXNPgb9UmNqbvE2H8DA6N2j3jwrrJ24nzTGYyEck7cgtVnvY2zEk
y0V+nx9tGahcZQ9HBnstvQhfLVl1mJPHHu7Hbl+1jtjnidf8bspvDyYF/hsW
CcecOOJ+VdAelFJitm0iesSN7/UVi9qDt1tplg/R+0z0q9uSuD0U6XT7DpP5
mlcqc/C8tD1EtEkflCDz1eD+ru48ObJ+1ftTuJ+Jvnpfd5nabg+PmqrHnAeI
fyZ5zB0q9lCpN2PaT+Zv6/qB/Sc17MEgaKuB9RATuf4S6szQsQe9LVSF8GHS
/2WmzsMG9mC48HV7DIn/qQf+7duM7cFsiBcOjjLRn5PP9nmY2cOBN7vChggH
mzYxUqzsoXxpt4fMGBNxbWDf221nD9rChgEChKPH1VolHO1BOhr/eUHWi31x
3+20xx58hv9GDRP7KQ9jmuOd7YEd+55oIPsrnC7b2exqD32rrL08iL4cylTj
Og97eJkr2ZtC9OuJb3W097QHfou4V7dJ/st+OzREnrCHfRf2qe4g8bD5epVW
fdoeJqiPJSJJ/g/49FHNAuyhefH70gOSjwGzdXUhgfZAyzu5uL+FiU5KGNuV
BNtDSXuqKEsjE10pT7HRv0n05ik5bPjGRJxJ9dUBtwlf5mJJq2CiKF8W64K7
9iDIPxhk8oX4Y6FSNX3PHpyzOz0XSog/km6Wqgn2wEpfaGj7xETyU1EVpx7b
w5XiO2rDRUyUXYHNM5/aw7qzl9XV3jORzqPfX0fSSDzLyj1xPhOV+m02k3tl
D04qryzu55J5Pfs7WjLLHv688CljvmUijQslzHW59iB53CjWm5zXp5ai5Ve/
s4fbJ+TirbLIeRd06MxSkT1k1va4nX3DRP1saiWTxfZQ7xh9cOI16adQNr6h
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
           "]], 
          LineBox[CompressedData["
1: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
HPwfkJf0+Q==
           "]]}, Annotation[#, "Charting`Private`Tag$342152#3"]& ], 
        TagBox[{
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$342152#4"]& ]}, {}}, 
      AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction -> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> All, 
      ImageSize -> {333.0066731770831, Automatic}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 100}, {-0.499999999999834, 0.999999999999668}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(Z\\), \\(1\\)]\\)\"", 
         "\"Cos(2\[Pi]/3)*\\!\\(\\*SubscriptBox[\\(Z\\), \\(2\\)]\\)\"", 
         "\"Cos(4\[Pi]/3)*\\!\\(\\*SubscriptBox[\\(Z\\), \\(3\\)]\\)\"", 
         "\"Re[\[Psi]]\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {}, 
        TagBox[{
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1:eJwVV3k4VW8XRSIlDSIqJWQoGa95eDfuFSoJmadChJCQDFEZIjOVIkMpw0+Z
x4vXGEUSwr23AUmmMlOGfPf76zzr2e85e62193nOWUcveRg6MjEwMKwzMjD8
/yoQt/E8/XCjeoym2bh/xRSq3CZ25KpzBmJj2kI2o+NGv9fZos6F6G5Pg9J8
+RRKkh+12hlbibIOKzucouM3UtecWJwxEt0vrWpWNoUCuTarNjOb0YCLeotQ
6RR6mEhSX49pQ8p1C5sFxVOocFd08x//DiQ/wLg4WziF2qN7dJacPqD8Ny4v
Z19NodlQ9p9++R9RWXzZ4YL/plBQc6HYSmYvepJz9LJg3hTazmTk5vPoE5oO
nIwweUl/Piy/XogZQJo8Xgmk51NIMPjx3LVQCvIcSEyczZhCRXWqhFl/Gto3
VPPUNG0KvVW+Wz3t9A3JfCgWs0ieQv+pct6SKxxChurjX5biptAczSHDO38Y
sVtNMenfn0K3Dmwbmc/8jgS4L4sSbk+hlmrzLTJpo0i3lN+nKYDOx/w/oWuP
fiA70+l3O32n0KNH+k4zMT9RjOem7ucrU+irfOY9ichx9PaG9idb+ykk1D+X
dzV0Ai29QCezrOj89j2YnvKfQm6jBgdt9KfQuwTatXGnGVSgRmBpk5hC91Ie
vk2SnkUyr6L+qQtPIXFnZCFbOIvcHpoE+vJNIS/WhACv/Dm0Ew73C+2YQv9I
hPrZzAU029srEfp9EmVxfdGPP7yIHlwiRG0MTiLij7BvkmmLSIuzvlOhaxLd
Dx1g8Hi0hPh97kfPVE4inmZ/rV8xK2h49oO+x71JRE4U7Ive8QeJyt/RXwiY
RDaXOh3EI/+gr7oLx5U8JlE24+Fw19C/SNVddMuOC5NIGhrbJ/zXUMstp7oO
vkmkV8eqP+a0iTj3fr395/kEkt68tMQ9u4mi1R9IGSdOoGh+2y5BVQaQiooK
dAuZQN6XanyMWxjA9nFg2SfLCUQc82wp72MEcavplxm7JtDIry8X/Za2wNYJ
X94G13HUH3u/PF6JGcA66w4yGUfvJJXY8oKYwd9lcGsEjKOSa8lFlK1b4b+T
CVKe+8bR7SW9TWVuFkiiVlPKqn8i/o3KtA35bSDIbdguuTqG9qU7znIFbAPp
XX2B54bH0DbESZTA28CYtVFDuX0MzYS4T9mcYgPqcvj7aw/GUD3zMeUG0+2g
zPhDzevkGLJmTxy448cOh/P1P+kY/0Dvd8qzMVvvhp6I8GGdsO+o5/TelK7A
3XC1WbzX/sp3NBj5W/hx2m7wKu3Y5XL2OxrdmkOU+LwbGj+aHVTi+o7WN/aH
mFnugec/ZfOHn4+g47//LheY74XNlg1/ybphdK+rbvSCyT54Ubz4I6P+G9KM
IzXknOOBdWFbPX2RQRSiV5bX484DtfWt61bTA6h+q2DSRgwPJEdv+XWleAAp
BzJcNurkAZ/7+yduqgwg2SvkHZs6vJBB21C1O9ePhLSkTU00D8DrqB7met8+
xLJy6Dez3CGo6xAJZO/vRsSS+wOSxofgkfbmQO7TbnTn6mqDxfVDUMT+QC7M
sRv9+z6QVFR8CBJnO7sZpj+gle5EJSsJPohz5Q+al+1C4/nbwkpFDoPfkqjK
+uA75Ci5ulN6Jz+Mr+y0EzJqQWdoES94DvPDM8O3fle/NyNCBJcagyQ/HPj4
6t/K9WbE/E3K7YMBPzy+XR+y8KAJPYt1enc1mR9a1k7HZ35tQN9+9YXnHzwK
Mc8y8W8eMjIvKNwUPC4AL/jOfH288QqBmdqjHSoCkOFwIHMtvgCJMndILJwW
AIM9NWy7hP9DfyzHrJuuCsC7xgitR8a56OEOvlq7YgG4M8/wcrH+Gep1ifJ7
qigIiMq91vAtFp0Vc5zjPiUEMWsyu3OMn+DV+z7kLyZCUGkWo3vsYRrO/R0W
ln1ZCF7syUg6/zEdM5e95JUJF4Ii4WdWxk+ycI36uMbZViGYzSk5UT/4Agsb
uybe1ToGn4/25z+jvsIMwddkZ5EwmC2EisVFVuDXw7c3Ks4JQ6N7h08wUyW2
JCa2BdkKA8GHw1cvoBJXsJVa7ggWht33Lb1l3aqwW/LiXeF6YZCp2CqsoVuD
KXk3+qxURcCqVX+/+Zc6XNIX5PNWURQ8kvr2i7M34dwwh0sjuqLgOxi9zVSt
CafLnz63ZiEKZfny16Xcm3BUCo/YySBROKUn4iX7oQnbW5V+jm8Uha78SH6N
+Ga8b3Rcy0xPDEze1M7H87Ri3wWjvT8tj8On3raGnbLtWGXv8ULmYHEw/Rtz
l+rxHjutJT59YSYF1JjuUhtaL07Wn26+aScFh/rPu0f/7sUNWaTJs85SkPFP
nC+OsQ/z6PyRX74hBbEzxd27RPpwe7J1t/YjKZg8tanJ5tmHxSREt4x/koJh
30M8C2t9eMquzvm4kTTkSLv94uDuxzxl3HH/LKQhvltQ20O0HxNZPct7LknD
iQYmjhHlfpz2SoApwEsaUlLPGc/b9uMzqxGpHQnScIdxW4Rhfj9+lWTY5dYt
Df3mPjOgOoA93vyULTwrA4fclN8FwiBugAJXcRMZqLvvv3HfYBDvJns+z7OR
AdlfP1hv2A3iosK/e7M9ZEDzgKXhTPAgnk/ZMZ+SIAO2z2Lr2uoGsa+rZNGd
TzJQGqrDuChPwW9+LPzc/CID++eca0dJFLzfrupI0JgMTDWty7QaU3CVsUbc
jRUZOLmL5qfnRcF/1Yzc3XhlgUzxDWQroODA3TfETaxlgUFDRJJzPxV3Rqk4
9DrKgjlNzeGyIBXzbWVIM3CXBRrjzQ1vSSqu/3tvx+lgWVjteqhUr03FDN+f
0D8qsqAca/J66hoVG1jbCtTlycILhdpmxkAqzhoQtFAukQUR0Yjw7jAq1uws
eEtoloXwmZ2OaSlUfLe8PlfshyzkuR4q4SRTcZ/k3aGXv2RhF4VkwdlMxUL5
p3iElmXhzOTdxP53VNyS3h1xmJUAosUHPAooVLyP9wFO3UWAjbqtjI1DVOyY
ZL7Cw0OAbyceTKf9pGKWeyOXOcUIEPxvQ6pgkYpNmHLS46UJIBNokfBtlYpz
Al37dyoTYK7fyo7KQMM61xZJ204ToID4LEqQnYZTpqqCwowI8GC/0orHHhqe
cAwqZ7IigLDJ6J9gbhqOsmA5tuFGgCEzkw+jR2hYXYp9ecKbAB0PXBZ+C9Lw
3Na9bf2BBLhc4T1cL0LD2bT9Kc2hdGwbJ2B0gobNivmuFEUTYLeGDORL0PCO
CEHlp8kEiC5ZbW+SpuF6K7EdUWkEWC5NMk8l0LCXjORn32wCrA23pMso0PCx
bXKv7Avo/ST/s4lQouHBL8q3DMoIYDSTEpCiQsPRpXBOrZYAq0c+Lzmo0TCK
1OY/3kKA8e+mS1PqNDxvc2aOu5MAkXwnmsWBhl8SDJu29BGAVymhR1iDhs23
myXN0ghQNTxfR6Fj9iFrhy/fCfBSj4VI0qThhnJ7uXdTBMiTvnz2Ch1737/C
UrlA55+bOPz/ushFj4HnawQ43Rd4nEa/nyrvkxu/RQ7Ut/x3VYyOY9kDbgbt
kIPHvwNYpOn9NUZC9Fw45aD0q5fDPJ3fYmX4QdODchBzoYrRnc4/NyZ6WktQ
DkIjm22z6fos7RPrpE7IwXtv780HdP0cSimxfLJyMBTy1EqL7k8TR7rtdhU5
kI06+qOA7p/P6HOpFU05cJkhLPfQ/RWtyWMc1ZOD2ZTSvnK6/5/jCnu6DeXA
IlAw5wJ9PnGO5c/rLOSgsPO8bwl9fsu7G0mPXORgsmKr/TP6vPPH3nCHeslB
67xhB+EgDVvXdv709JcDdivlujv0/WhxGozUi5KDEht/Rn36Pt1Q+2qhkCgH
adJSp9+y0PBxztETQk/ofljHc6/T9y+hfub9Rp4c8OlIPrtD31di8lL6ZLEc
CHRUWvX+ouI/V9Y8BqrpfjQtpHwao2IbLta9xW/l4JOtOuP4ABWLux02cZiQ
g5cMZYI8FVQ8pCEkcn5ODuyScubbC6g4af/xP2p/6c8nsL078pyKV5vknuxn
kwdDE1JGbSwVt/Oe/fpOVB7MDveU/XeRigNnDAsrpeSBsbRDOfQCFUu2moVk
K8qD8IGGW1t0qfihp4PALR15qKkKKlqToGL7toDL0s7yoNyhuc68QsEOqsL6
yx7yIJnqUhQ7TsGXi7vlyDfkoaOJsegjhYKdU49tJUXIw+wIT200mYLdPT48
N3spDz0BgTmcgRTsv19wOHhUHtL2TeYWzQ/iwOj37cRpeYj9xmGSODSIgxj9
itgW5cF2Me6TStcgDpnqDE7aogCf63ROf8sdxOHY93COgAJs23zuLmI5iBOd
3ll22SnASHRGqXTxAE7+7K2V5KwAxHuv7ayfDOAH54+cMPNUgMwzDrtE7g7g
FBXv1eFgBYi/49wZazSA03cdfryUrgCsaOBY1kw/zq+81n/oiwIYHkn58Zur
Hzey8p53NVeEpTOUk1pyfXjsuYQe5aIiaPJe7c/k7MPsQNQ65aIIxeUNkz/n
erGZn4ecYIAinDpp2nvidS+eGW/lpaUpwuwhwUjpY72Y753XiN6QIozdwX1F
23rwzejO68edlCDb7Joj354PWHpPyMMJb2WY0TjBu+DWgmu2DYi2BSrDn92H
uXj4WrAmgwQ5O1QZnA9z5bd3NmPjGdo322RlkPZ92lVyvBn7vlcQ6y9VBm0P
gyrroUZcGzlDbppXhvtv5K6rutdjHSbb4VRPFTg79MLVc74Uf/xbfv2mnwpY
exgxsl4oxRZz7CymISrwbcvbOPHqEuw6VHN8b7wKbKf/WbKHF+PYem7ve4Uq
UCzm9pfz4mvc59/F4vNbBViuM/LG27/Adgtq4vpuqpCoG2Os9cEf79zL0N3n
rQq2pBzNvlFPXCPVdN0ySBUuyReLMG9Y4n3u2mTnWFWwCLc5dPXiFdQ+rq93
t0gVmASr71x8Fol8WPf8ZqtWhX9fJmoeXIhFAsK9CfGNqqBkI+gbGJiAAu1N
KU97VGEt3ChZeetDJPXV1rlqURVYwad5PjUdfVk/yo42VOFL3tvOIcNMFHVw
tLB1qxpE1JbvYDHMQqNmzis93GqgbGNddQA9Rym9nuG/FNVgIiXTYGrgJWJ4
eztbIEgNcnz6H3RovkKvfmrp5IWpAf+N2Y+5zK+RBQvLtGSsGuyPjKTKtL5G
ZVpRsmoZahDl5DzacLQIOdcnNpk2qgGlVfJawtNixPXF+PLXt2qg6OHrabZe
jJrWuLc79qjBfyPCRbssS9AhpdTzXt/VgLnxpywPTynqLn0+FL1VHfgufdN4
ElOGgnocQzk51GEyZPW7wEQZOj4nIvqEWx14b9mNR2uVo1CJAo8cEXWIo3aN
CS+WI+mz7pwSUupADst99123An11laosU1QHJUnVrqdPK5BiXtm/Rl11qNtd
i4XVK9GPNt9nOobqYNfWLRkVVYkSxxS1P1iow93Wx/1cfZVoWrAu5rOrOuzg
CI9Ys65CjzWDpe291YFt7zGuXelVSPuixqeJQHUwO8DsXE+tQlnprYdWYtRh
avcTjte61SjNSnzgwkN1cFnVObfuX41SDiQllKWrgz3x59WJ3GqUNPj3NGeO
OqxH5vQH91aj2Id2LF6F6mDIf/hX92o1ijRua+iuVId/SLRz8XANCt0rESDZ
oA7Wa46H2KAGBXcny8W2q0ON2uYVaZsa5B+7NjPdrQ7Y4Rb7w5s1yOfMpfzT
FDofHdGz9ok1yHP7W4f8YXUYtb0p8Da3Brm2Sx5hm1SH2u6awb+1Nehy+EOK
07w6LH9acRX7UIMuEjeS3qyqA1da3+PobzXIislB/9gWBOf6w0dNf9cg04Z3
20J3INhxkaOhfq0GGd6Sbh7hRMAYZuExz0pGZ1VTgjQOIfA5LRd3lJOMdFb/
KWQKIXgU+4Xiy0dG6r6dBdZyCBZmon+ISJGREkHWqVYNwSbroH6DIhkR5h8f
PaiN4Hi749IykNEJd6eHgyYIdu9rlbhuQEbC4l0GCrYI3r/n02g0JSOBScKO
h04IBJKihuptyIgvN7V10QOBvBVzuY0jGfFcZgox8kMQk8FNinElI06hK8ol
IQiyxfVtpa6REcfIh8XdkQhu2rDMiPiSEVumfKFHAoK7SarD+v5kxGzz9ErX
YwQTEQd2BASR0eZBZqGTz+ixy/FM2K1gMlqluHy9n48ARkf0REPIaOnRx5TJ
EgSlF/I/E+n12QuKRrpkBN5+nf4ZgWQ0xZmxM7cZwfb5xg9MfmQ09nFrO0sn
AhXOZnZlOp/hOLc7jn0IJh89f77HmYw+n+1VbfmMgPX3jQtmVmQ0sEN5ReAH
gtaJI0eHzpJRz9vM4tu/EHTc5H16S5WM3kewug0tIQhZk3TkECWjdpK7MPqH
wIP3pJ7HbjIaue0yq78F4ISYREn4Ug36NvT07C1WgLW6CxMwUIM+o4/5r3YA
TPRn344vr0HUdOZtX3YB6CZ9X3ePr0GDGwqO7PsAxNKPWH1xqkGfrFybVHgA
hIXGD35XqUHdB3oCn/ADwOp/D5cp1ajr5lbqWyEAL+5lQ7nsatQxqKjwVxRg
+0nEdNW1Gr15mDFnKg3wo1DGxmmuCrUs9ehHyAGYXdl5OKyoCjUasxRUKAHs
f+ZmbHC1CtXuvXqZSxNAZFqcp2WoEpXGKtN6DAH+OfOf4yivQJdSObbWmADo
9fLIFLlVoL25IxJZFgAj8RluRYIVyLMx6o7HJYBDQUq+uvHlSHyRKsbuBdA5
52Joc7kMZZsH+JESADhHZgz4tpcgo8vnnok/AKD+MDJsri1GTNcFOzkfAxRu
/DPNdi9GdtEdR0Yy6eOfChUM+1CEDuGDbbeKAEz5Wbx3bylEHR0zs45lACwy
J9wajV4j/8HmA2erAFY4pZJjM1+hwTlX94MNAA/G/v0MOVmAkoVquao+0P1i
63W7uisPaUnHo4xegIFRtD9UJRfNqzlcCR8AmLRiV7h/KQcZmLLXGX+j8zN6
zhya9QKxR1k5zP0G8NC+H7r2IwuFzqyXHOfQgL+iCqvr3knIu0bN4OkZDSiI
v1cQUBKDyy3amCgGGiD0J1LoyrEEvLxqUL7vggZEvPjWzHwtCd9UcTgQba0B
B7+5ObpvS8G3aqNG/d014Pqe2hHB7EwcUT/gZxavAU4esn27zubjJ03Xsjj7
NGBh+aOKL08Vxu9ezEdaasLRcE5+HdY2XMLTfS3IVhOOpSj9sTBrw9mXV2c9
7TXhkvq7oLa8NhzFdG7G1FUTNJJPsReebcfGyn+mjgVownkHjjKLx2/xZJ7e
j8YnmnAr7kkUu2In3hc5M/CXognXG2u+wJNuzDLAa/rriyacOfXttD3uxn+F
iP1Dw5rA1c8WIDnajb82pPS1TWhC6gt+1Y/iH3HeH42PD/5qwr4PBlz5NR+x
unPyO2leLQjaPqc/1dmDr5xSqrtipgVWPKKUO0N9+Lcob2uxlRZ04LaBG1s+
Ya/tfzv/2mmBS6iJh4TwJxz4vupz5BUtOG9PfNfq8gnHGymu5/nT68zaRpMz
nzCXHA/z/C0t+OKXfEF5dz9+wv1nh/JdLVjpLmTgk+rHzymVB9/d14KCBULq
ffd+XGGroDKZpgWRtzV/v//Rj1U09mvJZGnBj3WyvzvTAG4QWNHzf6EF14bj
rj88PIDf/qiw2P5aC9KIFYV3Lwzgz67y/sexFhRL/X3FXz+Amfzkql2GtSD2
zf0b+UGDOMKcq7HkhxacnsldV00exOwqS+2rE1ogpTZSeD9/EHP9KxuMmtcC
v3r2bY79g1g0lPAnfwsRAvRn9h49QcGvHPcxLLASgebY2VKMKFjm1CKrCjsR
FhtD1RjpeV51e9n+jn1E+Fyccv9TAAWfi5dVmDpGBGfthwp72ym47xonkj1O
BM+mzlELKgWbGS1oB0gQgS9EVEN/moIvcZea7FAgQtiMlrjYLir2TZPxPaFD
hIQcLh17AypeC9p76/oZIvgzBf8qs6XiENv5MLIBEU4TZ189dafiSIGSB6fN
iVCbXnlK8j4Vp+VKl7u6EMHRS9oKYXp+oNi3Z7gT4UZV8YUNel5f3P6Q1utF
hIMJMveM+qn49NVVRtUAev3u8fWOKXr/dHEuz2AikHPeWM4uUfGzDzai2XeJ
EHWjSKR4k55PpJv12aOJcNvPLn3nXhoWtl+6CPFEeFQ1Sio4QMOGySI+3slE
uHRmifhLgJ7Hlu+nfk4jgpvy/igrGRruF6l/vTvr//0Ex2Lo+ZDJfLaR+III
TFlPa53oedOcbDxe8Iqu3+ht6IGzNBw6Hb42VEyEsUcX+JcNabiIr5qDq4II
vsvN94LN6PlQf+qobg0Rlh9cHam0puFtIXxyQfVEONderZZ5iYYJxed0ipuI
8PrNTIqSEw3bjdy2/PGGCC2Lbl9DXWm4ijh2++wHIjQPqN0mXKfhUR+eB7d7
iTApH+L4xJeGd+fo5ZYPEMHI/iOp/CYNqw4GkidoRJAbut0eFkjDTmyFXXxD
RBBdLIliD6bhROXh4fOjRLDe/VZA7zYN17tyLoWNE+GYSB4/ukvDk2mkbTXT
RCgLauOYDqVh7q4bB3/PEiGnfO/18+E0rLmZJyGwRIRGTfMujwgadpf6rGHy
lwguVhfSTt2j4ScXOS5EbRBhpd7ciELHbxLBuZ6RBI7j2peORdLwfLNXwPxW
EmRpskmJ0/HhpexY4e0k2Kv8l/c3/bye8ECWBQcJuBRferrSsY8pW3nsXhII
8hbfyKb3y7yn0t7ETYKEvsRLj+l8Oquv0pYPkOBRR/t5vTAa/jOZ8fv4ERKY
KlwxqqTrETrUw2grSIKd+qk2Q3S9BmeZuZJESMDKLGHUSvcj8Ja8aNsJEhQt
Xll1DKLh3EJnlTVJErATaExN/jTcN/REX5JAgluWBlsoN2iYYe/7i/aKJCgw
tArI96Zhca1N70eqJNDR2NIjd42Gzbyl73UACdLC+Cz9r9Lw3Rf2qZtEEgiH
y5jduELDr/sfvJbVJYGhw7O1E440TGVtb3Q6S4JKZQP3R3Y0LOMiPv7hAl2/
vsaZOBMatkm1WdtiQQLmLhumA+dpOKoznkPRhgRsui/FzE7T8IjEEiHzMgnk
sCHDtDoNc9iJ6PS5kCBduCMOFGlYOcHccpsHCc78um2jLU3DCQt1tz1vkODr
g13KjvT9d++Jv2gVQNdfs1K17SANnym219AJJoHW5E9hZ04aZvFgY+SPIIHS
eImZ9Ra6X5PGIR8ekuBTn7WY+hAVm78VsSM/IYELUaL3M/19lc9dRTnpJGgk
vWjReE/Fc46Zm7dekuC5mzI4VVPx5eGpWxIVJCAfzHZyjKNiYkO9zYEaEqSO
aqTeDKXioxkJ6iz1JHCPFyQ636Tiz1YK/760ksArUSn82yUqPj94JyjmE/18
xun0mwQqVv3AGzi9SIKY74e2dPdSMO/racvBPyRYbFMxcmmj4OVorNKyToIV
eX/luRoKLtZzXEtl1ga/vnVNnEXBwm+K/E/v0wZym8uMiDsF76k7dTNfVht6
VuTYeBgo+HfqAfOHCtqwP8+u5s7cIO70/6V4R0UbnirJkapGBnG4YtIfcy1t
8BA3bA1uGcTrpV9vsBlpQ/PtROLNsEE8lu/j6+ylDWtphGqFfwPYhO/f11xf
bRiffhYsPjWAW+PCT034a4NSnNgq8+AAzvZ+xONyVxuS2mxVbhQP4Evq1TWu
ydoQDjv7Vu0H8NeP6//cK7RhOVvigWlHP/70526Ez6o2HOm21+h8/gm3aCem
3LlzClS8jJ7J7+jFjOeoI3EhOiAhkfo3vaYTt9dfEPQO1QHX24vrYY86cbzE
R3uzezogtmD95YR3J+bnaB/lj9cBzzMPW6LEOzG8Lx8rztCBYyajX/NSOnDI
6YTJ3nodYPIy1iRavsMMOjrz+zd04Az6ucFZ2IbbK5tl1hl0waGma7AytA3H
i6DrQ8y64L6280+iRRvmZ5VfzGXXhXK/V65LLG0Y3gguKx3ShfATp+Z1Lr3B
IcTNv5YqukALpj1r4GvFDBoVjJk3deGISnv8eesmbEH8+W4wSBfOxombW4o2
4bJTPMl77uhC0VhNePF8I3bW9xe+G0U/XzKUZR3WiD9aqp++nKoL7dbevXXP
G/Az3zfJ4nW6wPS2hPA+vQ6v31yxdmzUhWtS0UIOonXYJEhUJL1VF8Z3KUfO
Ftfi7aFR1bu6dEFKZXCZu5WMryfof53/qgtdMmpWu6arMbGgX6SaQQ8Oq/Fa
dxEqcHoh69wcsx5ETqpyDpHL8Z8SxZrjbHqwlRpOEtIsxwXVT86k7dGDqr2s
+7pPl2GuNptrwQJ6kE+um6s0KMFjw2M1JKIelFK8BlyOFOB7+1fO9kTowby/
yMn1jwk4ub39e9N9PfBwbkhUmIvFGTef3CyN04Nqg3i3eJUoXEFTe5H8SA/2
1WeNvWgPwU3Ru1TCUvUg618yf+h+P1zA4dxVmqYHKw1667/VffD/AF+5j5w=

           "]], 
          LineBox[CompressedData["
1:eJwVlHlcTO0bxpM2Qrv2aHkp2ogsLc8tW6qZMzOdmaKdiBQtSoiyRm8LyVJI
pIVW2tRbnkp72peZEkrrTFISotRvfn+dz/U5577v73Xd53nUD55kHBYUEBCw
XiQg8P+naPm5j4lZVmCqkMzNVAlEc4u0tbdmW8FtqtDc/ojTSNa9wVax0Ars
Z1NZ4y5XkYW2dPr7aiv4WyA3YukWi+a26okNCVvDofG1reF1WUiMN/+oc4k1
4MB6jQnZHCTzoMWoerk1mFntPRxVnYPW/fV3SZWzhlM1umcV9V+h/eXFBcf+
sQa9/NDio8vzUcE+y8Nfd1lDxj+72VkC/yGfA4cqfl22BguaU7FW+lu04jGv
z/S6NVhu9vvWJF+JMgZ8Fy5GWEMTR4rAVyrRiFeo6bI71vBs2dL+SJcq5Bzy
qGB1ijXYDHqkFSrWIJtn7Bf7aq1BIkgoOTalHml/tb79YJkNFKQONuvIt6L+
i5vc0R0bWD80rOY9ykFrVq6I8omzgZuugQaP1nQjzxcjhU8e2cDFFSJCQ+7d
aLotXlwoxQa2FzkKFfd3IzGtRbm1BTbweyyKbt/bg/SrGxcxODbAWverxLG9
F51d6vHYXZkCToGCHYn2fQgnQN2dVRSQUVQXbQnsQ0JGSt+rNSmg0cl0Hozt
Q5EOjXt0dCnw6E6eVUlLH0rMMPo6bkqBcIrcF729/aiGKmB22pkCWkW/eQEG
n5Hs7bieG08ocErUS95oYgAt7ZRp9UumwAXRp/PnxQaRgHxUjcNzChy5fqwq
XX0QjcdfytN7SYGllwIvvrAdRNVPj0e1llFgzYEVzssLBlHQKzMLxT4KmPZF
Jm/zH0Inpgu3Cg5SQGjGZ4V0+BByN95oMDZCga+qc5NFiUOIXrxGpXSCAtyq
u+0BjUNoXYXET9cFCpyW67aJ1RpGH1r7n6epUWHyXxnvgLph1CHjmHhLgwov
ly4b3fJhGNUzu+6eXUOFjLcC7Q2Tw6igu/6yjT4V5BbaCE/5EXSzP9dp0owK
vBNhL28eHEEW365KbXWigs37tqLyyRG01UhATN2NCt6uq/LeLhpF+gFn55cc
pkJ+bGLIfelRpPz7xNh7LyqMeaebFxqNomkB+6qQYCq4fOwJz/AfRSmS687U
PKCCoZGugR2XXz+8f0YokQrmstqvV82MosL/bpy2eEYFyc2zNQ9EuKj2CDeg
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
iIMjEi78eBJPwpFMgRoXCQ5mxXQ3GCSREM9Em3+t5WBLwmeHbTIJLMf5ued6
HGyyTLQwMJUEsqN1jZERB6++tulpaToJzxUvlzaZcbD0zgb5/kwS6GHu2wYs
OFhY4GCkUA4JATbLVNr2cjDvTHSQdR4Jx6WydMzpHNxrvObriQIScuVZWUVM
Dm7+XnIo5jUJ54n9dssOcHCeN4/aXcLntYsSMjjIwSnrLlbOvSFBM7FZ+s9h
Do4bkd++upyEqWMzp2KOcfAFt93/eFSRcCybYqfmw8E+ar3x4TUk7I9QXCHu
z8GH3vtJZtWRIGv+ILkwgO/3/pJrrQ0k0Kw2pK4O4vtlJs5ON5Iw12SQZ3GW
g7dLb/FVaCHBtlDjnlIwB+s1Nw6btJFgddaYknye7z/C3dGlg4SuN+tV+i7w
/e+bbb3URYLAyp9xtSEcLCQSszeFQwI1buqlYygH/6rQLq3rISFPxbsonq95
IXjjeC8J45qfPC/yda8pK03yEwndr+NHJfi6+fcX1U39JOy4llu3m9+vouDy
bbsBEoIWqpdq8ufl+SstOTdEguIy9xVpfL5Uw5cXEkZIuKSumdDJ5z8h9+13
IZcEy5yxjEK+v01/DANax0hYcmB7995ADv7z0WeSN06CaoJZcRg/n7K3OceF
Jkm4ojwlc4af37W0yWHVKRKyvfa3qHpzsE2k4cEt0ySs4GaOn+bnzWHl2HvO
kFAy0cAi3Tg4wWSy/fIfEq4+9r7S48jB7qsNiUdzJCjM25Sq2nPwJDd7d4sA
E6wVV1n3Uzi4oGmijCvIBLEF2flDlhwcnGtguliYCdvEBBzT+P+P2PnsjcZL
+FqixOK0MQc3uU1kEuJMeF1u5bXIkINj9xjoHFvOBAPZJ9dtdPj7kMxe9VCK
CejEysLVyhw8PP01Pl+GCTwF//MpMhyc0a2/slmOCfGMvmfD4hy8NSlrmaAS
E0SefdsXMcvG82Ffw5RVmPCt77HDlyk2rvTSX7xZjQn31btk5rhsTDPO+u2h
wQSJi34Ramw2PlqXOdy4jglRylejVmXyz3fWuNuILhMY5ifuZT5h4+kYvQ8C
BkzINBWr6LrDxqGOme1GRkxwlRS3/xHMxvcnMsriTJjAFQzh2O1hY+eOLya5
Zkw4yTjinLOFjbWKdAvfISZQnLB+sjYb51zKyFzYye+/au0uryVsXCuXEX/Y
hgn7vny2La3uwlF/xuRCqExwI+w4O/K7MPlp/a37NCacKD3dcyapC/elpYc1
kEwo4a1eKhXCv/9M0k9tcGLCsei29dpGXVjn4AvqX28mLOL0LV1+sxPXPtqe
M3WSCXd0Sk4LBnfiI931UqO+THjakHOt2KMTP6ONdbQF8PNbIi3pYd6JVyNd
h7TzTPghUrPUfrQDr1TJ8rCNZAL4paaz13fgfDvzOstoJhjljoZHS3dg8nbT
OvNbTOjL+d7dP9OOby2dGNe+w4SQ7LhZVmU7Xvbb4NT8QyY439PQes5qx4Jd
L0OfZzDhv9yjn+KOt+EnUhafE7KY8DWlV1ea0oaB0rYzNocJSuvUvtrrt+Hz
lVMiIXlMuLFM79ahyVY888ookixhwhmeD8nxa8Vfo/PjFhqYEJiQpSbs34Lf
7yt6xRxjgoNk0ZKElHfYgnhmHzDO3/cxn4NBdu/wCzJ6PnaCCY89uPGBou/w
WZfDVh3f+fsV8jfpdW/ASgFSnxlzTFC1OuuaLleP7ROPSdGWs2D2Y4fiSfsa
3PVT0cfKgAVLJBaqCxrKcVvSWT3kz4LefXH09C3PsbRAQdH2ABZkO1Y88G5N
xbaO33Ybn2ZB+VV4kumVgjtkjzrrnWPByaIXvslpSZh9lRmtfJkFlUf9AnYF
PcQKn28qy19lgVu64Tbj5jhsb/4uVTqMBXfHZZbXrL+He35alC35lwXUZy/k
R3/cwkq2F2yEI1kQW1xdXlodhR2yizgC0SwQ9RlHFzNu4IfiP9znbrKgJZxW
k/XwCj6qr7/G4BYLdrtpK6UqX8H/A7oKIDs=
           "]], 
          LineBox[CompressedData["
1:eJwVlHs0lXkXx49EY8Q0DEZDuaUXXWQkKe1tXteX3J3fk3JJicgllC6KdFGi
knlPSLmWSEhuORiHc87zRJNLyH1UbhOlhIpM73n/2Guv71p77bX3Z+3vVvcJ
cfZdwmKxwkXx/7xhffzbqSw21h2eLjntfx6GbKRdOrLZeErsq03T73Ewojda
VlLKxtrhyOxu9QzQvqhuVljGxpylUhUGTzLhwPCeP/Mq2Khx2qzQf0k2jKc/
H7ldzcZ7RWba6ZG58EaGp5jYwMaYnErVgYB8eDd189jBdja+a1rJe57zEDbY
vVjq28FGF9w/7r6jFELuySV5d7Exdfz24fQXpfDe+1I+6WWj1SQ3rVCiDD62
He21eMVGGcU/RhTsKuDzI6ftGtNs7Kna3D0dXA3LjY2eyc+wcYxVr3RntBrU
alZ6S8yx8U1e4kvbPVyw5r8+O/6FjcWBntpdZjWQ2nGkuUiMYHh/gaLcl1ow
mU113/YjQVXNFoWRtHqwP356cp08QYuIYN2kP+vBZ9Hn9CoFgqvb1s5osXgQ
L7EuW0yZoJMD11/Vlwd9CnV/02oEBZzW2LMbGiDK6NUxV32Cj0O45fqPG+Fa
tfB7SwOCDU+vHnkw3gi5O+6nbzEkODdSsf6MEh+eWkbUrzQmGCcudb4njA9D
TZTzchOCsQasC4YZfJixNx1e3Eawr7mmN7mJD6pE8ruXQHCJCU/vp1UCMOh7
k9puRlBm9ttDOUsBWHq16PH/TRBm8w3bDgkg2C/FIc9K1P9Aq92eCgHETkS9
TLEhaCtXH6TQIwBOyN7weFuCz2P6Uv3mBVAXqXsjyIGglt1R9yZjIbQvyOp4
ORHsfRwT2esmhNHoj9WOLgTzHMMkzh4WguzFmsFfCcF5mz6VylwhaCzPCl2z
iyDH/5i1W40QjK6dX6K0m+AW33huSbsQPFPstec9CdaIi3f2LAghTOXXqglv
Ec/Y5EOMLA0XMpX+M+BD8A/PtWnlajQU3RsKqj9A8Aflaf9uMxoa1gm+PfQn
mGaruHOzEw1dJflJOQEE/yI1VYNeNHyrCiu/ECziz7kct+8kDf2SpZezQwlm
iytFH7tEQ7Xrh711YQR7tigZr7hBQ8T7ENm5owRHxW9++uEhDeNrg/x8owm6
RWz9VPqSBsGRQtMzZwherQzr3/mWhuzGCflbZwkeX5TKLf5Mg4dXQH1HHMH+
zRuv35dlwORBPuf9JYIz1RMDG5UZ+Hlh/NDyBIKdXVa7HDQZaOf4KZtfI7hv
Ve1lBSMGiofvTnldJ3jC3PJC0g4GEgxGBSd/J/gkTH21qyUDATFr0m9wCC4u
9FiY72TA6tn+sEcpBP+1Tt3Y2oUBLZVc65Y0ggudbR8sKAaWBLxeNZFOMNB9
5pbmHgb+qtSYlcwgKL99SpHxZKBGwqdZI4vgvblJw1+8GUh1ycrakUOw6TfH
w5IifTRrKNL9DsGYtjT1I6J6l6nV9kfzCMZ7SglddzOgb+qldT2foO5CVOF/
2QzIXL49/+A+Qefq2Q5dRwbedA+0Pnkguh+/R+R7awYYbdW8kWKCt1yd+OtF
+92J2HNKrJRg0tOC5iQDBmIbbrqolom05rIyozUMeK/o09laIeLPj7JRU2TA
1HMly62KYKjr5Ak3CQZWFu7qCq0meIOVXzY0TcOnLymFCTUEeaF3/VsGaeiw
6o69Vyfy4zPXuk1PaLjymr1xqIGgqceEXkYqDYGbOBJf+QS3T13d1hVNg3V0
Z58SLeK/NZbdvZ8G8V9cLzo0ExQGPDXP1aPhmLPTy7rnIv+wflQ3LBaCW+a1
yt5O0Xz26waTrgjB4F1L4twLgtG90nnRQUJ4e8neZEO/6L98Litz1hWCD882
+dYwwWUFxHF9lgBs9S0tomYJ/iNZmyR1jg+szk6xiE8EO3SDXsvt5UPFcd+6
wC8E9R4rG8eb8kGj8dyW3YsEB8tnEiJnGmHerVHHRIJCruaJVSZUI5TMO49u
Wkahdrm7W96GRjiQ8SpbR4pCqQSO5kfxRmgfF1NRlqHQ7uDN9OmCBig4ibKf
f6Jwa/mW7zh/88BbrbVpSpHCaOkvXR/KeaAo8Iob+5nCiHyvk19jeBArG816
oUKhRiJn3ECeB+5ZtdPlWhReLxouNtKpByna5EW4IYXScWNp511qoC6wKTnQ
iELT4xrrY59xIWKFu+M+YwpPKqgkDlpzYWjX8SfO2ynsuLL7ttn2aqiarORu
MqfQV7pItlmtCvzlNmdOuVD42xzPAiYfAe2x8WBgOIVNHI/DY1Z3QW6fP/fW
EQrNlmp4jH3MBU//LJnWSArTxBeM2TdzYC5MvtQwikJ7xX9OBfdngtbFT/OL
5yic63gleOvCgdBE/Z36cRQuu2M+MHYgGbjXD2b4XKIwSjJHWzb8GjTsazqh
dZlChYeFDa2aCfA/b0dn/A==
           "]], 
          LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAlK03miGfWEBaeAkHRjGLv67Ho9VZ
n1hAIJ6BhK7Ni7/d3IceI6hYQCWBLaUEDpq/OgdQsLW5WEBR2SjMYeOov4YM
iQLou1hA2Pd7akRYqr/REcJUGr5YQKqQYX01zKu/aBw0+X7CWEABWfbfQrKu
v5cxGEJIy1hA2h26EV4/sr/0W+DT2txYQFjQt120KLi/QGEZJg3fWEDSCLlx
MOq4v4tmUng/4VhA60N0NLSsub8iccQcpOVYQPG7z0yqNLu/UYaoZW3uWEBA
tl+CHU6+v5yL4bef8FhA3tNvGc8Vv7/okBoK0vJYQOJMeNrB3b+/gJuMrjb3
WECIYVkh5bbAv8ygxQBp+VhAhSeOdsYawb8Xpv5Sm/tYQOni3w52fsG/Yqs3
pc39WEBl6r1R3+HBv66wcPf//1hAEAskUu5Ewr+HcqdR
           "]]}, Annotation[#, "Charting`Private`Tag$344688#1"]& ], 
        TagBox[{
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1:eJwUmHk8lN8Xx5FElsqWNRUVkuxkuwczdmOkhHYlopCtRFnSolWSSrKUhPpG
oUTcqGwhIcsM2QaDCCEkfvf3l9f7Nc9zz+d8zrnnPtcGN9+d7lwcHBzO3Bwc
//+78da/J8nryoxvmDqzz74ZQW95leROeqYgC8uxz86Ey868TFf0zEG+l7+w
JwtG0B0d1j7Bm2/R3/BHbdaEK9ROefB4YmS0mSp7JH8EhYktFS6lfkSP/Ps0
Ud4ISoijGi/cqEQvbSgX+l6NoJxV1z/Onv2CDtHKzHfnjqCq642W0x5fUZuL
VFjiyxE0Hi0weCb7G+I2561992IEnfuYo/QntQndc+P2K8om68HMy983WtHj
l8nl5zNGkHz4g4lT0e2o9/r51zvTR1BuiaHW+FkmojB9dBUfj6Bq/Qvvfnp0
of3bOJdmH42g54Yi57VzulGQ+H/a3EkjaIJ5NCUwu4fEPZirljiC9ELffMh7
2osOGX9wvnh/BJ2X4u2dTO1Dy1KWAnjvjaBP71yWaSSx0D7+1Xfx3RG00uW5
wql7/UgoPvtCTvwIos8uUHPjBtCZgkbhjjsj6N49msevG4NIaE2IqSXhHzqp
V1Rj2KilomlpOm4EKbRMZJ2MHkKn5mP1Bwh7BZl9eRE+jHz2TA1JkOdzRe/+
HDk7gr6dPdB9nfBM3oDg1uCfiHrLZBWQeEaOetu9To2i/A47x+1ET/RkDD3r
xBjqfWaR7pQwgmpuM0+xPX4hK78N8q+I/iv3E6rvqI+jLStpq3Y8GEEqnshV
M2cc3Yp8wccm+fuvuB3qnz2BAu8+8EtOHkFirTsEhBUnEdU0+GhC6ggqzOhN
evV0EuUJn3icQPxdpGqVjqf+RjxXbgXfJPVIE+ukxa6bQlnaS45BmSOI0n+x
a3vSFAoJ0LMwI/Vj56v6fZWcRhKSNfHjz0fQtehWDt970+hzcUJ/0H8jSHVX
xG0hsRlU8+VAZC3ph0Z5pY0v42aQQsIOh7GcERT0+9tru9V/kIeb3p/vpH8k
Pp41G73xB9HuuP87T/qrOE6++Tr/LOq5+SWvn/ABt9qjKjGz6OHY4OkVr0cQ
p0bQ9BeeObR92crbveT3dM51l7yj59Cnr2mmwYQtvlWI83PNI++iwoFysv5w
qu+z7PB5tLa9p6CaxL/pJ6Fn/W8e3Rp7wHGD6FOHsqqhs3+R5Pn7k6uI/uZV
Xi4xs3+R9t/6B04kvzNdwsOKwQuo/aZ6r3vWCJLOKT5b9XsBXcrn32/2bASV
nj/K73nqH9qUvstpmvTvYZpg0opf/9C7j1r3ooi/3OveqDw7sYj0M0b2TaaM
IOuSFbQBjyWk+st84h6pl/qS27T4+BLqiue7/ZjU9/r6g/Xyhhyg+YFd/P9+
DHQrCtr1iQNqf77YPHtzBHku86w+wcsJMmXWHtTrI2hfupjsRVtO+Du2fqQw
hvQv9aPfo1hOOLouCbtcJvUb8PtU0MwJvftDOFQvkv1xeZ1EvQQXJEnHpelf
IP2jWOs9sI8LjkQd330hcgStrw7Bi6lcQE31frQyYgSJeG0RWdvPBWs6neK/
nR9BPPzfj21XWgbixdHzredG0PzzqCKLk8vAO/o/WxnCY7ZqQodeLQObh+sf
PQwbQb2jnYfPTC8Dp+065Q6EW25eK4jdwQ2WSvYndhCu2b6DL+scN3w8YS9t
S7i0YWBfWRk3cKlkHIwi/PpUfG778uWwvDj1VxPhDGFT7kmr5eBUoVqqS+Il
5v3as/LmcljHd08/nfDNXY+eb2xcDtDz3nsV0Rs5bb2kL84D2aMFcr6EAxNm
dzq68sAB4zTpd4Q9dTMyvJN54BOHKKWP8L42x/kLvTwgF2Xe+H+mh3DSkjav
gJcTcb6vCFOkctLyvVbAgv3LE2aE9Yr3Tde+XAHLfsUP3CbxVfattOqfXAFl
13Qb7xK96/+9Tfqnwws+k44GVqEjSDTZfVwslBeOTldZPQsZQbxIhKKKeSFB
foP5i9MjaKHrwz3zZXyg+Ujq2+6gEfQrwmfkgAUfxFjnVTz2J35ukEGnr/HB
NSV90zu+xM/y6rhbX/ng+pJvieIJ4ueR0wPPRFYCh1U6092T+Mm9Sf/DnpXA
dp46QTtK/HzaeKPt4Uq45DjpNXiQ+Gke0TPetRIiXlHf6+wl/l1hXtngyQ81
hpl7RR1G0H6BuNaoMwIQfY624ZU+8eM/tPXhewGgqhxoZ2gRP2ij5/M4BGFJ
rufdP1WSf6zlZtYVQYis/b6aLk/yEVkKpD4QgpbvTnZDAuR8yH9Rtb9TCJJB
pDx1xQhi7XaVCd6wCqKkWJ/Oc42gL/cKPmZkrQJfdoLXq9lhVCeow8e9fzWM
cPyZKBsYRo02wvfrw1ZDYYeZ9tfeYdQWM7b5QdJqkM/ZGzj0Yxixlj+jqHas
hp+pO06qtA6jYbMLTbN/V8Pl/3CZRdMwGo886PZReg1UzdIid38dRgv/1kY4
710DkQdUnytXDiMuwykh+dA18LhNeUdf+TDiPdvwaDRxDezaLJHvVzqMRGau
FEcx1sB07+visfxhJKHlbm03vwZm8u8ENuYMo3X+Ju1rpYThyDeF26eyh5Hy
2NzMCxdhMNasSK1PHkZqKi0XT4cQ/lyWGn1/GOl4vRY1fSAMt2947xy4PYxM
B7w0WtuEocHa5u3TC8PIUsGiLG1WGF7MrZfgChtGNDd5+gkJEfh4IfTUisBh
5PKDeZLTWQS45wZfiRwZRgdkChe+nBaBmbVH2uVch9FR1/hrCfdEAG/74t5F
H0Z+LbZZW1tFgK3w8PFVo2F0pb6EtdtJFP4Y32AriQ6jmwKJAeuDRcH18TGN
o3zDKN46mGvkriicWxyyCV8cQikVqusjvovCIU2tWD/2EHpTmrI3e5cYiPvp
NjCKh1D/y8jGxZ3icMqfGv7jyBAa/rn/cLW/OJgp290ScBlC48r643fixCG6
RXPSmDaEFjImBZUaxcEp4mFwmt4QEk05YuXosBacKCXmLQJDyPQW9cMzewkQ
dC04PfUfG0VY52c1+kjAqjg5W6M0NipdLn/n3w0JeGNqVaMfz0b6YRzHHGsl
gBrQFGQZwkaax4v5lywlYXrxSkkUYiMFM/U9TqZSsEFkhd6GkkHktpgCkYel
wPOOhHvm80GU+k5I+UWEFKh+eD41/2AQyaj9XODEUuBH0SsQCx5EYrLPHv9n
IA1lXkk2mSqDiOePzBi3tgxkpZzWf54wgCivr7Vu3yUDXsdEQ+ovDKCok/Mf
XANkQEz1vdio3wBa7Gu9k/tKBsb7wpQkbAbQn4a4HftUZWFP0rGRkcV+xM7m
vZi3ZR3UqnEeuH+4H7lvnxdUF1wPkWpy9TF/+5At8/JTiXXroYUln/mluw9p
XRYz4ti+Hk5uCeWu+tyHuLvUTnylr4fD+zz7OW71occ3PWpOxq+HNkta/+S6
PtQ12nwpW3oDjPx4dz1Lrxe5vMhZklfeCNErjhZOH+hGdkruE+IWCqBhfnUD
n1sbet18LqhaTxESu18HSkaWoMyLR916rRRB4GV/fIzLe5SsY2P/11URWmk9
LWc0itHV+xJK286R3wupk2P9hejIvryO2DJFiH+m/WLcMR+JsthmztZKICqA
VAMfZ6Dg347Cg3uV4fOqZE6p+/fxiXT9paUTyvBW2afFvisJu+3e8FPivDJk
VEeEccelYtrbsc/Wqcqg9n3m6c/GdLwlNCbkJUsZlv7Ob9Gn/IfbuHB30Mmt
8J/38h/n2W+wgbByDne4CvT2RrR/3PYR13O6VtfdUoH8OqNbaSkf8aGJmL6E
VBW4WfBrY9bqTzi6YWitUrkK1BzeJGk//gnX38yKsFu+DTaUdzFqMirwIX6l
nQnXtgGN8q4+4081npx3PnEwaRsMzBUGPzlYg6OHr1xS/G8brL5a0K9ZWYOz
qtlFRfXb4O9K0w+r7n7Bk5cz5bvWqIJY7u5Qt611OJpbcXrLfVVInDUbb5Nt
wOJTe1ZNZKoCx+EH52XsGnBm32WloneqcPPkf+sHQxtwXfngflumKhw+/rR2
rpU8H/mswm/ddtCQPbXicsw3nPVv8/136dvBKa62QbKhERuOOr2OKtgORVeu
WNrONOL6jku1NhXb4bfsh7Bp6SY8WTzA8WNwO9AvV/N8dG/C64yatCLF1CDU
10WZe6oJe/yNe/TUWQ3mS31jN3B+x/G0nx9DDqnB3A2Tyji57/hDGnXYzlMN
FioTPzCNvmMJy1mdmdNqUNLpVPAn5Duuit/fYH5PDUrTtvej8e94avDNjFSK
GmQdGNPdL9iC1xuslv2VoQZ/NDdEU5Rb8Jme8uP33qiB/tDBhv1HWrCSquIy
9nc1SG/L9ZJtbMFOkZFK7zvV4HTMpdsTP1twVDPDPrZfDUTW3dU9vKIVM87e
SNKbVoO0P57v5/Vb8dXKSe0YUXX4uitsODypFb+Rst23X0YdOHUyqu7nteLe
k0+j1BXU4VpvL59iTSvWF3X+2q6pDgWc1Z5PplvxyKEST2VH8vvvS0dXmbdh
iXzxW4uu6mBw26Ok1bkNU1b4FTS6qYPfnVeBct5tOOm/jVyh/uqwzSIyGm62
Ydv5yw+/3FYHKzWvxICvbfi/OzvrTzSoQ+Pj52HjZu2YMfB8CtpIPJfuayUO
7ZhHf7m0WLc6mFj5yAUcbMcHut96lPxSh6Yx1bZnZ9ux0DZZTqFVGlAoHbIn
JLcd+1YMaubYacCcsXvMqAQDf4AX3ipOGmAomxbjs5mBVxf7Pck6oAE3xlfF
5WgycG7OnHC6rwa4NljupNkxMIdyqfWGMxqgGvbANtGFgR3So6KSIzSgY+Wj
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
MKsqk1GGP/D/ap0=
           "]], 
          LineBox[CompressedData["
1:eJwVl3k4Vd8XxhFSKVMiJGn4qlSKKBWrlKhI7jn3XGWWeSpDKRmaKBkaFIlK
AxmSMqayJBFCuIMM9yIhylAyNOh3fn/d5/Pcs/d5373Wu559ljj6WjqLCAkJ
nRAWEvr/b2uqkMyCH5ZQe0o6K6vuPA4fyHteQfNs5aO9vk4XcF7yePPl35bg
sFni+sSXJLxQMWPbayUGrOSENjvPKEDphHijfBUGiEt802jgF2CC+/I96aoM
qG7QmfGxuBDT5u2mYtQZkPL1hedjt2J8y4o6arWKAcnJL9wqC1+gyDfptNHN
DNCS27v3nvhrPCWvKqVuxYDxznXH7Ecrse7prIOGhxgwNt6c4U1Uoar5zwfW
Ngx4LmyQJVdUhRjxXj/BgQHSy3ftUw1+hyKTJ10kPRiwuc54Wdzfaoxs5b0a
P8mAc4GXlJ0+vceWY28k5ocwQNjY/JHJ1jrUkHvCWB/GgI2ZTbNWx9dhzd6I
L55nGeBxY+nRF1CPkq905LsuMWCVxbEalegGvHrnildtMgO2NX+rTRv7gJ+2
hBT132ZAufuqx58VGlGnxU1EPJUBz7xEf9/Rb0SONCTCQwbohO//fDu0ERXP
DL0peMwAa3J0V6hwE94+vFf5bikDCu/Bv32TTTgspOfyqowB90IyPRctaEZI
UX/aWk6/7+uZiBLtZuziTBnLVzHgNzoftvJpxmW7H/lFNTDgcoOF02BnM2as
FKsJ6GQAebhy3UghG5tUtv/27mbATkufAJV6Nv6RCtF07aH91HI6mnvYaD4+
FmvVzwAvr5nLG6Q5GPRFq8xygAFTw1TmrBUcTG33Gt37lQF1HWdfvdTn4Fh5
D8NghAH+WX9dwh05qFqodl7vOwM0ts1IiQ7k4O4M60KtMQYwp9d9kLjAwaQ4
tuLSSQYMn+7ts8jiIFhXdMwUIiBExb5/7yAHPfYLSQmLELA/V/PF3ykOXtux
FX7NIGDlpRA/bQku9mrk3/s6kwBfZrbX9qVcjP5537VRigCpBlvlOwQXC/sF
iTUyBOw0aihUt+eioE255o0cARldJqL2nlzcUH5Ns1CB3v/U88ilp7nYEnt2
NGkxAUuCLTVDMrkocgbV45cQsNj04LeQfC6uDvzNiFlKwJXI7ZaHS7kYesi/
MOw/AjJ9TyUNNnJxmYZT8OF1BDjs8AqZmuCiufKdbJv1BFhHnF68Q5iHx+e1
dTC1CWBGtqn7zOZhzZglmOoRIO2dz7BX4aHv6x1iaw0JuHvJxmKRAQ8T80N1
/9tOQHW4b8X4Lh6Wp5e4qhkR8NJ3FRlpxsP5sRtqZHcTkD/IiMg7xEOD0z6/
55gS0JnT6bzDkYeuAZmaYntp/yPP5vq68bDkoHrchDkBrz5Pq0T787DHzLZs
xIKALSa14v5BPJy7PWn0iyUBa2QfTvSc4qGuDlf9E0GA5/YNHfxwHtr/J0u0
Mwn4UOkUZXuOh1FK5uc5LAJuhEzHOUbyMG9uVGH9QVqfiZ/vwEUetgtV9lVZ
EzAUYR83fomH4mPCC1/bEnDx5y7NCzE8nMxNjO2xJ+BxiENuXiwPB73XiUo4
ERD8ZbSLjOMhf1XlidXOBFTkSX70p/lDn/WwuSsBWnXWDXI0lz/4cdjPnYBF
T7y/baXXFzhEtV73JMDKpmPvRDQPH6kusXjuTcDI1smavfT7k9qK3rb7ElA4
Y3+PEa0vOtF8i5AfAeX+ZQlfIngYRn7OXRpAwJ+o37q7aX9+sqdW7D5GQDpu
NHQ9zcPDDbLJHkEEJAq8tIhQHjKjM2RiTxIgUeVgqxjMQ1NTiHx6igDLPwqN
r47zcO0bb7/JcALi3JPHGo/wUC1ctF/5LAEvBF3PDnjzUG7bLRvD8wScn98T
xHanz6PwnUnERQKaVC7//EXXrzxz6eL5Vwlo1/j3V4vJw3zXkni9eAJiN18t
2MjgYfqyA7MP3SBgo+qsWjML2s/t0J+pSQSc6vGTydhD67v6sXbdfdq/kQbp
ZchDk/1HtjMeErDr0N9jgVt5uEVyZtGxdLq+i12W226m9VanaCZlEOC9ZEb2
Il1ab4TOvVdZBNSdlnfK2sBDWaNaha7HBKRq6zVOr+WhmJBjjGguAWeXXOqW
Ws3DgRNxQXvzCfhld4Nppk7XX3fFkE8hAcefWld6LeJhw4+XTleLCYhOu7JB
S5H2l8v4WFBCwPfft8KuydL+vAfMP74kYDOZWnVNkodpq05X/Cml50FeovE6
cR7e7FPQV3v9//N9HOr8j86fw67lrm8JkD+0tSBthItHVNuToqoI2Gd3Xa2o
n4tObX7SOdUEGEo9WOPdyUUT8u7vsToC3ESKt3bXc1HW9HfjGS4B/rEK5z48
4mK61tPQ2310nk6K60VacdFHfnSq6AsBOiJBR3ZacFHnl1Zg4yCdd4k72nq7
uVj2JtdTdIQAVaJbpnkjFyMejfQu+k6Ayz9ju3NruLgvRstRb4yAyUcDTsHL
6fnCzGV5TBKwnSstYbCAi7e3jDSf/UXrv+O2W0KKi4fVtPan/KHPxy02V56e
byNfnuz6IETCrt6WpoFfHJQIebJBdxYJzGPVvl3dHKx3GH68fw4JjwN7Q7U6
OBhvvG6l+1wSGo9ryF7mcVBN+sniZBkS/nYJq9i95+Cm+zmSIkokbJtu7D5Y
wMHpyKFIZRV6fTdfzvwJByu81s7YqEoCt6J5j0IGBy10c6Zc1UlYJrIpRzmZ
g27Vj3vrVpEw2OtypTiMg2tzvjn0aZJw20DEcUkQPf+vrukQWkfC8SXRO2yO
cDDc+nGztjYJ1PGdmxztOZg4nF12cwsJey2blR0NOWjL/rolbxsJxtcuRCjr
cXDZc82i94YkiHwyXvp5LQdzz2Q//mdEwhjX3+WDKgePuX7VWGhMwuUzWlli
Chzcuk/zwQYTEnbsVV3gJ8XBd/LZSc77SJCcX8GXE+Zg7K9B+TBzEmSvXwux
+sVGQrD6SqIFCWdC3Y6M/2CjUoWn5DNLEiQSPr0d+cbGzkdZkbUECWJ+VpFm
/WxMixkU+cwk4WeQXrL0JzZ6+a0OnWbRfqK+d27ls3ED5TmlcIg+n6Lon80f
2Ti5JStgvQ0JPquWm3I5bCxVGxzeY0fCl4/btYya2HhObLXnYQcSynPqXik2
sHHPgEdviBMJSelLvzPes1G6IdMhwZkEO52ZVSPVbOTmDbTnupJw5c+lFQNV
bExOXMWqcaf1npbT0K9ko2OIR/MnTxIMA/cotFawcaVjpvlfbxJujLvElr9h
47sU/dzvviQ8mze0bbKcjS4fa2T6j5Jw0d7fz45mMflD/h3+JFi6ScLoazY+
sBhkNwWSIC1Tdi+NZqPoYN13x0lYVTM/OYjm7qo5ia9OkJB66KKpPc2nZyRP
PQsmIbD0sihFs5qh5qFHISS0SzwIZtKMJ1++TAkjYciroZRFs23hPtVrp0k4
/E/i6P/5z2h72IWzJLgdzCu2oPnWGu+ukPN0fd2CA7bRrO/+d4d/JAlzN27c
rExzy4OYB24XSfByD2f2lbHxeOcicdtLdH8LPRC7S/MClRxXRgytp527ZSfN
BZRBtUkcCcU9V7ubka7/tfpVBlfoPMX/LdpP8/d622jtayQkyLDNnpey8crs
4W8a10mY1XJIXY5mLeOw/aoJJLAbn7jYv2Jj/Wmpp3I3SejpqV7+8CUbJafW
BUwnk/AQCs5pvGBjlk4Z58dtErLm9Xv6ldD1PWKh9+UuCR7eV1fUPGdjf1Zn
Iv8eCYskFpzTpTmy78iv5gck2HRUJ5QWs3HFUmHr6jQ6f0VSme40V9heeVX6
iARd0T9KhjQ7JS1ZnJ9J51fkiqkxzSLcp+EZ2SS8cJgVGEFzqsyO7ts5JCxF
53Rxen8wazKKzyXB885Ech3N/AuODy8+o/VuvH+ni9YXUvFdPCyfhB+3+qJM
aD8qQmfdAgrp589/ujqT9l+yRa7GvZgElnqK5VL6PK2O319tV0JCRqx+9h26
fyafaccQL+l8Jovmhr1lY8LQmyHTUjrfV8yK3r5jo+4qwsKwjK7H1nUr/On+
Zjv3PNUpJ0E7fG3ShQ9s9E8NkFtVQcIc5dQaMTovsh2igYsrSYhY3xL5hc5T
ruJ17vx3JAh9D+lcL2DjUFzBzX+1JEQV3tPtGWBjTO0uep6TkJasc8B4lI2a
M7nWAw0kbKgw3fl3go3uoeOLOc10PRmeY5biHOzx0kvLbCPh7FL775+Xc7DN
9PkzcpAEq/PxPrEeHNyx/wEr8Bs9T+Jk0/r8OZhJxE3HD5NwKD4hbH0IB0/a
Oe9h/yAhJr3F+1IcB5UCZbot/9D5bq8/tSuPg2dO/on0mybh7pq9J2a95OBA
WN+aq0JMmMxIk6io4ODzqFcnGkWZYMtcX6PN5SDrrruMxVwmMJ4/r3hL32/L
HhJFvlL0/+l3i6ZFuKiRZWgTJ8OEA+2aMR6SXJwskM+ol2fCSs2UC38Wc9H+
hdD+IQUmfAs/eX/DKi6+Kxscm6vEBHXPcrMXOlxMqH0NZqpMcBVbGNaxh4vT
H7J7vdSYYOVzPO40k4su3IToaHUm2ATpTEQ7clG3y7uldgUT7lnp5H0K5iJ3
fOGRPeuYcELU7Et8HhcN/ogu8FjPhN4aD8nwci6mCY+8uKjNBK2wt5bv6Pvv
McnKmdV6TBjbfryFOcpFeXW/O7uBCYlnMmTjtHlImNXU7zzAhF/Os0qPvuRh
0/2Tawz9maD9+XDy0eIWlBUqfK4fyIThNRW8sMoWZFiP7tI9zoQvLOJYCrsF
2fPdbNcEM2E65WvAktEW5J0n45TPMiHqgFHZ5OqP2O6qNTpxlQmgwNeKyP6I
KhWeIT/imVB1x0uv6NVHtFFLnzV8gwn3+foZ6g0fkd+ySL03iQmWPNuhhO8f
sdN0DoN9jwmppps2221pxc+re/NznzFhz0bxc+L1rbjiwpLt2fn0eVc3agsE
rejSY12XXsgEF02needHW7E/ufnz7RImHBxa9Uh9fhsOzH29IKac1mdiHL+Z
2YZDw7eC3JvoflhvLm1e14aTeQe2qn9nQu0s4WyXh+0ouUm3Xm6MCQ+nwk+t
y2tHtZdK9mLjTHggybZb+LodTSo+ne2fYkJ3+2ytfR3teJMdWJsjTEHsmfag
Tws6MId10ObuDAqc+976HVnegeXtBsNXxCjQIGeNCet04EDPTLnAWRQc3tUq
pnigA/V/3jy4RYaCu1OvxHdGdaD5idCvmnIUBEyW7l+T2IGOfx1DVeUpWD2j
5Wjnww6MEtO8J7yQgj09a0cjyzrw9kVpnR9KFCyqa9b1revAZ3N/vu1RoWBa
hDAVb+3ANvnSL1VqFJy64yOu9b0DR27eC36uToGF5Pn4kr8dKKoaOTdrGQU7
NS/V9UjwUXOFxfpYDQoqS1WkZFT5eEq3O4jQouCyjRW30oiPl0sqZxtvoIC8
H1psvI+PDwyykvV0KDgb1aDiQ/DxvXFAmdImCp7YllCVTnxcRIlLdBlS8N2t
+5RBGB83tA3cbNpOwZCz6+iN83w0tmtYXWFEgeLKebyqS3z0cU3cn76bgvRS
xZT6BD6WHl+V4L2f5sqdI+pP+Nj0e95KuwMUvO9zShnN52Nv2I8SCwYFYyUi
tpUlfJx34SVfm6JAZUzuUUwlH20TzVf8sqXgsdprw3w+H/1UtIsH7SkYjYxd
29rDx4i7Cns6HClQPtbWID7Ix5xHnd5lLhRsa3qtdXiCj/+K/QoifCiw7/mR
eVNKgO3izy7dO0LBO8bqti55AZYQow6lfhQ07qx2m1IWYMI9rU2tARTsYiQm
cJcIMGDEd974MQpWKlmm+f4nwAMGT3pkTlBwPnBirERTgGujh0rWBFNQPvhX
98l6Ac5pXXPFNIQCm17RaCNdAfb/5+3qHEbrX+JS7KsvwLeB2dtOn6agqGHh
Tk0DAd57MyiXcpaCNFPeBb/tAgyXWT1QfJ6CR7sSf2zdKUAbO48ydiQFv0xd
hSKNBaj/OOPGyEUKMEB1r5mJABV/93tJRlNgvLPpTYypAH+aaBhpxNJ6rNKj
du8RYNMN14U7L1OgFGMiEUzzk560YburdH9Ynv+3kuboDb1vg+Mp2NS94SBF
r/cIX56ccIOCP4Yu22fS+++uP+yXl0hB1fQOMUP6/ctUHpg0JFEgty7mqyit
T8Tjk+pgMr1+WmGbPa1fUKT+U/wOBcKKhWJWtL+XYo616ql0PuDo5ATt/yYj
NdXgPt2PxQVMYz0BHkvtPH7wIQUCiYcFZtoC1Npmt+xqBgU/1owk56wS4MMA
6xDhZxRYBf8aLlcQ4JnyW4xF+RR0fWlq6JQVoL1028rNhRQ47Ku1+TtXgErZ
VtwjJRR8amx5vFtUgLGfmOs6y+l+7bkKfqN89Fx/Q+xPBQWUMOHN/8pHkzBO
m0IVBVK/hzIZ/XycoUxc2F9L5zNn89rdAj4GWR7oKm2mYGuOy5+b7/lI3r1c
1MqhQPuk3o67VXQehhpixnkUzHmXhQHlfPx20Vx/bTsF/7Yn/HMo4mMNL0Z6
D5+uz9lprutTPj5aXtfr3EmBrVm3x4IsPjq+3nstpYeCn09Taval8NFQ6pL7
814KPvzWk6i8zkcVmxpDTj8FbrcVF9XG8JE7afJV8hsFc+XfdLqc4mOe8YVy
jWG6n8wXXZrwo/MdX5W4c5SCQLXbIOHOx71axrtO/aT9hFyWzWbwUYjDEQ6Y
oOfNHKUPs035WHjCudRzioIVHlK3hQ34qP7mnN6hvxQEV0zdql7Bx1/km5X6
Yiww+5Kz1XusAzODYd7kfBa4TQwN8CM60F7tQ83wAhYcj/k9ayqoAxe8tYvs
U2SBU27h+cWeHXhmXpgQT4V+Pj7rddr+DjyY+up7wTIWiM6vsv+3sANnVenz
/HVYcMX6im42Pa9LPWuueeqyoMmu6JNMejsGSB+0cNrEou+zAT7eSe3YaXWi
2nIrC7Ln5fD7wtux+GvRi/U7WbD2846vcvva0efK7qCVxix4ORmziTRox2W6
PJ0lJixo3X7a3VKrHS+HjT+W3scCxTlw2VOuHd1kN94dZrAgYpP6zXxOG6oW
VVj3kSzw0e708XrbhuxDxEIBxYKkA4eT6/LbEB76X60/xAIjkaz716+2oeKm
Z+ceO7FAaekb7cI9bVhls87d058FJzbBO/e8VpR1cnuREkj7lfI3N7jdirZu
qXM/HGfBNLXNRftiK477yT3TOcWCmUKpcel2rbjswsSvv+dY8EozOTtGqhXD
n2H05RssqC57/04x5CPqz7TILXjOggD6S0HEoQUjJC+K9L9gwePTFotDzFqw
UaacUCplATXHvblocwu6qehMhZazoC0ot+ysTAsmrFfcYVLLApWmUDlH5GG3
7oH4k3UseF44HfQik4drt0b1Zjew4Pq39D61GzysNP4TJcNmwYz4rgs7vHk4
dqizubWdBcs0j3ptVOUhOCxcMVfAghfRLC7M4eElF8sgwy4WVC37eid3kovq
RytUHnxmQYXYHn0um4sHIh45ew+x4NiaeuPYq1xMvtRVdGeEBePRwQtUznKx
/7LS7KbvtL+eQJEFAVwMvxWdozvBAhejJ7t1KC6+v/tWyH2KBU+WWt4zMeWi
Qtq05a3fLNhMzrHO2MJFxyy9h3V/WeAQ7K2xby0Xc3KPTPz7x4JG0eLlK5Zw
8X+kMgEg
           "]]}, Annotation[#, "Charting`Private`Tag$344688#2"]& ], 
        TagBox[{
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1:eJwcV3k8lN/3R0gl2UOSokKyb9meY9+XGEa2bFkiJCQJbSpJQpKQpFIfihLa
XCFblhhbtsxYhpmyh7Hk+/x+fz2v9+ue59zzfp/l3rvfK8TuFAsTE9MBViam
///e3XiaK/ZV966+02R0+RpWwSG974z/Y0zmWVS1E46/Rr0ukPJ/g63JGt+b
f7+GpamNue5MrsBs2wPFzHBcr3DWj90fYWVin4rcytawGIHNys28WuzzNPe6
4rs1LCPVSHf9TgMWyZqt11i6hr3ZlVS7Ev0da0313CtRsoY1JnWa/vVrxwxS
9O8ZvV7DZq9xUqNedWDuge5/lYrWsEu1b6SX80iYCBsfffol7g+WXi/c6cXC
vTlkKAVrmETcw7mz135iR97ezN+fv4aVfNFWmY0ewF4PpdOwx2tYk+bVD7/9
fmHmsSfSpR+uYf9p88WqvhnBfF81b9u4v4bNDfg8Dn9FxuJDn51AqWtYrAgH
ZT5vFEvvV7IWS1rDHjyw9pu5Q8V+gLZxauwa1nxv4Oyk3wy23vOKX9t7DbuZ
mdGUpjiLvXb5zf755Bom6485K7+ZxZiSmA3kXdewsK33Loa9msNqaC5PyYQ1
TKD3GCev1Dy2vdJRW/j4Glb5nJJd+mweG23qFVO1WsP+GalUzeYtYBvFpXbb
jNawJwJD1ilii9j+FuGQD7CGGY5f/yWfvYh5GKzd0tFew25f62UKefAXCxfi
+fBWaQ0Tqo02+HNnGROpETm0LLqGfUqV6ErasYIlUA5d/i24hrl7tfjI3lrB
dLPPHM/jXsMKmMUSAq8xMJZ94/mwZQ1ThK+NU9FrWOi/zd4z46tY167TJ26t
rGE/ig78ch1axaJ+8dKkItex2Dfmkzzdq1hVrM8O/7Mb2JmI6j39tauY+Zet
1hN+m1h+fOox08ermOKm11/B2U2sMqDdYy19FUsSP9kmoc0Eys+OiSYnrmLh
Xh8jCHVMIFSb/sc3YhUznAite9/FDNuG3pJ8zVcxyp8hz6i/W0AhqecPxyID
60m+/T7lGCsYG0Sd155iYM3yx7a9vMQKefS0lIBhBvb2bHrJTzY2cF4U4s5v
ZGCX/5pvagqyg/hYxTpPNgMT36jI3lDjAHNW0uXPmgyMP/fUrMBFDrC8Yu19
8SgD48D4DOUQB5wXmDNY2MfAZuKD6e4m26BMfK/5dlYGVsV6ULOauB14i4Mc
RhpXMDfO1N4rUZxASrNeizFZwVp3qm1jdeMGj7qqADa1ZazTgjezLYYb+G01
rgkfWsb6bk0fepjNDZalfDXSgsvYGNsLQ7lBbnA6ZlantLSErW/sjndy4QF+
iVKZhPdLmMw0Y6noBC+Ir5N3bh5dwm62fRlzcOSHie+1fz4zFjH9u0bVL2yE
oD4yrK3VYx6LNy972RksBJUaeuPvLeaxKjaJtI07QnDl2qmR82rzmGYMk699
ixBczpZ/f2XHPKYc8GnHpqkweC9tCX74bg6TNFAkOuqLgI6sxl5Yn8XYl0Wn
WVVFIfH67ahS5hnslPzqTsWd4hDz+sCEHfcUZiV9ak7QRBIuCt4oqfrcg73t
uhTRpCEFnMI/6auuWajwuo8XxUwKqtj8V0z181CumoXNmrMUHNgptO+H/VOU
mCkkffSSFLB+4BmbCX2JvF3fDaZ8lYIdeAPfa3mL+McmDZzMpaGA3bmN+qsK
RS7Y81JdZKD9/hoTj/F3FFSgubkZJANRmXukKRvfkZfD/t9CsTKQ09dV1lLW
gqwrpr+Z58nATR6vzZ59bejwxVsXXo/JwORCmohaxA/Ux4JGIs4cgX3cvPoZ
0iSkxSvzhjVOFsSCb8i1W/ehNmbnpta7sqC11EW1zOlDHnO3RjPyZEEu7qbu
NXofuvZjard0jSy8epUQsvvGT9SW/DLeiu0oSO276HbrYz/y2CFtl3H7KHw5
2ZRyhHsIXWOV+ns4Uw76Tu7RGSwbQYKLxF1zhXLA+MPa9717BBWO3pD++EEO
VJpsV68tjaDWGqqb5YAczDuumDmok5Hg5Rf1oWLyUMZ2xfR8ORm93DiU+aFA
Hla1ttGXX1GQ31pqzjMnBQg6JH4AgsdQuvXv2gseCsD5tilr140xVP3EiGbl
rwC2o6PB7x+PISHTFbWl8wpQ6Mtae/XHGGpMd/th/EABesJ3p0sqjCNpOakt
k90KUPfCV4+DOo4cL1+W/jykAPoFzbU7N8bRla5+m5RxBRje8yh7hHcC9Uff
ydb4qwAKrFnVNJ0JlNgwr3qLXxFcpe7/vHBvAtE9vvjL2CtCVipDapccFQmV
Cd7956wI1JJvl58CFRluDX3f6aUIP6SdvzLZU1F28QGWi2GK4HPWP0j4PBVZ
rt549P2eIkwKfeAe/UxFxWl2bUE/FMExlrtcCCZR/8R/i9CnCMLqzJMkm0nE
rsm2R2BEEXJnq1zPnJxE7iMVfl9mFCF12/VG3dhJxHV0LzPXLiW4yHzIM/Dj
JAqppyq/sVKCpO526feyU6gaigJlHZUgtuuOwSWtKcT9KfTpS3cloEyvWvKZ
T6GSNwzeghAlsP17vDPXdwrNZ+6Yz7ynBJoCDhVT2VNIn++HtGCWEhS4Pb/X
93IKpd1J90zLVwKR7zohl8unkMqVvR133imBO73RerVtCkUGypdc6VYCIepw
9en1KVQ/vkDdHFICwZAj8tu30tBuj8p9lyaU4O2RPXIneWiokqB39/yyEhTu
4yXKH6Qhho59cJCwMsTHP2AqMKMh88rdz6f2K8PMQ1lvKTsaylIaHPKVUYbn
91PNIp1pSPPwKStPLWUoCNU5eOk0DcVwn5d1dMPXl4WTc27SUEuilg/plDLk
nU8TIt2lob1sTNm2wcpwWprl3Z8MGqpi3NxhEacM7mI91QMFNMQ0mkXDnuDr
2iKx9YiGbN1OHvjyUhnqfQpM7epp6EmvhLPmW2WYH1ULaG6hIf2WoiaVWmWo
/szWfuEnDV19X1UoPa4MtcL07alzNNQlf3Xk+R9l+D27lKy3TEOSr0yEJJeU
ocLXYbZ+nYbqcn/cENuqAtkd1fP6W+mIX/g+erRLBYZLQ+wUOenoVNqJZSEh
FUjIWlUZ56Yj9psUXz5pFXglEKqfLExHjiwvclMUVYBXNSA2Zi8dvYgJ7Nmp
qQKpp0UvHNhPRytL8ly39VXAZI2/4pIkHZmeXTTisFABrmwm1aTDdJRJr7x0
3V4Fgnc1RlrK0NHUqUvvWVxVoLN8LOeLLB1pjuj9ifNRAaGrwy6/5Ogo0Zn9
4EaQCkiuB255q0BHugqcS1PhKsB5g19inxIdzbHxNvTEqICzwI9AM2U6KhjY
nVl7DY/3zdFsJRU6cirdG1CSpAJSLIm/BnG844aEZk66ClxTrWkwV6WjKlfp
HYnZKhBExezjcBymJD8YWaAC+uJsbZdwfJBDtdi7SAU47KV/muG4b0gz1rZM
BZ69drGn4v6S3oGNzmcVmJKPtXTGMXbLWFymDueLX/6e4/HMu1vOCbaogN1Q
+ssOPN7nKnY1W7pUIKOstmBYkY5ObHdKmx1QgUhPUblOnF/1e2/VZroKEBwz
nS/h/MNvB7BXLKiAGmPne+2jdHTYM6T36ZoK1COF2bkjdJTMefHCpR2q8HaE
tMtcmo5cvFO/KBxRBbmtVSu/JeiI61hm8l5lVYjMvV3y8AAd1XDlntyuha/7
Oxw1xfMl9fEl85i5Khi7DaU+F6OjJe6vRg9Oq0JianOZAp7vVxP1gtfCVMHK
OvllxW46cvvcQg2NVoXXxhe1ZAXpiDu1s9LtiiqkFUwaJPLTUZ1f3y3zRFV4
VHHUv5WXjs7rDDurp+L765upzuH1JMM3dkQySxXcFuOPzHHR0b2qmdaNl6rw
79Zm17ntdGSY/jeXVqoKHYckN/7g9bkSsBbS+0EV7DZrXJXZ6Og/jFmv7qsq
CLxptgUWOnIX2Mpb2qQK8/+qc3g2aYiXzjma06EKnUfb/QvWaOhbNW9Z4k9V
YBV44LGE94NskJijz5QquCtnCXTM0NCInuTh43OqMN61NEWk01DabpkVHQbu
b8WbP2uChlZrVLN2b1ODQ2ffO9oP0tDrTK1AVh41CJt95tLaQ0OewXrac0Jq
MCQhksfRQUONwlbDzVJqsPKxdVd7HT4fZuzeVCioQYryxBPPKhqS/+YUX6Ch
BrlrW3bXVdBQRqjPgVhTNVBaDafseEVD3g0XfRX91QDOmTUcu0NDPtqHrJdC
1CB2O5c7UwIN+Zb+UP10HrevsqRUx9KQ/6ODbEY31ODf9f379ENpKDik/anT
czVgzV/yemtPQ9G7JchxY2rQsKSUxy6Gx5PU2mj4Ww1a3AfcHu+moUvMUSXb
FtXg9xvZKj18PsbTW+LStqiD6Zn0kTRWGkpAkWIvDqgD3e7Wjz+0KXRTZT97
kIw6JBxfSCOOTaFbL7//UVBSh9PGbwWeDU2hpDTxLx/11IF7Z5Fqb/sUSvVr
dmnzUIeiG/2XhN9OofTBcIM0f3UImbCLO/BqCt0/vu+IU6g6KI6xdMw8mUKZ
WuGr5Dh1CH7bdrgjZQrl7hJ7+DdXHZKt3H8UBk6hvGuN8R+fq0Met/aPJs8p
9IQR5h/3Wh1cZ/ZrlxGnUMFog/q2KnV4/qJSdFF/Cr2qONsjOqQOh2zffX26
ewp93Sp8PPCEBpjKH7YOC5xEE0/lzH96aoAwM+trisck4gRDA5PTGpBSt+wV
5ziJnKJCVCUuakDQpEqyov4kmpn8JjyQrQGDxwZT5kUmEf/1AV6zZxowM1lv
bcIziTT3z+2oKNYATpV19eytkyjhhOi/1CoNcNy9WnR4kYr2NodRzEc0YCyH
XWbuOxXp+94cqJzUgIFBg5cRX6nInyW369CcBrDLqSTWlFNRmWZTPQvLMdhV
VX+mII+KLP7b999HiWNASeOwNjlLRReSWs7J+B2Djwlrh89upSJFnviMqXBN
cLcrTJlJGUcfOXqlGmI0gXJS64TcjXGkzyT3qeCaJgz916qtf2kcEWYGfp1M
14QE5f/8+v3HUWSrunTPO024vZIdnaozjj7fmvlUM68JgxsaezWGx5DRZWPr
vFVN2JrvsautYwy1ReWMXGLRgsnnKh/dvo2hX34WbMd4teA3TXD0ZtEYYjF+
Yf1GUQufhwpCExfH0G2dfyNJx7RgcfUlRSx0DPGrOpw7racFuf+96LjtM4YO
Sm7JPHhcCzofRz7cbT2GTFlOkh+FagH/Q80uL8kx1MF4f+5ClBZsPHCpKBIZ
Q85znOzEeC2IsjZxAZ4xFDjyUYY3RQt6i75a6m6OouQqwfCbb7Sgkkm4VXV4
FHVFt7FHTGtB3sXKrb/zR5HHgo6sdZA2mD56z8YuOop28jL96ArXhhHJptP+
PKPoo0LNOZdL2lB6y2W5lH0U8Qcbf/JP1oYbWTm1YnMU1DhpbX61RBu2b7ye
j6ynoIitPNPbPmhDvRdHmsRnCjpwiHQv5as27FrPILG/paAYb+LPnE5teLgZ
sft+LgVJXxG+JDmgDcWBQWy29ymoJ29A/L9RbWDpJR3yTKIgheGT/pWL2vDL
4q9g1kUKGlrfz4ltaEP+kebuxnMUlLhn7M03Nh3oad0IcQmioDEn/+VOQR1I
i9yi9J87Bd07L/PoxD4diNmvbO7jREG6Gb91Rw7rwL4QitMFOwrKJIUm/NHQ
gR1+8mJPTCjIaF5JJlxPB4gxztzP9Slonvtv66qZDgz0/Eyh61CQpfUFAQ4X
HViPjDrDp0pBTE2XCw5c0oEqYwj8IklBxVQD05fXdeAa+0JsmTgFObOz/5ZP
1oHwYT3pHFEKKjNIVNZ5rAMZEcoa+/kpyNPLsrf2Bb4+NFxXvIuCuC5zXTQv
0YERC867XDsoyL8qtYb4VQcMI0NvazFTkMAQwXe4SQcu1129yLJORjVrgttP
depACxfv7rQlMhI99uh42KgOxO2/eFiQTkY/3j0dSWLThbsmw292dZLRpc5T
1/i4dMHSQjnt+ncykpk7LJUlqAvqnZnSM3VkdE2uKOTFYV0o7a/pqKsgI0Wr
YD45BV0Y7P36n1EpGQ0HKlSUaeiCWyUlePQVGWm8LPv31UwXWHN8hfNyyWi8
ITLf1E4XJO9+jSRlklHqhIZxu7MucK3tMbRMIyOMbW3KwVsX/G4aqvElk9Fv
iS93BgN1IeTbg60Kt8jooX6cone4Lpx8+jnw5TUyMvbU656K0QXCPH3lWjwZ
LcZtuRB6XRc6EpUn62PI6EnuN9HlO7owaxB8JOwCGWW7yvY6ZOiCbZnelvuR
ZJQpknavLFcXwigDC2LhZJTWx7Dge6ELvk8Vu7jCyCg5w4M97I0uNEZ4HfQK
JaNbhIbqHxW6wGPqISwQguvBK3dRvloXSCk/Gw8Ek1Hcj3TV5EZd+CbdJ3r9
DBlFJ6/N/P6hCzOt8UyqOI6w9Hpl8VMXitYXbsrgOHR7k88rsi4MSC6vuuI4
sFF+3zaaLrCoTnHW4tg3IeOn37wuqHxmYrXH/XsabqTVr+rCjrr1ARZ8f1cW
H+uDWzC4h0VcbMSxXaxiLYUPAzOWtqNnzpKRlXbmJT1RDFS+kISO4XxMV/+p
50liEHp8uH0RxwaVp+b/yWIQT9lnmnmOjHQjW4rcVDFIGDY0EMX1OKai7PdZ
B4NZ96f3o3GsMv9w/x5jDO7M7Zd4jWOFEqbBC9YYPGfetfAWx0eC/TL6HDG4
2Wbtn4DjQ7JttuonMTgY1ytyGMcHaCo7MvwwMN88zkjH99tb+OjbYggG79v5
iB14PEK+LPH2URjEBT34MIzHzycZoPk2HoNgpdtr1bj+XJT2Re5bGLDGNEhf
wvluy1N7E3IPg0RDfmdhXB9W95yAtocYXDAaqMwOIqPNPaySR/NxPVLlTHcF
ktHqz9PDt19hYNfpXnchgIz+PujIpL3F+YvvvTPuR0azDhr2Zp8wKH5y0NfV
l4zofI93FtZiMLEW5zLpQ0YTHWyN7C0YpJyjJKd5kxH5btCVU10YfPx5ksvf
i4wGrUjadYMY2MjcfB7iSUa9OzSXD4xjkPZuqvSdBxl1NuWVXv6D278vYtHB
ceuNrUEjf//PPjKPD8eNRsGHsH8YKDFUKnRxTLl8etZ6C4CznMvlOhz/Gsmx
it0KYOrly/4K9z+Idbwq3gGwayumsIDv35/LyjG0C0AcBl/k4/H2baif4uQH
eDo++u4DzqfbNbBGSwggu9XfWwPn3/kpd1+gKIDxAIfXXlyvHyKdMVniAJ49
Ehy+uL5tF9j6myQBuMRPX+XC8/W9T0OdIQWwEhJVwXOejOozHs8RFQHWnXbn
cuH9V/e30/qGKkBr6yEBBt6fXwnsReXHALTu/hMQTySjz7xnfAX0AdK3lKGN
dDJ6l6w50GkHYLTY6/7rPzLyesTF9tERIKPQs0YDnye8hRS5J84Au0s5u66W
4/3yNfFKiBdAC28NT3c1Ge1rcy9y9AWY6j623v4Nj7dfqUfnNMDrgFLd581k
JLvYL80ZBuDaLu3cSyKjAaY39gsRAGJfC0eO9pFR4s6rl/ovAPhKxuwiDpLR
5KEjHYWXAUoycoolxsio4MTFKKN7AEXp8QG0OTKy97XJl70PkMj58DbfXzJi
OSfRwvcQYN/+ftkjK2TkkfR9HyUPIOW3TJvePzLa9fCxWVMBwBa3u3U2+Hyu
enbuXEkhQEHH45kAVgoSRXsaYksAyDfjpynbKej795nZU2UAh3pWnx3noqDo
vloRq0qA4uPTgr958PNw/IGhymeAS02OSR8EKKhvLjB4TzWuT9I/UrUwBd34
h2Wy1AGM/g44yCFGQWo7+GumGgAyw6vE7h+goHTJzwKV7bgeqc2nUmUpyEAx
BXtMAtCuCBnYpoSfZzo+AQm9AA0yQgLd6hRkS+T8QvgFkLzBNHrakII2vUcm
tEYBDsbc2lSxoKDXoWXcElQA6rbtS8fx85Iz0dVnbhqg61cq0wVPCvqUoZDc
N4/nw++xyMUACjr9lLUSLQGY2I5aVJ/F7wefi3Yk/wOgnFLPWLtCQddm1t/K
cOnBYOj5jOAXFKS8/mOQh1cPvC3ruhtKKIjC8YydIaAH+dN1CtIfKQgOWDk3
7NUDpnqfmbEWClon5DD7HNUDNamR5Gj8/hH+Ucc2x1IPGp3EHPcqj6L3zg0s
P231oMEK8xfXGkVLq7bv+R30YFF9+8ai/ii6oOUjkuSmB7nKBxel7UZR7OfE
sehgPdCT0mnPDBlFyJX/QXmYHjx7c3PfYuQoYtrIMZuP1IPRqb4or9hRdEWn
9HVAnB4YGZz4nHtnFN2o6o1yStGDJIs676TXo6jR3fNIeroeVGDCYZEVo2j7
Jm2oPVMPHA7+l1NaPYqSsH/6Jk/0QIxwbFCqaxSlVEvuVHurB1HhbAeV8fta
h8drdLZcDxewYK5++xjiZdYIK/6oByabuhLPBcfQfT2LXslaPegf1tA6Kj+G
smrOPuHr0gOnRzEssV5jCDU/m7/log+MjKfMtxvG0VuhH2cvndSHRRdJvZaO
cVTguzob6q0PKc1tAyaD4yiRxWaGGKgPVhKBWUtz+H1Yc4V+8CL+/wdSnKb4
BKK9NB//mqUPbjs3D3ddn0CDy+E+73P14YlLJtdS6gRqN3o8WpivD0t7r0sJ
502gMvIC+e4rfWABlQijjxMoTjhn2O2jPiTrBKWH/5lA/Ldmehk/9eE4mL1u
N6ci9l5h4p8hfbD7uO1qpAMVMSQNe0bI+nD/V8/t8ZNUNFyd2dUwpQ/cqZZ5
UuFU9HJFr+M+Qx+exs84V2VRka5/erOisAH4LWnaOoxTUYDJsS8BTgZQs5An
+iJlEk1LCX8rdTWA2kni9tCcSRS2ndHC8DCABzPJHPqvJlFMa+XgrQAD+CdB
MRupnUQp9hrrL6MNwGRwVEt0aRIJqAqxzscaAFflmwATlimUJbiyQ/OqAUys
X0/R5ppCT39W7Gm+bQAzd8rmzhycQuUn1bVo2QbAPc3FFW87hbT0dhsoPTGA
uMfGz246T6HqA8vm0c8MINf9TrCxzxRqGi933v7aAKKi6pxpkVNoMFAtWgYZ
wI4/2fcMHk4hlijVD6fJBuC1IXEsr3cK3Tgh8PXtuAG4h6DKE7+mEKfW38bV
KQMoUrt3WYI6hQT+lfUlzhvAr7v8LIylKSR1TWXl1RZD4Fxxvr2Av3dtUpTV
6QcNgUvJb83RnYa6zvJhyjKGwLGgOqXjR0NO9gvGF+UM4bH3aoMA/p72Enzn
uEPdEFSENF5cvExD1OVUd3stQ/iuwnxi7RYNBf0M832EGYLvSWKWTSoNRWYr
RR4xNQQsJHzVJZ+G1i7xxp6zNITQ5TpnDvx9H39y/vonW0NI4fi0LayUhm4d
eHvf4oQhOI6ubj+DaIiLNTUnzc0Qdq2Vqa98o6HU8bPPBjwNgXyBLUalhYay
CxXfB542hODb6yFfemmo8ad34+NgQ0gWJU7OD9LQ4vaMAVKYITCxuH8eItOQ
uHbj9NbzhvBxe6VR/AQNWZxZZda+aAi1X6ovD9HweHNlBULjDMF2hVuIMU1D
+e3uUgVXDSFHfBV652loVbHWmjPJELhV73lMM2jokPdfT0gxhIK7Wt8VN2jI
Lv1wRHi6Ifxgno2wZKKjV0u3Hw1mG4L2Q2tpMXY6OvGJMFlUbAgDYWeOfOem
o2u/E9ZGSg1BKWkt9iQfHZXs/cAlUI7zjzL4b16Ajjji96peqjKEv+jSlPge
Oqo0nLhs1W4IjZPD0fUH6WgsQuj+ZZIhFNHLbOKk6Ij7hXnh+15DOFB2+obW
ETry2/ambe+IITxQK5N/p0BHgm3n90zP4vxEVplUtOhIf/Ol3IG/hhBPIv56
okNHwQqDeo4MQ/hg0r5vDqOjLE8uh8QNQ4iOu2klqk9H9angX8VsBGH/jTH2
GtLRfG3YxXk2I8j+jZFmjehI7G9B8qHtRqBRll9x14SOzA/1PnHmMoJr04ud
f03pKIK47X0yrxEMykY9FzOno7ybWo01gkYQfMZvP7sFHbV8ODOwJGIEalaG
5YU4XqE9npbZZwTT5nmOWyzpSFK0k/mkhBFw64je48OxrRWrQNphI9AOyknt
xe1jYtWkGo4YAetf633WOC5846+1Jm8ES4wHxZH4fl0jWdbyKkZQ0nvU7rgZ
HTHxtnp6axiB3V6VL8N4vLIGm+EPtI1AbC3HWNyYjpzCFW9+ByNguVHethvn
e/WZ96NNQyPQ+1RZ1aBHR6977r9WNjOCk69+MCnjevVvbfzqZ2UEnAUfya7a
dKR0Wnay3cEIuh4lXFhTpSP3R+5rW5yNQEqoyiJKiY4SW1K4NNyNQDi3oL1W
jo4ocn9V8nyNQG6iBfoO0dG9hS+XQ88bAVlFJ/A0Xg/BnSmerheNIMuV1WUf
Dx1ZlnrrmcYZwY25QMtaTjpiD9nGLH4Dz8/hAulfW3A9aIT49gycX7F50+U5
GjrRdNjjUxa+Xqes2/KbhtQKV7EXuUZQzLtguG2ShuZO5W3GPjcCmfCXJxyG
aciXTI+VKzcCQXZp57UmGjKsrnIX+WgEjcmC2k/raGj/43u67FVGoPOLlyaD
9+ugq/q/oW9GoBootdzyjoY+aG0fbmrC6yEidm6kmIYyRIa+vG81gujQTvbG
FzR0vO/KpTvdRuBMentzyyMakqtwcLvw0wi/QNHd7dJpiDNDSufUkBHcORmu
HHCHhurt29a1x41ghGKpMhFLQ9rtwjG/F41gssQvfw6fX8Kvf7v0rRjBhMtc
s50jDS0lIa26dSPwUN/fFGZFQ6Xmp9YesRqDtl/BjjlNvH/rS6It+I3hG++n
hC18NMTzxeTCK2VjiIojbdn7YQpNPxI5kaFuDNPows49xVOoJfqPxhUtYzAP
nC1fzJtCCRppKycMjMEidCxa/+YUWn83fH6bvTGsh5xRO+swhSZeRUT6hxnD
Pw63XVm0SeS4999wYaQx1CTGBCUPTKJvdxNMpqKNQSjyzAOXlklUEP5A6PRV
3L8l6+j54knkpfvhY2C6Mezu3HXn/JlJNNyx/i+43BgyNYdMn1KoyNrwut+b
j8aQelTsu8QPKvpSvvPHTJUx8Adu8nl8oaLsR2JPQhuMYejrUb0dD6jI+RQY
hPUZQ29AZKeKCRV1r1y9EbFqDJZhc1fKHk0gw0DO2ff/jGHnJ9VKA/x8LxtK
d1piMYHdjyrLcoMnUGrNM+nzO0xAMu0AzxeYQLZJDd+jRE1AP7R9WyVlHLXs
28Edo2sCsdE9ICg2juqMUzOvXDGBifeRn2NCR9G476fW6AQT2Pw5vdrkMIrY
b4yxnEs0gZRpDjeq5igybVA7451qArq6T7hTWUdRi8mAnmG+CSgdSd7x7D4F
kUwl6Ww1JjC8wPug8jX+XjIv17nFbArxehaC4Rd+IWabfsrdeFMoqCRela3u
QY1VDhLh10yhuTh8Vf98D0qR6/B2umkKXLIBtWxyPUicq3FMPMUUTMXfMd3I
6kbQ+n6i9LEpUL73LOuGdKF4i3s0UpUpCJUfPZ7B3omYTE3nd2+YwtOTRefE
ZpsQk145c94FM+CK3iJ27Gc+url72arzhjk8WMjrKjvYi4U6e9csX7WAtNlX
jr+rqRjXY9qI9k0LCNfUm9RboGJFo2c3LydZgJC8rY7bwUmMGhSvzXnfAgZO
cf5cvTmJucfllIs/t4DXnRebE6ynMMuC3ldmjRagn89AU300TGraIu0RpyWs
iLotpW/8weqVSKUj3JYQM7Ul5KH8NOZz3vnHQQFLkJldc/XznMYeMwXsLNlr
CSJfXy1hddOYIF/CjTo5S6j8dahIOmEGY9WovvjH1hLEotgebI2ZxciXVXyw
+5bwQvWnklzvHHZIkCs59KElzL0/6hDwew47/Ypa8STHEjz9rUPfMM9ji51Z
O1ifW8I7dc5+F9l5jEOS+V1juSWUVG8+5rkyj8nVtzLb9VlC+ehYgb3sAha9
3e+xzx4rmD9+V0nFaxFDudB0f58V8BZaSlSdW8RYlUUW6iWswEv1D4fI9UXs
jkursbQsbr/H56fji0Usr0h5+o+2FXSJbb/gTFvEGqyZdM67W4F+fXmqWPBf
jD/tYf+tJ1ZgnDoxIRixhG3v5usIe2YFMkvi5d+vLmFMu5MbXF5awUTJLz6n
1CXsT9aVsqOlVpBuldM69XoJq88PTO6otoLXz+RSn4wvYVFvdfSFR6wgJuJG
hKrpMha8WKHBMmYFKo/CNBPtlzEfNSV5OtUKWHhurxa5L2PHPx4S/TJjBedc
hM/6hy9jMjW7ljw2rWCJj6dXKHcZG+ogvywUs4bhb1292X+WsS4+17x7B6wh
e8vaYMjyMtbs0JMRfcgaTtVGtRowr2DlP5uvWspZg36Ih/s8/wqWQn7nNqtj
DSOlYnaB2itYgoQc4aeeNSS7Si2YGa9gMacKzWuMrGHzo/2ug7YrWMBUtnq6
FY5ljZjrvVcw/bnrPBpu1iBqYWzhmLiCaSgzcez3tIYYsVxvlLaCyUVE/9t2
yhra/hzt4shZwfYwgukDQdbgKVcVL/tmBVtkcvoWF2MNIMx01bJjBaPpd37y
j7cG93lHUeufK9jINcu3x69ZQ5QqZyI/eQVr5dB7LJFkDS3unUcnZ1aw59wy
FxoeWcPqO67jd7czMLmJEyusedb4/fXyNyEeBlbx6dZ5/QJrCFXdGnxiNwNr
9J2K+FJkDZlCgiHbJRiYrbbw39USazCsZdO9LMXAfvKYhWu8t4Z+YzLX56MM
jPa5MOzdF2vw+sGbcledgYWl9s3NfrWG4+U7JxS1GdiaH8dZuXprvJ5SPP4D
BsbJ5x/yss0aOhM5TmuYMbCjAYeDHv+yhh27FXsMTzCwcl0ifXDUGqTuxzpL
uzEwXf4bp0UmraGx+uknDk8GZo0m/O/PWkOBzsV/X/0ZWKjA81O3mW2guZbr
CBbFwFZo3WONbDZgaHEraV8MA7tczebDvt0GHEW2YxtxDCw18JTXZV4bCH9e
aP3sBgMr+yp58ryEDZip2WhqZzAw7QeE4bLDNhBtstUx7yED+xZ0zW3+iA1o
yBTN/srG99cvG5RXwP8X6qr5+5iB9eweczmjYgNJCoy0wXwG5v6Hb+CVBm7f
kH387jMGNlFj4DypbQPJ++pkthUysODMcz8P6uHrJ4iPjF4xsOUzT528jWyA
XzLoNhQxsHgDUm+emQ3M9PqeXCpmYBzCW4jDVji/C3rr3m8YWMq0Us8eOxvY
3C1ISyhhYEJ1Xg4nHG1g7rfrcbdSBpb3MLUrw9kGWFu6N8ZxLB1SY9/lbgNF
k2nR4m8Z2FvD+U4ebxuYkD6wwYljTZEDdjZ+NiCrevh0EW5fM3O8IynQBtwV
f3sw4dji22Xb5hD8f1F/0R34fl1Zpe1bw23Ap931fPtrBuYaSrY2irIBJn+P
UVs83jEjnrYrMTbAftLRLO0/BnZmj55VdbwNhB1V2vroJQNbmg1t2biG78/P
2Rv0goHF1udZaN2ygfvbVN7vxPViz/7RHHXHBoKmD3VewfW8e5bJvPweno/p
yvAOXO88UQ9TxSwbEHSMc+LOYmBfw/YZHf7PBj5ltM/n3GFgq39nUkTf2ECB
1N3R3EQGpnKhepDnnQ30VPnnZ+P5LozzDF//aAOJLD1d9y/jeiY9fdrRbAOS
riUS9yMYWPOu8Jn6NhuoZyk+khHGwFjTDLU+d9qA6x1rofshDCzq4Xjn834b
YDm7p/BqAAPzeH6YJYZmAypmMSfbXBlYlvSK1dlpG8gO9lE+g9dzV1HjQ995
G0hoY0jOODAw03cBisdXcT7u/wXetmZgV9Q0Lxn/swHReGnXHHMGNux6fWwv
sy3Iyu74dtkYz++IgwIfmy0wrzL/favDwN7v1+3ZudUWom84zK1oMDA770Mx
HNtsgdsl9dcWFQaWNLHUsMFpC41XOhRPSuP5l/p1ZoXLFjhFX2z+h/dzfUAD
3wK3LbQYm5WW72Vgm78fnJzkt4WRO1FirPg8yJaLZxsVtIWommJfE3xeaIT6
/zckZAt6gUm5Zlvw/l7QWO4UtQW5IOnMe4sr2ATjZ/IXSVuQOUTMPd+1grWx
i1alqtjC5L5tfj1JK1iueJ6oDsEWdigmZTQuLWNciYqNRx1tYXVgG8tVfB7H
LdScE3Oyhbqh+RW5sWXMo368edPFFi6NmwpYdSxjB4KOXKjxtgWuqBd16q+W
sdTuz5LvTtlCxq+b3IJ5y9gWzPrHUz9baFfcb9Z4fxkb4zl7+HqgLSwk3mLN
jl/GnleUd5ucs4X3nipxn/DzQ3C/6WWNCFsg7WS5OW+yjN1I/Ckrfd4WqhLi
t09rLWP+butXt1+0hYSHur+VJPDzZIu+UusVW3CZuPOOZ2YJe23dmmyXiuub
Xy5NiF3CxCrdNQ3SbeEK/Tfb+5Al7O7+2XHlDFuwt8t/yeq5hIUu8uoIZNlC
/cG9w7EGS5hSlhO994ktTPsMsGtwLGHl46MmbqV4/kzlRE6k/sW+xKwy+f+w
hcN8X+/5PVnElt5MzF7pxOuh2MPv991FTGG0cySnyxb2qPZMqscuYgVm/1WT
+mxhSeB16x7nRSxR0DUeI9sC/11xZvZdi5hjyZdNwXlbiA0+ZNAQvIDNjMb/
+8Z3HB4ftLifJz6P7bfYui5BPA7XVSLVXKunsbJ26ds/u45Dwo2wnrIjo1hS
/T8FcTc7+FZ+5aiMSxMGZycU9560g8aHz7YeftqILe5pUxLxtAM70R/SnPQG
zPVsjgr/KTsYDAr19I6ux46KamtwnLED87wY96iMWqzt7AVsNsYOXprFqTFu
fsK49y5aVWfj/kgLN00MUrG0c1OnPQbtoO7xstLVnhokYhx91n7YDqpGOvUz
zteifKEdUcYjdhBufkI3UKgOvf0ie112zA527q/yUDvxDf3YGvp4hW4Hf0Mp
lxV6GhBX9hIpZc0OtI+kvvYta0E367bofBWxh88B2vyyvzsR94N0gzJReyiY
OrDErkRCDwIOmr8Qs4fFnUqxKedJ6DmXCfHOAXsor0u6+YW5C31zSjx7QsYe
vvsfUOvn7UYsf7ifzx2zB47OTm8+mV4UIyC268AJ3H/CTcpBmQHUWrrNGXOx
B7EwqXPFQQNIzPpvgaubPXRWWt6uez2AUEKL5gNPe+BV9s58oDiIWFaifTlP
24OQOX/3Y8UhdKO/98tStD3UZ5idqBP5hfoiazn4L9nDb5GDtq0Ov5AU3xt7
xTh7mPAzivRK+YWaLRKmAq/aQ0Thlld7WEYQ5xcVAfJte5Ds8g5wPjeCUh/f
C/qebQ8fU4LebbEko1GtSxWTufYQtpGprOJLRip9/izsT+xhSU3utFI8GXVz
QyY8sweWf/Esme/ISOjKdO37YnvYP8IVyi5EQbk+FnvyquyhyOCii3MvBc0w
qft+qbYHHtepabdpCoKcA6X9NfbArT734yjbKCJ3M4wFGuwhmcl+SlFpFEma
FIYltttD3svawm+3RtFLabbm8BF7KHQRIjfKjaFOUb21MxR7aOt4U7JXbwyt
77ok6zeGxz80bYHZjyHrpcXkE5P28C/uQsBE5BharBmz1521h0avkMR3n8YQ
uNYNbWUiwL8GoU80zXF02oZpFzMLAbJ+9VO7zcZRmr42rG4hgKHthb+3nMbR
hFRZ/u+tBPhh9FXEJmIcJf196texiwAmxM0On6Jx1Jd8dS5rHwEuCz4x/8Iz
gViuoAPp+wlAkTrsUbx3Ah2JWLO/I0GA816L5PPSEyjW5Vx53GEC+PPF/XqM
v+ckpbwv+sgTIDOY56vVmQlkvedxkZsiARoVzoxJRE2g81wDQ47KBNicYPna
e2UCNS/agZk6AXSbvjf3PJhAIV/12eQwAkTubPMSqZ5AmWWxaof1CCBCebq3
sWkC1bz46CduQICSOSk5C9IE4k9WauY1IcBv25mI5vEJ9NH5wN1lawI8Hdny
OZqDisas3KtnbQlg27ip/YSbinbqZc1N2REAzulPJgtRkcdhXsKgIwG2FwS1
fzhMReyLzMJf3QkwXzcQLWdARSslmcljHgQ4fY1755wZFdHPyLNyeBOAcKtV
JcCWin5QXWes/QggdPWyU4wrFdUULPiEBRDA+I++g7AXFb33TOy/H0iA5JFH
4yF+VJQ1UPFtMIQAHxOZ2o+fpaKkTGstpjACvDrqwSBHUFGcw3iJRDgBFt08
rVSjqcinnTf7dBQBYmQ+dCheoSLHpJc8ydEESFVIziRfpyIzM7hRGoP/H+P7
wPMWFcnVnglbiSeA55/+P7/uUpF4POvknqsEWJo8ODeWSkV8Oo/csOs4v2dH
vRvu4/zKG00TbhGg1OEGWf4RFdHOnax6eZsAPWf/dH3MoaIhhSXl1jsEaAmT
mpXNw/m9ktjHn0oAjtQrx1oKqKjM72O6ejqufzE339pzKnoheXy7SwYBAjzJ
3vwvcX65sX+fZOF8Go8FsRZT8XoRCPyWTYD0IyqLfa+p6KxQ0chkLl4/57lT
00pwvt36jpxPCCCq68ql9Bbnm/rzu/xTAjS1KH8rfUdFpjahevbPCNA5sPFh
13sq0uLcWhH5ggBjjD3PTctx/k05slkvCdDsG73pVIHzT1DJ//IfAaqtLLl1
KqmI1+D7bnIxAWKHrNjmcMzG5HWHtYQATBUWm6EfcD0+r7BIvSWA4La6wx9w
TLtwN8qijADlGgeqv+F4UO3QdHA53l8+JzTTcNy+8Nk7tZIA2y7+NRTDcU2J
/c/3H/H62E8f9Mb9l52hWf/8TICgnt2+nng8z2Uu161XEaBLuqyIH4/3IXW3
pvhXAhxSJjEuluF6Fbx+Y1CL15N3rUQGzj/W0+ig3zcCGLAZJXjh+oSKDWYl
NhCgN4KI86Ai74Ew7tdNBHj9/HEA73+4XpnbEjq+E0Bs/Ffu8gtcL4e8tcVW
PP7Jc1GpeL40edXPCv0ggNze4+bjeD6PtrdOaHXiekT70OezcX3M1jqu9BBA
p5P9rmU6FbGyp5o87yNAysvTGXl4PS3XSH1p6sfr4c1pD5SI66HtWMj9C/d/
e+hBaDyef4XS2FwqAcTb0k/LnaaiYIE5RsUUAfR/lnLF+lCRyqpCRAedAO6l
QQnInYqqa0sCWWdxPdRpvIfsqajPscTp9AoBtngHyzdpUVGu1izp6ioB7PbR
T82p4vUhrmCTs04Ax3d/yoUVqGh26o3RDyYHaNlc4/KVpCKOS2+U1LbhuEb/
RBEnFbV5zhTb7HCAikeZfzPZqSjdWF46YKcDsNX7WAUz4fXB/WZfNo8DHJBK
mkILE2hicTrrPZ8DfBJ10lD6M4GKfsoJtgs4wLcfX65cmJhAGk9fc7KIOMCh
Ds+Mc30T6N+N6Rt7RB2A5InU93ZMoLoguS2qYg6gvUB4cwufV7Zqrxl+Bxwg
V89hb86HCeTfVDzRKuMAesxLu4IyJpDc6z+eVFkHiNGtjKEmTaDF1KNDTPIO
IChvziJydQLFuxaTlJUdYKT2cON/wfg8nCmqfqiF+5ORXh3Un0CNAkVZpywd
QD7e/uHk6DiS9nplvXHGAY5Tn7ZQpcdRY45myXyIA0iJdjtf2jeOfH8280ye
dYA9gqnrnALjqMCW3tUZ4QDcOwN+sjONI3FM1qXwkgNM31A16O0aQyj68+ec
OAdwCe6hlzaNIfdyS7G0yw5wO3D8+8mqMfTo6BnypesOED80P3fwxRgSFH3t
Z3/HATwOo4Wd+Hn1nqjbZHrXAVa/fylXDBhDhLQ2Gd17DpCZv9Io5DqG7m2f
+SN13wEaa1e5VPHzj5MhH/4v2wHYfwd2TXKMIZae0viXRQ5Qvf2YDHfqKBow
+/DWgY7bJ1R+mB4mI32bAqeIPw4w5fmM3tFORq8Id/+lzziAiGSCb2Q1GUWf
PGXeteAAS/xN39bzyEgkgodit+4ATMwJGTtPkpFTXgCP7U5HCOLvLPzXOYJ6
loRDzeUdgT2pxTL04S/U+TT6KHbOEcK5Mtn9fg0gXqbyD5oRjpB4Qft2cfUA
snedM1I77wjPA2JklPMHUBe/v/vRi46g+He/hJrvAOq97nB3z1VHEI3K2npp
oR8JUVL27L7uCAv0I2f29/UjJ92WF7w3HIHCH7PT5Us/6l/Sr9522xG0op27
sm71o0E/hbnlVEfgPj+wRVu6H4nWBV5aSHeEr1nDu2/w9iM38RfbZjIc4bBm
qp3t+k803Lf3wESWI5DHfHcodvxEI2Y77LvyHeFRwOREZexPNH5koqzkrSNs
qRhmTA70oUM39+sVlTmC20vuocr6PuQ75tr6ohzns96/ol7ahyazSeO5H3G+
lV4S8tf7EG3nV8E7NY4gRrg7OyTVh6ZnHkUFdDqCXtxW8RM+vUjOspf1VJcj
7F2Xe3TPoheFFPLe8+hxBHOh4OdzSr1o1uPWS2K/I5TV1VFOs/SihY7IfiOK
IyR9b5Nce9aDVOTe+uqNOUI1L9nxcEoPCk/8M6894QiFgwdX/kT3oCV9nx0q
NEcQPD7XE2jXg1beHdc+MO8ImY8W/r7c1oM4NdTa+BYdIYSRopbA6Ebin0U8
2JYcoTg/1I+d1o1M60avTjIcYVXv3POelm70sCvi+2tmIkR8V1zIzexGr52c
3fK2EOHitj6dlKRuVDOoO3OPjQiax+pJzfHdiDa2lS9iGxEcr/JYDQd0I82/
D521eIgg6N9zsUO7G1lfiP0ty0cEQtWNjz6K3chrwytWTIAIj0XqllsPdqNE
Ntl8ZmEiPNPu0Gbs7EYDAlVTDeJEECGwG033d6EYNUoUQYEI759dvCjn14VS
PtZvN1YiwtLn8o0ZYhcq0P0vW12FCIm7F68Xm3ahFuPwahENIvweVL1/QqYL
jTQ72XFq4vbHjVr89nShRWudsQ0tIqRPrP0r4exCe4nsHGSMCPPfmf1UZklI
aYD2sFOPCP6Bfpl3KCRkfLL9SJ0BEaLlPmif7CahYL9MmxcmRPC9XRKZ95mE
rtBjyJlmRFiZmhE4XEpCGSGe5xItiFDZf0WA8JyEqs7LPDhjQ4SMvG21X1JJ
qHONS/rkcSKMJD71ZE0koYm4hY+29kTITzUbYL1CQqtb+iz1HYiwnhR4BkWT
ENfNz8PKRCLst3kurBROQgc4n4QePEEEU8IOlRPBJKSWcp1ltwsR+mL82OUD
SMic/3Q6hxvO14EoWORDQu6Z1odW3YnwIxdzaPAgoTBR5Uq6BxGa6g1XItxI
KCFvt/mQFxE+1zewFDmTUJbk+kCbD56fO42irk4k9Lpw5Ey1LxEqvpmun3ck
oRrZb5ul/kS4d/V34iyBhHpKXt57epoIB+Uf8pXbkxBNJVnifhARjEVa0yrt
SGizMux9QjARWIXlqNTjJDTI/vZ2fiiuV8fjRwdx/JEw51kVRoSJwi+WZ23x
91i+gkZ/OBFilwoWK2xIKHw2hGspkghqmddeUa1J6LjumzGeC0SQe9C2c9aK
hOSSpj8evYjr12+RW2NJQjv6j94zu0SEhc0nyM6ChCYPn/E7FUeEq35N2hlm
JPQtokjn8mUizJ4bcbhuQkL5tXS+nKtEoJl3losYkVA8zxFa5XUiVMuFztnr
k5DbydPVXTeIwPnGRl0RIyHN4pcZs7dwfg+kXN9rkZDQ2mQQZxIRBp3kdk+o
4/nN8BM2TMH9bQToh8qT0Jux5zMnU/H6VPDSJsuQUJLSxLeL6UTokso3P3qI
hEzafMLeZRKhzF9pKkuUhCRFC0zbs/D+MSxYIO8mIZbTo2L0bFy/jr3B1nwk
9KviwF/2x0RgXNBdXeQioc9sXt8PPCGC5bdVN9p2Enpo/+SJ7lMiHH2wU8xg
KwlFPhk57/yMCOJ5vZJ8rCRkP7PPOvIFEVKn+qLPMJOQgs5JydSXRHAvKa33
3uxEO2/nrhb/RwT2bevy7P86Ea1v6EdTMRGCRBXZvDc6UeOhvS/G3+D5yUp1
SMDxs3DXS8xvicAjcHB7NG5/peaR/d4yIgg5tUcYMZGQB/eA9LFyIqjTOI/9
YSEhHXcRJodKIsjIVIedYychkaITPaEfiZB5/Jp9Lx7/MiOzKOkzrueTFmcB
bhLqMum7UlhFBOHvPpcPC5JQ6f3dJ+qqiXBnWZnBupeEkkcd5UdqiGCjlvMq
X5KEAhUz2NbriPBhW5LNgiwJmcZ1D+xuIILdcHEcVZWEtuwh3LT5jtdbFGlH
BF4PUXbHyVUkIiwfHaZv4v3lkJdS0d9NBA77/fbEeHweTLffWeolQnP/wd9l
t0nozy1rTblBItR9036mkU9Czb13uM2HifDwj6qLTjEJFR5snTg1QoRJwnEO
9koS8vpqkZYzhtfb4NkD5S0khO26HfBhggj/eOTF7vSQkKhbM9Y9SYT42nfW
W0fwflox/c35hwg6TYV3yXMkZKFgbBTzF9+fUWr2gqcLMXV3M4cvE+FthLf7
ZaEuVH7hVFUggwgpd1iuaO/rQgdqr6m7bBDhdkBc9x3ZLtTnx79ot4nbP72h
ra/chZI5C0rMmZ2AVZ/6jU+zC6061EprsjlBcO/Zo7b4/CxZtZtQ3OoEamFP
NgZsupDvY0q+9DYn2M551rYen7eihmEn9+9wgtdb7geLeXShzklmUeGduL8S
I9K8fxe6eedeH/cuJ6hTMKqwDetCukr773PwOEFbmoiMYUwXenURuFb4naBZ
lDTBl9qFPMR/NM8IOkH51jgxptwuJPjt5A2qkBMUDrCbPnnVha5wxTH1ijpB
j5WH1c76LqTxjutLm5gTiPSmGvd1daFpYu6FenEnmEvJrXQa60LOT77Mv5d0
go+fuzh82LoRt7HVm+JDTsAj4hD0S7Ab1dMGA59JOUG0ipTznFQ3UlJZH0uX
xeN9fJG/0LobbWvQ7D2n4gSt0b3tzbndqCqwOS1QzQmufA12OvuuG4VzO9t6
aziBgvfR76qN3WjkxIUmO20nWJLZfb53rhtV/q74pGjoBASvB1Jkgx7kz6ua
N2PvBIsfSxsK+nuQWEWdK9XBCSpLBme3/O5BXS4E4V9EJ6jWtFzcs9GD4Nm5
1DYXJ+CsEAx7JNaLhDTeXiv2xvkL/ack7dGL2gb19J6dcoK4gbS9qaG96Nrl
jo1sPydgOV8sInoZv080z0YmBTqB+/eR6M78XtTgJh8QeM4J8q7z9wfRehGv
t/+nnAgniGlr8/q62Yvc/Z/s/HHeCW4v733cKNCHlsL43qrEOIGODhkJG/Yh
yZvLqxvX8PrY1Plh/aoPhd5RsFK4gfu/ZKbe9a0PfUoNeOx1ywnk5JolBCh9
yC5nwKDhjhMwS/FGPhD9ieLfoqSUDCdYGTld8+3BT6S51bbk/QcnyO1/FhV8
aQAlcN5imfyE55spr+h65gDq4KkhiFQ5QZCOwFXddwPIX1SFEVvjBGsGb0Rb
qAPogaKQvul3J0g98efBMZtBRFE7nh7d6gT5H04cPBowiOS0EyeK2p2gNtB1
n/3VQVRvvJ7I0+UEC7l/eK5XDqJFlxFS/6ATaIn/uuolNYTAU/jQzl94/bTV
z7cYDaHbvnZRGBn/X3Vb8ZD3EDpwtk60YBzPz+KlVqb8IXQ8ofDUmWkn2LrH
94XAoWGUfZtc8XjWCaYv9w7eNR1Gkyki2zvn8f5Y5ruQEDiM4h8lvVZbdgKZ
RZe+52+HUUveN6aA/wU7AMT/+VhAcjeZ3avW3r8Xpv5Sm/tYQK9Ge2Pk+t6/
Yqs3pc39WECVcEzROx/fv66wcPf//1hAWgrKTp1D37+cvyp1
           "]]}, Annotation[#, "Charting`Private`Tag$344688#3"]& ]}, {}}, 
      AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction -> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> All, 
      ImageSize -> {296.2531738281235, Automatic}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 100}, {-0.8530366739450148, 1.7320508075683028`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"Sin(2\[Pi]/3)*\\!\\(\\*SubscriptBox[\\(Z\\), \\(2\\)]\\)\"", 
         "\"Sin(4\[Pi]/3)*\\!\\(\\*SubscriptBox[\\(Z\\), \\(3\\)]\\)\"", 
         "\"Im[\[Psi]]\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{{3.897140253422488*^9, 3.89714027875854*^9}, {
   3.897140437858014*^9, 3.89714047932412*^9}, 3.897140527805038*^9, {
   3.897140624573069*^9, 3.897140649391979*^9}},
 CellLabel->
  "Out[490]=",ExpressionUUID->"f86a35c6-38a9-4b88-a3a2-0dad7bf2c798"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"psiSolh1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "//", "Re"}], ",", " ", 
       RowBox[{
        RowBox[{"psiSolh1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "//", "Im"}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Re[\[Psi]]\>\"", ",", "\"\<Im[\[Psi]]\>\""}], "}"}]}]}], 
    "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"z1Solh1", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", 
          RowBox[{"\[Pi]", "/", "3"}]}], "]"}], "*", 
        RowBox[{"z2Solh1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"4", 
          RowBox[{"\[Pi]", "/", "3"}]}], "]"}], 
        RowBox[{"z3Solh1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"psiSolh1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "//", "Re"}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(Z\), \(1\)]\)\>\"", ",", 
        "\"\<Cos(2\[Pi]/3)*\!\(\*SubscriptBox[\(Z\), \(2\)]\)\>\"", ",", 
        "\"\<Cos(4\[Pi]/3)*\!\(\*SubscriptBox[\(Z\), \(3\)]\)\>\"", ",", " ", 
        "\"\<Re[\[Psi]]\>\""}], "}"}]}]}], "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", 
          RowBox[{"\[Pi]", "/", "3"}]}], "]"}], "*", 
        RowBox[{"z2Solh1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"4", 
          RowBox[{"\[Pi]", "/", "3"}]}], "]"}], 
        RowBox[{"z3Solh1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"psiSolh1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "//", "Im"}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Sin(2\[Pi]/3)*\!\(\*SubscriptBox[\(Z\), \(2\)]\)\>\"", ",", 
        "\"\<Sin(4\[Pi]/3)*\!\(\*SubscriptBox[\(Z\), \(3\)]\)\>\"", ",", " ", 
        "\"\<Im[\[Psi]]\>\""}], "}"}]}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.897145111648505*^9, 3.897145149367104*^9}},
 CellLabel->
  "In[647]:=",ExpressionUUID->"d38de344-f9da-4d9a-81fa-a87119313245"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{}, {}, 
        TagBox[{
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1: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
HdqP+o6NZ7LgRzHv+QplaSzMKT1xqJMFezf+Xb55uQySBcXpt43Z4PgpoUBC
WgYber04DC3ZoJ2w2oRjowzq+r6ifXJgA9fXTSFdNBmsHcvl3LSDDXnJ+9oO
plHvLyYqrotgw9ffPfHFa2WxcXwzBNawoenGHulr6rK4cLrugmwDG0qtiKpT
JrL4a3++Y08zG6JvCYzZ7pJFHA7ulehjg5STucX3PFl8qv/Z+Mc0dd5s18fO
ClmE7cVL1ebYMJnvE1r9ShY3/FXsdV9KwtO5k3fOj8vizRW+PdtXkuBV8nBR
Xk0OgwYn709uIAE9Ta4LGMnh1oe/UX8LCSpc7ZpTDnJYeniA7aNPwsyOcZ/G
g3Ko69gmo2lJwtCyMFZRtByqhu2O+WBHQnPFkstXr8ihs5FHn4sLCRkC6575
lcshzxmT5BovEqIfF7vbNsqh1OFnn/J9Sdjrrz+58b0cmu/PWObnT4J2rbvk
4rQccveofcEQEqT2DZePc8vjzWfshb1HSOASOWzXKSaPrgHebM8wEt4HJ528
pS+P1oTF56LTVH5iEsLn7eRRbpOtNF8MCXmNBfdDvOXx9nqiXz+OhKRDWrD1
gDyy25ZbG54nIVTyRa9RpDzacnV0CyWS4N3kfEj+sjxm7C9dW5NEglnoZ26B
2/LYFZE1rkfdO8JtpPbHenmM7U9vbLxK8XH8fMeLt/I4OHeN8S6VhK+yIgFF
w/L4L+14V306CU1vcv+lMOWRpXgsPvk6CaWnNFNPLlXATaLKJniD4kfxmZqf
qAJuOVAn3JdF8fPOrtFGUQFr6k0Ft90kwUl1L0PMRgG/2u3WFMoh4e/F47Vf
PBTQ4r+yTfq5JBT+OX8+P1ABV9FOFrjdofipvLdmS7wC1h6+Ee1zl4RHYo+/
zaQroJt89neXfBJ2nWp+UF+ggBcOlr/RLaD4Mv1h5vRaAX/zxMyM3iMh6M6M
gOgHBTTwZ596cJ+E1Vx8vR9HFbC3xHAmpJCEI62qwUFcisjLx13TXUSCtLqh
9kZRRfRjr2w/VUxCe7L9AkteEbN8Fc6v+Y8Epa0Hrp21UMTFC9NRliUk9FSf
3mnvroiBskpX3lL4zJpLSiv9FVHb9izd4wF1rw+WPL0dp4gh4JK6tZSE1P1/
Rp68UMR+/opGuTISOGKOalHTDIoNTEgkVlB8Dp+Zr3ZRQr9vyukkhXdYXmuO
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
+C86wP75w9XUd48bLSz8H9cfrIA=
           "]]}, Annotation[#, "Charting`Private`Tag$3542185#1"]& ], 
        TagBox[{
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1: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
h/YLLVg27hP0/AYHx9c0FisNa4GQY2PkpxYO7lWLHyj6owUaAwpt57o5eHOp
peRmphZs5bw/y/eZg1vy3ibKLtcG6VKzA0HjHCyYNOi9VkkbJvnZM82rufii
i+CW+WPasPPOXjtxOy7epS7MHAvThlnRJZMrXLh4RkCs7WO0NognjsXyeXCx
08ONRyuTteG6koL4ZAgXbxHSeXDkvjbcOp2+9+xlLv783TCWXK0N4HJ1955s
Lk5+BLYm9drglCrb+i+fi2cP7puReK0Nn/3P7ZKq5OKmmiM6nRPasKLqX8DD
11wcdumo4JM5bfBY6efs+56Ltx0O+nSXpw3pcFF04gsXpwqfioxZpQN3JVdf
Io1w8e7BOGu/tToQQL56RmqSi+lPzm9w3KADj3u6u+7PcPGBIxkN6jt0gP32
WOHqf1z8n8H11I1aOkT9j0p94ePh5v/yDq000oEXFP9ydwEePvHrrjrLVAc+
JCWVFazg4e11JUt+WevA1ul7HwtX83BfWkXPWzsduJyRfdJLlIfTvGruNrjo
gEn3X7dhcR5mijy3uOanA83/LXNS28DDpSOtEgmhOrD9Zoja4kYedqt//Ts4
Sge2RTlX5MjzsEhGT63bWR1ItoxPFVDk4RafzxesL+qA2OffT8y28PBJk34X
vQwdEH+VaOm8jYeV1/7asTlHB+6X7Qi1VuLhy41TXfMlOlBdP5T5VoWHzTMZ
eeMPdeBO2+WJAFUeZh/lBX16qgNZNIFIlhoPH1y3XOxhhw5o304W6tfkYZVj
sjTPMcJelcd5G30eHti9eRtlRge8hc2DCwx4+Mp6ZbYJRwf0V9JDuYY8zG3W
yVm/QhcE17J+3zPh4fLrRv78orpQInU9ZWEXDx8O3G08I6kLTbpB7fbAw+1S
+/s7t+vC3sySF7OmPBw9ZVfxRF0XqiJvdeuZ87DaS6e4An1dkFgVIBhqwcOD
OQcpl0EXEnNfSOWReDgr2FMh1koXvstKu9da8vAekt+cH1kXGos3sOutePjf
huAWRydd0B/L7b63h4crZ05cNXfXBVLwbEWYNQ8faTvlreGrC6EMDxe5vTzs
abzVhhmkC+mTh51vE9j74VudZyd1wX3j/mAugX22ntoYd1oXTn+oeL11Hw/7
3tgiYJGoC5eMct4oENhP5O3kijRdIB+tWz1BnPc/F9XbnaULCt3ygdEEPsbd
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
VXMOkTvKxIuT1w6NipPhbbXRWPUjJs5VjRMYkiBD9AHHlSsbmFg/2LfsuyQZ
VmrtT/VsZeLQOX1WjwwZWrZWpil9YeIRzpfUhs1kyBax0v+wwMTxRs3atVvJ
0NbqpWckROzfMaVfq7aTYRfSDM8WZWEXvlNbi1XIEMftslffzMLdgjKNGdpk
6La+YO9oxcL+VvyeKbpkyIrPbRalsLDQxckVSfpkcLiyTqLAmYVNVzdQY4zJ
UOqyvgf8WPiHTSHv5C4y6K0ZFDIPZeHo9JTboUAGOWeNYZEoFn689uAfH3PC
n6II/vkkFrankq54kIhVYb5ws2Q6C09nqRq4WZGBqeByn57FwsrSiwl2+8jw
q8xKbuouC+fJ58uYOJAhVG35xGwdC/93UaN9J40M8kbLqAJNLHx6rvm4rBMZ
SqQefx1sYWH31uHOxQNkCM9R+bGym4UVju2IbD5ChjqF2K9B/Syc8aF+8yMv
Ip+po6IGgyy8DNm8vetDhlWynjrjwyz8SzRk2zl/MlQf5rxa+4eFi548/mB5
nAyFJ6UHRrgsLLHJ6oz+CYIvZ317uwUWTrz4RUXpJBk+PWi+0biEjX3d/sWv
PEUG0tfj9reE2Fh5malm11kyVBWPDaZKsHHOsfffGxLIkMF1SBaVZuNVHz0v
lJ8nw2UjlhjRwfBkceJA2kUyeAsknEnbzMblNl2pdhlkeKegskZYk41law8a
mmWSwd1uZr2JDhunbZoe1soi7L0899ten435Lp25vPk6EX+BSeQ+IzYOpouZ
rMshQ8C5+68UdrHxgFvBqEAuGc7LnZ/rATamtOlkMm+SwbzQStHZjI2b1dvQ
71tk4EiYvnxowcaaOU4Tn26TYXtFRdQXSza+s2w8q/0uGYTP07S79rDx2oBT
pk8LyRAy5214cS8bJ3wU/ltyj9DbC6+d/+1nYzrKy84pIfLfuXqLow0be5ao
WVwqI/S64kzOEVs2/iD2fPrUAzJcjcJJmmQ2JkXb5R6rIAPXV/bwCwI/Hh6y
dHtIhoM71q+SoLDxVtsTc/sfEfxoubCVCXytVvDWrhrivP0F/mUEFlK4bq32
hAzJlicu3yLuR1xSYso9JYPr7Uv+Swk8Sq+7LfKMDGZ14x07ifedD+7bv6SB
DJG5UrabCf86276zZxrJ8EahZGJ0HxsbagQVDDaRIVM4ZSyWiK80h4/8vpkM
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
tbjoBLRD67vmztWj/wGxBNey
           "]]}, Annotation[#, "Charting`Private`Tag$3542185#2"]& ]}, {}}, 
      AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction -> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> All, 
      ImageSize -> {356.4701538085937, Automatic}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 100}, {-1.7060916896419653`, 1.7320508075683028`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Re[\[Psi]]\"", "\"Im[\[Psi]]\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {}, 
        TagBox[{
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1: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
QE4HDiZQ1lVv/v70rMFxeSUdWPviv745D9EEc4ZxqukAvAtrbMb1q67NFFJo
6QDVyF2uzd9DuCY19v4AHdgZPWMii/tly76z2qWvAzGumVXSyKP/HruLVO7X
gZ6n0z9o8Lx+NVpm6Qd1IJbOy2/z9/oV1q2UA2Y6EDFCbarVTRKLK2YVLMd1
QCSi4kUixjdIw5kr1lYHJmgsFb/ifdQMznS0OujAjevX0jf9z2pwQNjW0zrg
wv/pxHO8z9C6G98vntWBsr/7d+3D+35pw3K30lcHquWLGDb/PQDFWrrxnL8O
eH0dvWCG+RKhVVbiHqYDlE6S0nLIr2v1/YGW8TrwrCFyxb0Y79vOQTIpSQeS
77nuKXxIEjs3fn7pvqcD+/1SIr/nk0Qssa5rlK0Dn5eKCxyzSaLz67WFiDx8
/6UI2kcZyN/w3YX1D3WA9cO7Lf9w/otvENqlXK4DPMlM11pw/nt7quSlTyXu
b9GyzQjrg2mLqu/jGsyP0OnfX5Ff5tmNQpP1OvA2suBCAvLrjs6BfqFmHSiP
/9DsiPX3YaQv+lSrDmStZyqZo5/iiLDTTHujA0d20lJ7YD1bCUz86u/WgT98
G/oFWP8pTT7ZzH06YKs0/IZ+kw+O/44d/oj5smVFPgf9BM/WKOqYzzrwlJW+
7fQV9O859NUtw3i/sqZXT6L/yNC750k5pgPUQhsMVzbnnW/8vNqTOvBj+vfD
oXCcbyOLeoJmMH7ZLarnUDsKKV2pmNWB0lwnUEKd86peaXZBB9oFksZkUX93
3j8htaIDHXc8Zh1Qi2zrTXFb14F3Fw5+aEXtmnfyUC6lLiSIBlY64HqFBmMb
X6l1gRR46SmN+5kcO1vOTasL38KF4qVwvxJXl51PMOhC3rmNq9Z4Hk+RCPZE
Zl24/ibsaiXysriF9nUXuy5cfU2ZrY3xmDl959JOHl3YPtbT+Rt5KL19r4wh
ny5kv2OYfY38KzOST3ohpgu+S5/O/9r0rz9qDf9K6YK11rXzCng/itcN/irK
6UJ5U0Pp3UTsB22WdsVqunDwlo1IBfJtyW2UcUJLFzLOW1N44P2r0ng1C+rq
goCSioUS5keNcZhYqokuHC1LDqLGfvjydd5c9EldeCP/tvFwKUmUc/T4hNjr
QqWK2ziBPMw9vfLb20kXwkxc6OQrkeeUh8kTnrrglMNJz4T5fMks6OyBc7pQ
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
CjZnkH66nbPxxkISQmfNhMA/xMt396ymd6XS/SzSAsMoX7ULo/Vc0xBC5qKU
tGKoXpXVJSTfQBizFSrmzWfqrPw82piO4OLeFqpB+S5dq6n58RbCtrSG/jPE
12ONJy8rZyEsekkszBAfitpyB45kIzjW7hVNJ3uxc0Q5gUX7sStEK4hsk2eS
59m5CAEq9kHhvPOJh6w7Z/MQ1vKLPqsm++VIjPz2+wi/9wiaKNP1VcbrTzkU
IIitNC9uIfv01EJjzCOEh5qZA2nkTz1HS/K3IoTVbfNuaeSv8AcfT04JQrPe
zs4mWg/O362WL0f4otTnrkDrz116uc62AmFUy3FfMfFphl/a9XIlgryA6Rbv
BKrHqw+XVFQjpLMCE6yp/44WviowXYPgXhZe7kL86t3QaC/LRjCYWuGbRvXJ
S057IaIR4U8nSXV/3vuhbX6HSpsRyiOaldbdIj4q52e9aUVoHYtIaSLe3dTc
ZGT2hNarHLzjbA7pNR3btPNd9HunlNfeedR/GMRNPupGuMv+aulJ/VyryVLc
hn7av7ruXwOKSL87jfUNjxBvONIvvif9Cj/L7Fj/CqH44gubrxSv8R525xiv
iact5wKKKJ4HfeI7At8g2HyBdiPin0Jgs9zdtwj8tkf2V1F99z+z7D84RfFv
6SwqTPnxW5hOg9B7hLlM3z59yp9VkQES+hwE74ynYcaUX7bR9939Zuh+GTo2
yl1cRmb868rsWXreahsmXhEfp5Nl1z77QPG4X17Gn/JT+8aPzis+IgTv6xDu
Jf10KSOhSGceIeK7agkhyu/OOy183gsIZe2cInHipXT+V7uMLwj+A4r/nu3n
fd+2N69rGUFJYcaCRXwoKjk1/+0bwr2q7OeKxNP/AXvsmbU=
           "]]}, Annotation[#, "Charting`Private`Tag$3544794#1"]& ], 
        TagBox[{
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1: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
w47OSsM6Iiv7/M+5ORY4sDrL7f3qiP8DWOTTww==
           "]]}, Annotation[#, "Charting`Private`Tag$3544794#2"]& ], 
        TagBox[{
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1: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
/ukzXoHmEJvPlxeMvw/2bf7Hzj1jDm+8Jiz4JNnow7VLlB+h5kDfmJ3wCeej
w7OmWDnSHIrXsjJqcb7ZQbckvWPM4ckb3Y/fsR7rvm85nx9rDolHFz4pyOL9
dCD3x8gVc+hU2ccMwHoe2f263CfFHISn368WVmSj9mIT+YI0c2CZ8ViZKGO9
5BuvjGWYQ+7NYP392/H5dnPvnOp9c1ANHB4y3YHPcwGmi98jczhYWkNexN8j
SaHuH57mmQOnKEsjCNdzeWx0x8RTc9jy0u9GLp7XE4eCUtWem4OnSGRJEt4n
7LalfyfKzGFo/QcVRTy/NqSLnkXl5uDOUV7yxFxRJtI6WYnrbbzzMw2zqnKq
gcY7c/hWGNXZj9/PuCNz37/OHHbNOlRLYhZenSP47CPO52XI30Xs/1yUeuB0
iznsbb5y8P/7Z2TmZa9mhzk8bzmr34LjdzoKZoE95uAnNERtwvk1dtc/ed5n
DpoDwyFXcf47Le3Wzfbj3994y5DE+kiqHxk89cMc1Cefz77eykadCzGxpxfN
If/alg9HcL1IPsJTpf/MYboh+tIzXO8SVorjPA8FHli5v/0Pf//J0zZX662k
gHbiq+6G1fj8rXmkHCxEAb1IpbM5wvj7Q1ct+eUaCuj+riXXrcL9lFO2+Euc
Aq621g80BNmofyNyN5CkwI7ffa9/rMTnW0LdxxBpCoxoWtv8WsFGVf9sdV7L
UiBF4+5VF8zqAT0ZvxUo8PuxjrYU5syvbvyGyhTwaRt31Ma8et8Pv9AdFBh/
bnz6IeaI+oCuck0c3/vJy17Y/rjh4u4/uhTYZXSFO0KAjVyeRucYGVLg76b2
LhaO59MWIdGw3fj5zV/vo4Tw/km+EfLWlALvN8XvdhVhoyd80l+WzCmQGFhX
7LsGn2c/VJ+H21Igf36dyAzWZ9G5dFOlPQVObFZU2Iv1O95sHPNvPwXWfVbg
KsP9Tn1hQ490o8D2HeqzjrifX/3X/ZbwoIC1JF9kFJ5/xbRD/3Edp4AUqUIl
HNcjddXwVfCjwH2xkjSSPD6/wv3nowIoAJv7bJvwPjkzueBafZoC+uNmv1Zv
Y6PBw+fruEMp0N0z5cCD60vvENQwjaBAfFrRtfuY35snp0VHU2DwHY/pMObB
Y2+aQi/hfFiPC7sxr4j9xnMqngIaJ2pVzmBWzBEx8EmkQNytuxXvsH1qnZ6f
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
AboIY1s=
           "]]}, Annotation[#, "Charting`Private`Tag$3544794#3"]& ], 
        TagBox[{
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1: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
HdqP+o6NZ7LgRzHv+QplaSzMKT1xqJMFezf+Xb55uQySBcXpt43Z4PgpoUBC
WgYber04DC3ZoJ2w2oRjowzq+r6ifXJgA9fXTSFdNBmsHcvl3LSDDXnJ+9oO
plHvLyYqrotgw9ffPfHFa2WxcXwzBNawoenGHulr6rK4cLrugmwDG0qtiKpT
JrL4a3++Y08zG6JvCYzZ7pJFHA7ulehjg5STucX3PFl8qv/Z+Mc0dd5s18fO
ClmE7cVL1ebYMJnvE1r9ShY3/FXsdV9KwtO5k3fOj8vizRW+PdtXkuBV8nBR
Xk0OgwYn709uIAE9Ta4LGMnh1oe/UX8LCSpc7ZpTDnJYeniA7aNPwsyOcZ/G
g3Ko69gmo2lJwtCyMFZRtByqhu2O+WBHQnPFkstXr8ihs5FHn4sLCRkC6575
lcshzxmT5BovEqIfF7vbNsqh1OFnn/J9Sdjrrz+58b0cmu/PWObnT4J2rbvk
4rQccveofcEQEqT2DZePc8vjzWfshb1HSOASOWzXKSaPrgHebM8wEt4HJ528
pS+P1oTF56LTVH5iEsLn7eRRbpOtNF8MCXmNBfdDvOXx9nqiXz+OhKRDWrD1
gDyy25ZbG54nIVTyRa9RpDzacnV0CyWS4N3kfEj+sjxm7C9dW5NEglnoZ26B
2/LYFZE1rkfdO8JtpPbHenmM7U9vbLxK8XH8fMeLt/I4OHeN8S6VhK+yIgFF
w/L4L+14V306CU1vcv+lMOWRpXgsPvk6CaWnNFNPLlXATaLKJniD4kfxmZqf
qAJuOVAn3JdF8fPOrtFGUQFr6k0Ft90kwUl1L0PMRgG/2u3WFMoh4e/F47Vf
PBTQ4r+yTfq5JBT+OX8+P1ABV9FOFrjdofipvLdmS7wC1h6+Ee1zl4RHYo+/
zaQroJt89neXfBJ2nWp+UF+ggBcOlr/RLaD4Mv1h5vRaAX/zxMyM3iMh6M6M
gOgHBTTwZ596cJ+E1Vx8vR9HFbC3xHAmpJCEI62qwUFcisjLx13TXUSCtLqh
9kZRRfRjr2w/VUxCe7L9AkteEbN8Fc6v+Y8Epa0Hrp21UMTFC9NRliUk9FSf
3mnvroiBskpX3lL4zJpLSiv9FVHb9izd4wF1rw+WPL0dp4gh4JK6tZSE1P1/
Rp68UMR+/opGuTISOGKOalHTDIoNTEgkVlB8Dp+Zr3ZRQr9vyukkhXdYXmuO
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
+C86wP75w9XUd48bLSz8H9cfrIA=
           "]]}, Annotation[#, "Charting`Private`Tag$3544794#4"]& ]}, {}}, 
      AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction -> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> All, 
      ImageSize -> {330.7010701497394, Automatic}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 100}, {-0.499999999999834, 1.4908941896696826`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(Z\\), \\(1\\)]\\)\"", 
         "\"Cos(2\[Pi]/3)*\\!\\(\\*SubscriptBox[\\(Z\\), \\(2\\)]\\)\"", 
         "\"Cos(4\[Pi]/3)*\\!\\(\\*SubscriptBox[\\(Z\\), \\(3\\)]\\)\"", 
         "\"Re[\[Psi]]\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {}, 
        TagBox[{
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1:eJwUmHk8VV8XxskQRSljQqaEzPPYWaZrvu69TUiRSkKmKJlJiUqmJBmaUylE
krBRoX6RRJIh850QhSLl3e9fPt/PPWfvtZ71rLX3IecdRDuyioODg5uHg+P/
f+Uv/71dKNO445KlKyOyik0851PZcty3iBBcxfXSFXNjxJM7yr6lxOXOBuMf
z9hElsGYh2Dac2JZxuSwLeZmrZCjvL6I2CSlbeZaySaiRVeqV268Iv5L2fFa
sYJN5GTa7Fi+1ELcM5lbKSlnE6XrL776HfkfERnPNTdTyiZaL3bazR/9QHRn
BN2becwmZpIE6BEPPxLcjQ0yJY/YRMyrUpVfNz4RpY/NfRQesIk1q3YGhF/t
JvYMbD2/5x5eHxae/LzUQwg10DNsbrMJhbhrsyFJvUSkdWDWTBGbKKsz05uJ
7CNcH1sU7c1nE29NzryYPPqNGDZbVnfPZhOPzIRj9UuHiLyHdWPzl9nEbN/h
orCHw0Td3zhB8gU2ESvJN/Ljxihh8m6I0EtgE69fuHHp5I8RPA2LOU1ROB63
R4ohV8eJfU2NS4In2cTVq+Sj3y/RiYpnd+70H2MTgwY3zmukMIjdQ5tdvA6x
CcXPsw+OJzGJp4kl7Tc9cHwiVybZkThPn/ztnmQ28S6jL4Rx9DvxedWL+281
2MT53Jy3WdozhHqhr76lEptQ8yXcdUtnCIuMRc9IaTYRujojKvThLFFwushT
dS2b+GejVz9z4ydB+0NYp42yiJuiA+R0mTliR+KlFb5eFmE9fvabZv4csXae
qLRuZxEXkno4gq7OE98WYk6uPGcREq8iraYu/SLOFSnkJ51nES8zFbourv1N
uNh/iuKPZhEHvN8fVkv5TcjkJA66BLGIO5wy5/yTFok4gSk7ud0sQhsaW5mR
f4jzjXcDe6RZhEPdavLE0RXC2CRQJv82k9Be8Z4Xm1khRKa67vZlMImLsp7t
CmYcYHklRudTHJMI864J3/WaA5a+W3mw3ZmE9UTw62ddnMBREcRuEWQSI1MD
ByPmuSB59MnUSR8G8TntwrN0Y26QDzbyc6MwiHeaxvwPYrjh1GTcnt/GDOJp
SHZZLw8PDPSUiwQIMIiEeYcVEzFeaCbiOtSf0AnZv8/z/xrwwaPbLwXlxycI
kcIjM6JRfBB+ZyPz07sJgo8QttZAfKCRYuJmVTZBfI8PZB+w5YfCMtFVHpET
RD33VpOGvWtgs2Tpmbi1E8R+gcyexAgBMPlCCtkmP060CRrwc+8XAu+ESwq7
lEeJTseNue3RQkBTClp3gn+U+JIyrXQtXwh0j/GpBrJGiDGe+9Ya/UJgLK/w
6vejEWL5r3i8674N0EzN+O6mPkKoTi8ulLhthMeryTfnlYeJ8+11Y7v3iEB2
rQlPO9cgYXnZpuG+iwQY391IXlfXRRzRXBLUFpSF0gNq210NsgmnvuS7EjKy
IOF6JaHm9SVCL1nUnENTFjrcf36elDxDcH/TCvhAkYV8oZv73w5Q0a20o++O
Z8tCs/bjAmpwDvo21XXu4WY50KuiyF9WLUNuJaUrCqryYLhv4y05ogmBq/nV
tabykHpw0cF0sAkpc/+n8dNRHr4ceLNaLeYV+r1vYn/TcXlgBcYdaax5jXLW
Std6lcuDwNfLze/0W9Anv9SIAiMF+GXSm5Gv8R45qxyZFbNVBLlrT6pd5jvR
0oXwlwN7FGHdr8GWMZNPqHj67Nk7Poow/Nb3Glf8J8RdeW+TzjlFYH9P2PaV
rwvV7GBYOL9RhIOrj+pziHYjpV3+mWestsLZo5MTaZI9iCMuRHeGUALuKsPd
B3j70JPhhL9VLkrgV+kS2W3dh/ZZZ7bEeCqB/88NX83P9KEq/op9a+OUQJhP
9NJ/K30oIHvujFK9EnwVV7ET+dWPeh+c6vIw2wayerabhXsG0dOumPC3RsoQ
WVVvHrd5GBWfPew9Yq8MqtK8qtkGw6jQwNHlj7syhJ2QGY2kDqPUXAkV9Rhl
6Ptr96j73DA65FHRn96oDP9Kg1Z5zwwjkTGGlauDCmjJeUWfbhpBa6580ArZ
pwLp8YVbX/ePIA5SlXRqgAqs/L4eJfBrBE3eP/PrZZoKRFkS95O3j6I3/jKP
tnxSAWrAikpB1ig6+XPnRvo+VViMa2f/5z6GAu6YrKwEqMKEppTowdAx5L1b
blIiVhUkelfkrqeMIfLz6TcON1Thenzlix9VY2hbVMrpJ2OqMGJcbSEsOI6+
rEJD4ce3w0PCR3bbg3FkulG1lDtODcIfOHvpvJ1A7Zzub9suq4HhrfhF3r4J
5DWbMppzQw3mw/PJg5MTKKmDKa7SpAa2N0wbEoXoqD3tQbwzjzq8mlGQWNlD
R16xvXliYurwev3JY06+dPTjOP+zb0rqINj1u8zvNB2JOx9jhtipQ4lo6OO/
efj5tSq0nAvqEM4oFWn9ip9fcg3wzFeH7Tvm+RhMOkpinT+n/FgdPoQsPH/0
m44evGXU1LSrg9KjnZ6iogz0I7lY4dsGDWC+dPE7Zs9ASae+mBfLa0BvbU1C
7m4GEjvK5xqiqwEU0obe0IMMZEryvci1WwOe3PJ5viMCP8+tPL8tVwOmxy74
TN3Cz8/tXT9brAGzTbKLKo8ZqHg0WaXmhQZcr09VdHjOQG1N9P1OfRrQeGb9
mt3/4ecT7jcHy2gCtaFDxvMnAz34q5T74o4mJDZQWIQtE5lN7Xma+EwTRK+K
Cm+nMVF7/7n3js2aYCDlRFPaz0Q/Xk5wDNI1gVH+54bhCSaSMf+klyCqBU20
Jxz8RUxE12M3jktrQQMdm+sBE5Wpcbk4KGkB6RV5HbmSiSyldI8JG2rBDrJj
QUcrEx39k1lw11ULlGMOv7s/zUTZ5MlXp720oM8kuwwtMFHDTRuWs68W5L5o
uZfyj4kk7H4bLJzSAj+vTks1QRayvk7d/y5OC7qK3ppzibBQ8PTDM4XJWsDs
fcY6L8lCrdn7O0hXtUBh4sP+e0osNEevWpAs0oJpzzwZKzUWkjUVkv5+Tws8
dCSycrVZKGK46djVKi1YlblQFWfKQnf0pNL967UgZnvfZilgoY7k8Cp8SQFf
keBD56xZSEVDmYvRrQU03lydb04stCchQaV2QAsqVbgq+igslNj11SV9XAv+
fDnT27iLhb5GXso3mteC5F6/2aMeLJTa8kM/RUQbbpwOMvjqz0JVkk4e+6W0
IejyqPhIEAuNHL+bqK2oDZvmb1B4wljIRMT1Q6+uNhy8/Ue2JJqF2F51vqo7
tYHkHNL99DILSVSKXf7nrg1tA+F9H7OxPquDn3V6a8Mxu3OEcB4L5T+WXxUV
qg2F67S9Z+6wkNNS8vX/MrRB2PWTaNZLnL/zcGPRNW14Qk047NCI879hwjhx
UxsiKmYMlppZaJk0pSdVrg35++yHlTpZSDmPtG+mWhs4vMzdrvSw0K6pooTX
DdqgYJzx37d+FnqcRWsP6NAGnkd5H6cmcP4Tj+bgizZUnvCavsNmIV4Tns2i
Q9rAXCftvmWGhXQuHbBg0rVhi4G2gescCx0Yen607rs2pIN9iONvrJfuhrSM
X9pg48t6Mv8H63XOr/LIijYkdPv571rBevW++mq8Wgfe3xtf77OKjdapS3Ou
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
           "]]}, Annotation[#, "Charting`Private`Tag$3547676#1"]& ], 
        TagBox[{
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1: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
DVFgGymy1moGxr9vTaTEKAV59+x/6PHzSKan8toVfyhYqOyZ3PCXIzK+4m3b
Jyj4tXOpo84kR04fmwg6NEXBwW8tdpZ/OJw33zWu8tEgLfFr3ooRjuRdLPR7
O4OGOnXL/+z7OcLG7xXfJkLDBP+sU4taOVKcZJ3jKUqDyqrVjOYXjqikE4cr
4jSk2CzLMfmM+0S25L0aSRq6VHOG8t5yZMczPoteKRpm/fwqqVTDkdfF3b9F
ZPC8HruRwkqOLC/7eENDloaYxYK1oeUciap6AVvlaJB5ET4RXcqRqboM3n55
GgyfwEjnC464fIwKDVWgYad6isjp5xypaTqtnaGIv+/W8nAr5Ihuq8enKmUa
3iwmYrefceQWjz3RrUKDi2nCpf/yOTKzZ4PiHDUaiJimAX8eRw4MLKtcqkFD
tkqT0rJcjnwcXuhlqklDFp9UT2oORwwnZizYp0VDU5+CoCfi5Gn9z4JX0DCg
YZnlj3iuYNPOeytpiI7SFqpAfFi4TLBCjwa68ojaNjzvq/jj+52rafD74bdd
CO8zloqzmrWWhjYzq6FuxA9kg8b+M6RBV99tvBfjk1Q4dHsT0HBjv1D9rAKO
BPznsNF1PfLpVPlAE/PrUDfpPm9Ew7kq+Ts2RRwx014RnmxMQ5jWusYA5CNL
T06vzATPk9pYfqWYI7IGQl84Uxoyar4bBCN/Z9f/Pi2wlYZE8/KsHSUc6dn0
TUXJgob+gZM2c19yxHprZY2RJQ3lbZ+1QhAXbM/22W1FQ89yBfotYkU2XuYs
RUO9iM2PJsShDiHFdxka7s/OMUhB/Nv5sMtLGxp+KpqNLUds77ZTuN2OBhvJ
gJEjeF+ph1kmvyMNtjK0RwDGo+6txyrsoMG+cqSbYLzXjipMrXOmwUNwSPcV
5vfnuEjizt00qInOdhLD/J3PjG4+5ULDLrM7CcpY38oL7X3xbqiv+GrDucin
9uWa68X7aFh7XyWw5inu09fy1rTsx+8fSQR4ZnGEPyax9e8BGlaMGv8Ze8yR
d3ePaRBvGu54WRkMZHBkHt/TPH1fGioENjyJTeOIlf3ARt0jNAgFGn23SuVI
RK76Oy0/GsxinT8vTuZI/Xw3Rw1/Gs40GlmKJGL9Dt7tUjlOQwTE5i66g/tz
9dfDioE0rEtKEbeN50ikqsx0+VM09N3ZXPD6FkcazlFX/jlDw82bWwI8b3JE
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
r5G/f1lYVajcqtf5lfwPkn9ymg==
           "]]}, Annotation[#, "Charting`Private`Tag$3547676#2"]& ], 
        TagBox[{
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          LineBox[CompressedData["
1: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
h/YLLVg27hP0/AYHx9c0FisNa4GQY2PkpxYO7lWLHyj6owUaAwpt57o5eHOp
peRmphZs5bw/y/eZg1vy3ibKLtcG6VKzA0HjHCyYNOi9VkkbJvnZM82rufii
i+CW+WPasPPOXjtxOy7epS7MHAvThlnRJZMrXLh4RkCs7WO0NognjsXyeXCx
08ONRyuTteG6koL4ZAgXbxHSeXDkvjbcOp2+9+xlLv783TCWXK0N4HJ1955s
Lk5+BLYm9drglCrb+i+fi2cP7puReK0Nn/3P7ZKq5OKmmiM6nRPasKLqX8DD
11wcdumo4JM5bfBY6efs+56Ltx0O+nSXpw3pcFF04gsXpwqfioxZpQN3JVdf
Io1w8e7BOGu/tToQQL56RmqSi+lPzm9w3KADj3u6u+7PcPGBIxkN6jt0gP32
WOHqf1z8n8H11I1aOkT9j0p94ePh5v/yDq000oEXFP9ydwEePvHrrjrLVAc+
JCWVFazg4e11JUt+WevA1ul7HwtX83BfWkXPWzsduJyRfdJLlIfTvGruNrjo
gEn3X7dhcR5mijy3uOanA83/LXNS28DDpSOtEgmhOrD9Zoja4kYedqt//Ts4
Sge2RTlX5MjzsEhGT63bWR1ItoxPFVDk4RafzxesL+qA2OffT8y28PBJk34X
vQwdEH+VaOm8jYeV1/7asTlHB+6X7Qi1VuLhy41TXfMlOlBdP5T5VoWHzTMZ
eeMPdeBO2+WJAFUeZh/lBX16qgNZNIFIlhoPH1y3XOxhhw5o304W6tfkYZVj
sjTPMcJelcd5G30eHti9eRtlRge8hc2DCwx4+Mp6ZbYJRwf0V9JDuYY8zG3W
yVm/QhcE17J+3zPh4fLrRv78orpQInU9ZWEXDx8O3G08I6kLTbpB7fbAw+1S
+/s7t+vC3sySF7OmPBw9ZVfxRF0XqiJvdeuZ87DaS6e4An1dkFgVIBhqwcOD
OQcpl0EXEnNfSOWReDgr2FMh1koXvstKu9da8vAekt+cH1kXGos3sOutePjf
huAWRydd0B/L7b63h4crZ05cNXfXBVLwbEWYNQ8faTvlreGrC6EMDxe5vTzs
abzVhhmkC+mTh51vE9j74VudZyd1wX3j/mAugX22ntoYd1oXTn+oeL11Hw/7
3tgiYJGoC5eMct4oENhP5O3kijRdIB+tWz1BnPc/F9XbnaULCt3ygdEEPsbd
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
VXMOkTvKxIuT1w6NipPhbbXRWPUjJs5VjRMYkiBD9AHHlSsbmFg/2LfsuyQZ
VmrtT/VsZeLQOX1WjwwZWrZWpil9YeIRzpfUhs1kyBax0v+wwMTxRs3atVvJ
0NbqpWckROzfMaVfq7aTYRfSDM8WZWEXvlNbi1XIEMftslffzMLdgjKNGdpk
6La+YO9oxcL+VvyeKbpkyIrPbRalsLDQxckVSfpkcLiyTqLAmYVNVzdQY4zJ
UOqyvgf8WPiHTSHv5C4y6K0ZFDIPZeHo9JTboUAGOWeNYZEoFn689uAfH3PC
n6II/vkkFrankq54kIhVYb5ws2Q6C09nqRq4WZGBqeByn57FwsrSiwl2+8jw
q8xKbuouC+fJ58uYOJAhVG35xGwdC/93UaN9J40M8kbLqAJNLHx6rvm4rBMZ
SqQefx1sYWH31uHOxQNkCM9R+bGym4UVju2IbD5ChjqF2K9B/Syc8aF+8yMv
Ip+po6IGgyy8DNm8vetDhlWynjrjwyz8SzRk2zl/MlQf5rxa+4eFi548/mB5
nAyFJ6UHRrgsLLHJ6oz+CYIvZ317uwUWTrz4RUXpJBk+PWi+0biEjX3d/sWv
PEUG0tfj9reE2Fh5malm11kyVBWPDaZKsHHOsfffGxLIkMF1SBaVZuNVHz0v
lJ8nw2UjlhjRwfBkceJA2kUyeAsknEnbzMblNl2pdhlkeKegskZYk41law8a
mmWSwd1uZr2JDhunbZoe1soi7L0899ten435Lp25vPk6EX+BSeQ+IzYOpouZ
rMshQ8C5+68UdrHxgFvBqEAuGc7LnZ/rATamtOlkMm+SwbzQStHZjI2b1dvQ
71tk4EiYvnxowcaaOU4Tn26TYXtFRdQXSza+s2w8q/0uGYTP07S79rDx2oBT
pk8LyRAy5214cS8bJ3wU/ltyj9DbC6+d/+1nYzrKy84pIfLfuXqLow0be5ao
WVwqI/S64kzOEVs2/iD2fPrUAzJcjcJJmmQ2JkXb5R6rIAPXV/bwCwI/Hh6y
dHtIhoM71q+SoLDxVtsTc/sfEfxoubCVCXytVvDWrhrivP0F/mUEFlK4bq32
hAzJlicu3yLuR1xSYso9JYPr7Uv+Swk8Sq+7LfKMDGZ14x07ifedD+7bv6SB
DJG5UrabCf86276zZxrJ8EahZGJ0HxsbagQVDDaRIVM4ZSyWiK80h4/8vpkM
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
tbjoBLRD67vmztWj/wGxBNey
           "]]}, Annotation[#, "Charting`Private`Tag$3547676#3"]& ]}, {}}, 
      AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction -> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> All, 
      ImageSize -> {305.90852864583206`, Automatic}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 100}, {-1.7060916896419653`, 1.7320508075683028`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"Sin(2\[Pi]/3)*\\!\\(\\*SubscriptBox[\\(Z\\), \\(2\\)]\\)\"", 
         "\"Sin(4\[Pi]/3)*\\!\\(\\*SubscriptBox[\\(Z\\), \\(3\\)]\\)\"", 
         "\"Im[\[Psi]]\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{{3.897145136224951*^9, 3.89714515930634*^9}},
 CellLabel->
  "Out[647]=",ExpressionUUID->"bb5cc8ac-6c33-483b-a62e-90ba8969eafe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"psiSolh1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "//", "Re"}], ")"}], "^", 
      "2"}], "+", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"psiSolh1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "//", "Im"}], ")"}], "^", 
      "2"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Re[\[Psi]]\>\"", ",", "\"\<Im[\[Psi]]\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.897145535920239*^9, 3.897145547034374*^9}},
 CellLabel->
  "In[655]:=",ExpressionUUID->"e87624ed-83d0-477a-93e3-292a9c86057f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
CT8xT+jof80yBXmcqX/LWADkA1pVAYOmcFs+eGizIhUnXZbWl42Y4l8/J916
AxUM/cknM19MkfZW/XSoJRVL58u74ydMsfuIlai3HxXyxzWnC3nNQNnmk7b4
BhUOyRo632TMMPQmiumnTkNnqAhbQ9EMX7aPMuZNadi66RfnoLIZHlzqqz+6
hQavZXecBHXMYPbOIkb6AA37s9T3r7M0Q2yPY9D+ahr+RQkf/s/WDOeHTf+u
a6EhxmPixH2uGa4hrTKsh4ZTkmXnbFzMwJ6O+5szRUPWDbW7gQFmuHHE61yv
Ih1PeryfXA42w6rAtPEd2nT8pqe/fbXXDEX9x1N2GdNhs3uGZHDQDB+GHi6h
O9GxP1tpaUi0GZF//Odve9Bxpc1dPu+YGf5+2Bj61Z+OGbVGe0aCGUbXHdhg
G0mHrPfkDiSbIf9k477Yo3RsTJPbF5ZmhsnhCYeYeDoKp05ffJdlBt/k1snB
C3R0ydXeXpRrhsWrVYd35NJBdhmrN8s3gxtNYMvLG3Qox0u+PlBghs4k1jqD
Ejpc7m/+XHTLDHy9Jl237tGx7EX4ytExM8gHB5InLQVhslCgLDlphrziNS3j
mwQRrPrO2OmvGTSlti8wPQTRnEI8aUnm8Lzw6tCRfYLY50y7myhsDgp1S4zj
FUHkxOk/aVhmjnqXPfk2twTxvGr32ykxc/SetiWvrhSEtHgHyUPKHGoXTkaq
tAqicyDTXkXTHF+UJddG/hYEj3DrDm9dc1w5fFE1f04QSqYLYecNzFFZaFKU
QMxDx/K9Ly6YmSNkS7n7heUMqAcofW7bYo53nA8MKR0Gzv6qORISbo6rjYEt
wnsZCO5I3uF20BzNE6+T1kYwYFvqbWwZbQ6xsVJhuxgG+PfQSBInzfHxv+sJ
AkkMHPq6OaYt3Ry+DyMm1G8z4PJUzvN+pjnWr50t21LBgPaNGfb1bHMsSqGt
Sa9lYHxnzsLha+ZQZQ++dGtjwHfw22HlCnPM9KtcMR8nptuHte5i1eYIXj7g
d+UvA2svnzXirzXHpcT3lgMkJt656cz3PTKHlxfvmq7FTFTp0/ufPjXHluJl
SyJWMJEu1ldzt9UcOvdO7H0lwYRj99GoM6/N4Rq19d8JZSaU723ZHtFjDn51
uYUWYl5lpMsb7uwj/PE57ZGrx8SXsH/ijoOEvvLFGiQw0bzpxazBiDm+3y2O
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
4rXFf1wUdW7tghwdy9ZaHtHdx0XMF3qpkgIdJ+N7lBTCuUiMqN6ych0d/ttn
j9EPctFeJk+mq9ChyGui3nqUi2+3RLoNdejIDHrVV3OcC9+VusedNtAh2OVz
6nYsFx2B5KRgfTq+3zg5kBRPnPcpJzCBTYeb8IqEmAQuNu+7XxJnTEfrwUKd
0EQu4oQueoSa0mE0oj+8I5kLv7cfb8Ccjtv2rYkbU4h18U1Hxjh0rK501zNN
40Lokm1DpCUdSWvHRjTSudiw3gM9VnTwnD5yVjqDi/d/7L7x2dAR8lvYcGkm
of+ajM8zBB7YnveZL4uLlDm3ijJbOhwfa6VNXeLi9aioprwdHQ2qj9mfLnOh
prHxrROB1TO3fnuTy8X80INSPQJf4f2a/uQqF+kTK6Paie9Fdh80qcrngrSl
+9lSAh/vYowWXOfi2lHqOJU47zc7+0JmARddL+ZQQPDzKVAxP32Ti8xVzm+n
LOh4LVw/dvAWF/wBvl8nCH85hzZmBRVzEbCk7thlQo+KkWGL7aVcHPUovLIA
OmQd9v2yu0Pko2Ou1XIjOs5X8l82usuFabO1wTc9Og6cVphaU8VF9iO91Pca
dHz+XZ276D4XE8oNMUxVOlzcbe1INVy0hks8FFaiQ09tT97QQ6I+DHadbJKi
ozCTh/uqgYtgudqSo0S+rKSk/GtsIuK3pV9Gn8in2a7yjflPuLi0ISC/TpiO
IHDmz7VwIXx4de0lFh3vCt4UxD7n4oyjDW8mkc81h2Z4/Nu5sMrYuZnJS8dU
8cexox1cvIy2/WO1QIPqcMfApU4ujvnG8rb+oyFgWV17ZRdRn/JLbS9N05Bn
dfPhq24uhoVvez+cpKH/0PmS0V4ufoSe2aX3i4blJcdyaH1ckK8ukWKN08Ad
3pMs/Z6LqpSBdoOfNMQvc4thD3Lxdmm0RPMPGpqsLENch7nY+15w843vNMwd
0vTcN0L0H7/EFQPfaNAukeAmf+Lii5jEDX8ChwwzcPML0S8V+D7qE7hw2V+V
5m9ctPnu3LSRwMNWI2sGf3DhtXGnxVUCi0e9FJr9yUXpxGmWDGHfqaRmYdkE
FyL7EqaeEzh5uOCn2m8uNhpdSU0i+Dxdlv7edoqo3xylPk+in5Ctj7b5TRP9
pKnFRZPgbxAVXHd0hrBXpew8R+D9Ja7Fl2a52Hfh/uLiMRqKhzmXK+e5eCgd
OmpA+P95mUbSKx5HSAqTLmUSWNJ6TfQo2RF2P2kbHxDYLUpwD43PETN1c7/S
CXyu5I+7tIAj7tyyXi9B4BfDw/ZsmiOqr/KV2xP2qcvbjVwFHfGQM79ZjDjf
xPqB8j6mI7LfdZAPEfwPRd1YnSzkCPNndNFgwv+KkjTWzcWO4JH0MPhO9Muf
wzHzj0QccXz1zYhfIzTIL989OrDUEWS7UM+jQzR4Wbv0/1vuCP5r2q8z+mnI
ijJ/sUzMEWfZQvK6vTR0lajVqok7QnnQlOX9moZFH1bdtl3tiA9thoGr2mmw
Wk7P9pNwxM56m+1BLTQ8iBqKuiTtiMitN88P1tAwVfJid6WsIzj/LetYdo8G
lQ/V21/JO8I1X8xovpiGK9aphrT1jng3ElwnkEtD3HKzuTAtR0hIZG2jHqGh
wVr1R5KOIzTZ/HdbD/z//9vifYUbCP8E521Oh9AQ/OH3gwFDQu/Ve5upnjRs
Ls0/ZMtxhHPlyuBYNg1rbQRmpZwJff9+Sr3FQ4Pma9MOMRdHlCVTZzh/qeB4
xNxYvI3w54hPWMs4FQH//d284E7o21zwIXyIivKL3271+jrCK+dKams9cZ/L
yB9/6U/okbyYIlZFRXexj+uTAEfU0uKey5VQMdfYx18R7Iixe1kmUZcI+9/b
PM7ud4TsldfXZsKo2LqfoR13wBG3VX7RdAKI83isGNGRjvgneMZJ14OKpCUN
lUGHHXFh1fVFlywJ+wbliy1jHdHkVfXy6gpi/5mMxvlzjjCKNOP9dF8Ah5a/
vjB5/n8VnHk4VV0UxrvnDjSJSiEkqVQqJIrKGyWNuOcOpxBKxhRCoyFlKJEk
SZJKpCSKipBKiFCUJApJSKiQJH37+/P33HP2Xutda6+z1nPucyyQ9DOe/zFD
AhGXZdy7zhM9L/j1ySVL4G72CcX6ixYoW2I/3+m0BIoNS368vGSBnErDWyEh
Eqh7zn5ectkCVrLqM4d9JTDceNg7+5oFmlOt5n9zlYCUU86GtBQLDNTcuuO6
QwIzfvTPuJpqgerXJ2YYW0rAhLenMvKWBcYPjcj3byD95UK7ObuyLaB5QCn9
t6YErjy4+Hf7fQs8W9Z/4f08CWQZ1ddsybHA8wd2ST1qZH8RHbA23wI2p5t0
wuUloOq/5p3qM5LvV0YVJbMloDM68LZ8iQXmB3vfmj3Cg8mZgiDp5yQ/MGQa
NciDa4qe9sgLoscS95ix30g/XjU37N1rkg9n+XsKaniInPn42lCtBUpVSsXL
XpDr9zGF095ZoH6zT4ddEQ+q00P6rRst4FG9b3vGXR5O7W61aflsgRGrLxf0
InhweXLoILvdAu6mzzeOPUb2nzLprFqnBfJsbw1FH+BhOH9VmUO3Bcxm3d7e
soNcP/6SztcBkv9fqkdr6fKgsmHyh2E5PmoPm92NCuBiOOHmoNI0PqzccrdM
9eHi7Q+jSYZKfGytfXAg3ZWLiDgP0yMz+LiyIbjhn4iLPx2Vd7jz+Iic8XDO
mQVc1IYeD5Ey4GPjpjL/tbUc3GlQubJoBR8XF3GrnpRxEK75IM/ckA/tt394
ymT+W13X9j3KmA97FyXroykcZM5ZbTV1Ix8jPlsOXN/HwclD732Wbubj79if
c3NcOXCq8jy9xZyP1ouO9o02HCjvu1x8QcCHu3gk96gpub54RFPFmo+wb42d
yxQ5gEeblpINH7pFxuxjE8l8OK1SW8GOj3ln7E9PGc2BlcdFnck7+Uj46sKb
/YsNacWgJTKOfPjLyV5I7WajqHiXrpQzH7/OqbQFtrGxQHH5Ukk3cn/Mek0D
Mk+3FM9cxt3Dh1G47HaFl2zEeIzVpzz40BhwyzB7zsZIcb3BsBcfzzW+zc/K
Y+OOx5Plv334uFYdadB4jw0HxRsrBvbzERehbW6eyUalxwHD3sN8+Ix7rs1K
YSNQ0Q7f/PiYNP2znM4VNnRLTFd1BvBR2ndy/QUy3ycoyhm3HuPDKbY3ryua
jT0l90zqTvKx0HpHR+MxNtQ8E9a+ieCjoO+54mAAG3WKwabVkXxUOvrNlvFl
A57C9S+i+cgOuxk0x5v4r9S3qTCej0f2Zvf59sT/kveb8xP4CF7ztqPSho39
nk/NchP5+PQkbtMsSzaaSqIsspL4sH2yIJaxYCPTU0t4PY2PTs2wc08MiH9K
8qJr6XzsUgrT6l/ChkLpKPGVDD4q7hVPYWkS/5ReMvFZfKx/UWiWPpMNfulu
q8g8kn9Sw3bZo9k4s7fDxbaBDzUpxbCbiRQUTA560B+I3vp+JsVxFK7Ijd1v
0sSHnGDqjv5oCnfyNYI0WvmQPj829ORxCi8l3C8NfuVDPiJDx2svBan4gZrI
P3w4sw5HJZlSiNkdUn/0Lx8GrXOM+MYUlFbJNfv84yNNvM5t1EqKzLnLuq3Y
NIbfTzGwW0xhg6av5NyxNAbGXJhvq0yhmpKaoDieRq29uoS+PIWtbxJkJ0yg
YRKyQk1tMgWXg4Wq/RNpqP+yuag7hkJoEXvFYwUaRbM0c+//YkH6XLRxliIN
++V9PO+fLJxznrU+RZnGnqaVMtt6WEiWWisOV6WR9/ZVRMEXFnnOvbUOUKPx
OT6zQr+VhXt3nez3zqaRv6/ArKuJhWfMCY8t82iYJtw73FfPwsb50/Zv1KBR
on6zdGMdC6//3vQzXEhjx95TUY1vWLB6uTxIW5PY50+dT65hofVKRdgsbRpz
tF5opLxiYZf3tig5HRq65Z+Xfqhi4efantixujQs0bNxfSULBxUCLo3o0djf
mx3X8YIF6pt08vdlxJ6O3eNyy1k48ehyWqsBWY+TbZRTxoJMlPbdtyto9P98
mdT6nIVY+6c5ZYY0Nt5O2rWMsIqeoDB/FQ3HlxNvZJWycH305+IMYxr6Z5LF
NGHNBu+Kq2torNm/23Li//+/Tue9jllLY1bU1pjuEhYMj5yrP76OhsTiaV2t
hItp9ebDG2joWJ01/UF48+ycL3s20Vh7qvzGJHJ/7eC67u1mNHI7nOeYEN5W
Xt8ntKDRqD23N5hw20XXP6Y0jZYUW1ENYTf3YdZyIQ25T1JV6sTew7LKE1S3
0Cjghh/5TLgic/RWQ0sawnWby82Jv8qb+5OsrEk+aFib5xHe3dnUc8CGxjSX
ySWziD6Pgl/on7Oj0fXy86QwwtIzHwRl7aBhKL19XSdh20dXX77aSePeyPjk
VUTfTMtT03ocaXjVbgw/9b/egwcdxrkQ/ebEhFYT5kc7ZM7dRSN7p4Hx6AoW
rmryh012E3+UKoO0Cfe9WLHW3p1G2fTJSzcRXu08N+qIJ41etUorhvBZrmxj
gheNFWX7pWnCbZdHqef50FC72XpiOWHdlV2e7/bTmBGRrziZcEj92/yBgzR8
r1zQfEf2r/N5KjnZl8Y59YENYYTVJ92mtfxphAf0Ss0jfOB2XMLmIzQ01S8t
ySb+lW0I7nA9SvY7ZxSrQVih3UPneBCNcVLWGpFEL9dj1v7JITSOfq7jNBF9
81TWlT09Ts6bwyy+IuFx+TqyzWE07PaPbF9D4mO9RcV2JJxG1bFdVy1JvNP7
x96cFknj28ED8TbFLJgt/ARRNPE/QcFpcRELiWWVYXtjiD7NP15znrLQ65Bb
GxlLzkPtXI2SxyxEXTq9qzyeBjToOtVHLHwy8L3fnkDj0/HkIwX5LOjUOVG8
y+Q83T2fb5bHwhtpxOIajcWf3rkzOSzIBXY/zb5FozNa5/6Cuyw4K9dL1dym
YWE+4piYyUJu7rMtvZk02gPVK2QzWLD8Gd8z7x6Jt0+apMwtFtJOheqbPqDh
djTb/MJNFobnewXtzKWRXGKkrXWDhQT7DdMSC0g9eLvp2/EUFnpG6TnkF9LY
Zf1WlZ/MAi6qZtY/oaFnvj5Z8xoLkcukhn8V0Zgwff829SQWmt/8NpEtIfk2
aZnR8qssaHt+Pq39nJy3+HHme66wECj1qsGsnMa8uvijRZdZqLmRN8etgsaq
Y1rVKwmrrb3ueaKKBjPefFpzIgten87kp7yiYSbzSSmd8DN/f8lnNTSa96l6
Xic8RdGVbnlDI35Mu3c1YYcHooR/b2nSb/9cvZCsd19g1KFYTyP1oWdGPmHJ
7wt09BtozG3cqxFI7GHC5f3FH2icrJ1QcZjYmzqXW+bVRPSwur0infhTrbjq
j1sLjfklUf3DxN/hCb4ajq009tbC8xDRZxY7x9q2jUZN268Fc1NJPRjoi9jS
TqPufOU6LtF3f4dmIb+Txg3HvEgpov/lhl3fN3SRejR7z0Hj2+T8PGmlV/bS
MNpsn6D+//dU7qkE6f2gcV+9wvn1PRbWplrd0+yjkTQjc8xVEv+4U6/lZg7S
CFw9fVQCyR9YFTVKjBLg3KwH5nnkPLiYjZrAogRozalq0HrJwhmj5RhiC1Bw
M+FbFqnHbepZV7okBKgPTyh4T+r5yf6rjq8mCPBmuc3joA5y3iKOfo+bLsDl
LZMk1SUpUIGPVKNnCDBUIblaYxyF+d5/6PCZAuSeV39qKE3Bz3LvPf85AhQP
8obOy1FQU99xyH6RAP0Lu1t051HY89iIu9BQgAW+uwe+mlOIzfLTnbNKgAl/
57v/ElJ4kpLrqGIsgER5jTLXksLkCO2yiWsFaKurXyC3k0LuVtVTvzYLwG8O
7UrbT6F107bCXnMBfvAP8ax8KYxfFfe9gy+AvjoufjtCwXbOREGDSADFJxfG
3ThB4YTC5qA3jACzy0sCKiMo3B1/4l7lVgG8fJLKSqMo8PpY8o+3CSB1NsRM
lzz/BzNiI1ptBYidNOvrt4sUvrot4kjuEOBw+u3Huy5T+DCv+MD8nQJ8fl94
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
          "]]}, Annotation[#, "Charting`Private`Tag$3816545#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 2.194531667327152}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 2.1945316673271473`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 100}, {2.1945316673271473`, 3.999999999997346}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Re[\[Psi]]\"", "\"Im[\[Psi]]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 
                 TemplateBox[<|
                  "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                  "RGBColorSwatchTemplate"], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.89714555017614*^9},
 CellLabel->
  "Out[655]=",ExpressionUUID->"999f82ef-7faf-4a22-b99e-5e533a42597d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.897145698264711*^9, 
  3.897145713226019*^9}},ExpressionUUID->"b8f4e6d3-81c6-40eb-8140-\
92916809f3c6"],

Cell[BoxData[
 RowBox[{"\[Degree]", "[", "1", "]"}]], "Output",
 CellChangeTimes->{{3.8971457028429813`*^9, 3.897145709792745*^9}},
 CellLabel->
  "Out[659]=",ExpressionUUID->"f66de6a0-4d58-4d81-8f45-87b2dc5ebcc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"Eigenvalues", "[", 
   RowBox[{"H", "/.", 
    RowBox[{"{", "params2", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.897145890528295*^9, 3.897145919134446*^9}},
 CellLabel->
  "In[667]:=",ExpressionUUID->"4e2ee5a5-d373-4e23-b79d-230957b05205"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.1471660873083445`"}], ",", 
   RowBox[{"-", "2.004987562112089`"}], ",", 
   RowBox[{"-", "1.8645404512030985`"}], ",", 
   RowBox[{"-", "0.14314140797901176`"}], ",", "0.004987562112089172`", ",", 
   "0.13815511961195698`", ",", "2.0100242928084464`", ",", 
   "4.006668534070048`"}], "}"}]], "Output",
 CellChangeTimes->{{3.897145894782584*^9, 3.897145919362351*^9}},
 CellLabel->
  "Out[667]=",ExpressionUUID->"5827b7ae-73f1-4312-a05a-8b101ab04ef3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2.004987562112089`"}], "+", "2.1471660873083445`"}]], "Input",\

 CellChangeTimes->{{3.897145929098384*^9, 3.8971459317980747`*^9}},
 CellLabel->
  "In[668]:=",ExpressionUUID->"ef48958f-f0a6-4bfe-985f-3eb32bad5822"],

Cell[BoxData["0.1421785251962553`"], "Output",
 CellChangeTimes->{3.897145932029849*^9},
 CellLabel->
  "Out[668]=",ExpressionUUID->"829722e3-94e5-48f0-9473-5d19a7ffaf73"]
}, Open  ]],

Cell[BoxData["\[PartialD]"], "Input",
 CellChangeTimes->{
  3.897404952707143*^9},ExpressionUUID->"2fb1dbca-170b-4283-99a1-\
a1e82d897c97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ArcTan", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"psiSolh1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Im", "[", 
        RowBox[{"psiSolh1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], ",", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"0.1421785251962553`", "t"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.897145612402789*^9, 3.897145696777256*^9}, {
   3.897145765143309*^9, 3.8971457728797503`*^9}, {3.897145827560267*^9, 
   3.897145865704054*^9}, 3.897145936432474*^9, {3.8971491515763397`*^9, 
   3.897149181098977*^9}},
 CellLabel->
  "In[673]:=",ExpressionUUID->"1f97d460-c740-4d47-88ea-7fcd95c7ab7d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVl3k4lG8Xx0mkQoVISSoVJUv2JfexjaUwtjFEtBJZs0eIEilEUkmbipJU
CMVtyVpUQn7RYmfM8hBClvd5/5rrc819neV7znnOdbYe9bU5sYyLi2szDxfX
/3+3JS88zJaq1jt5Zq+mTTWB3vDLbfH2uItExrw1/s/VoQU5sh4v0OvZnXv/
z2nqA86CV9+g+tF7XP/neiV/dz4PjHiFRi5Zkxyxfql06V4tOuFclUQlOeOa
sd78lQbUp8Jda0nyizVJtTPhH1CV8Lu2AyQ3JrWZTrl/Qj0Fl21NSCbiBIZD
n35B918ttQDJkbUv5P7e+4r6cqfeapC8apnt6aAbHWjoiHHCnv/bh+mCP1e+
oRU3VdI3kbw96ua4f9x/6I6bjMIKkgsrdFWJ8G60Wdkii1VFIN35X8E+/j9Q
xb3QDa0kN2nHljHdf6ECzPjyhORnuiLn1F78Rrt0TNhhJI93H78b+LQXXRb0
SjQkWfNsSdXrR32ocnniWx6Sz23k75u4148orbopZZhA78scefZlDaAAv+h1
x0le5fhMxv/GIDKnNhkuI5k6M29ceG0IvVzcIZtWSaAbNyzdOVeGUdc8qlhP
8k/1e5cUEkZQ0JcEroQKAsl0jud5x42iwDoVztg7AnkGGX7Ij2Kg+Zwd8ftJ
LhS9zhwLH0PMLXyNEW8JNP16SHBPMBNdbhAtyi0n0H5bTUVPfxbi0+O1rioj
UNxEAjXvNBtlnyzLrSklUHNqt/+IOwf5+3A3F7wh0KXMjKY0ZQJxruk1xZYQ
SN4DOam8ION8srYaign0SWOE0SY/joYnK9oGXhMoYEXq2YCn48iV+nKn7ysC
rf+mJSAsO4HOJS0xfxYSqPRxX9bLRxNINf+dy//tLBqrVhL3/iC30JXm8c8I
dH/9D8sUqUkET8uOXMgjkNHghV+KWZNI4zGfy4knBLoc943L98YUslNlPmh8
QCAFu+hUofXTKHsF+7v5PQK1bZfbVnBtGj0Sg7b8OwTaUBtuyLryF40iRWeh
TAK9vba9PWn1DDq3O1tP8DqBDh/9eFw+YQZRdI/EMFIJlMMtddErbhZ5fpXx
QJcJZPKlXmz1sjmUNh/aXhJPIMY93ydPo+bQyEcXFYE4AilDdeNo+D9Uv2C1
0TqCQO1rPB0TZv6hg4kZsxBKoNBfwgzZ4Hk01/kvfE0ggSrPHV/t4b+AypwD
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
fY3+B0wvyFQ=
       "]]},
     Annotation[#, "Charting`Private`Tag$5085369#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$5085369#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {-1.0443138375953624`, 1.0471975511965979`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8971456632939463`*^9, 3.8971457749103127`*^9, {3.897145841213546*^9, 
   3.8971458681028347`*^9}, 3.897145939099903*^9, {3.897149156811322*^9, 
   3.897149182813992*^9}},
 CellLabel->
  "Out[673]=",ExpressionUUID->"b2d04d9e-2715-49ff-970e-09ba6dbc6fe4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"psiSolh1", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.897149047616145*^9, 3.8971490739605093`*^9}, {
  3.8971491885962954`*^9, 3.8971492202023993`*^9}},
 CellLabel->
  "In[674]:=",ExpressionUUID->"c065e2c3-bf4d-4ce3-bc8f-0d03d4b99daa"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
HdqP+o6NZ7LgRzHv+QplaSzMKT1xqJMFezf+Xb55uQySBcXpt43Z4PgpoUBC
WgYber04DC3ZoJ2w2oRjowzq+r6ifXJgA9fXTSFdNBmsHcvl3LSDDXnJ+9oO
plHvLyYqrotgw9ffPfHFa2WxcXwzBNawoenGHulr6rK4cLrugmwDG0qtiKpT
JrL4a3++Y08zG6JvCYzZ7pJFHA7ulehjg5STucX3PFl8qv/Z+Mc0dd5s18fO
ClmE7cVL1ebYMJnvE1r9ShY3/FXsdV9KwtO5k3fOj8vizRW+PdtXkuBV8nBR
Xk0OgwYn709uIAE9Ta4LGMnh1oe/UX8LCSpc7ZpTDnJYeniA7aNPwsyOcZ/G
g3Ko69gmo2lJwtCyMFZRtByqhu2O+WBHQnPFkstXr8ihs5FHn4sLCRkC6575
lcshzxmT5BovEqIfF7vbNsqh1OFnn/J9Sdjrrz+58b0cmu/PWObnT4J2rbvk
4rQccveofcEQEqT2DZePc8vjzWfshb1HSOASOWzXKSaPrgHebM8wEt4HJ528
pS+P1oTF56LTVH5iEsLn7eRRbpOtNF8MCXmNBfdDvOXx9nqiXz+OhKRDWrD1
gDyy25ZbG54nIVTyRa9RpDzacnV0CyWS4N3kfEj+sjxm7C9dW5NEglnoZ26B
2/LYFZE1rkfdO8JtpPbHenmM7U9vbLxK8XH8fMeLt/I4OHeN8S6VhK+yIgFF
w/L4L+14V306CU1vcv+lMOWRpXgsPvk6CaWnNFNPLlXATaLKJniD4kfxmZqf
qAJuOVAn3JdF8fPOrtFGUQFr6k0Ft90kwUl1L0PMRgG/2u3WFMoh4e/F47Vf
PBTQ4r+yTfq5JBT+OX8+P1ABV9FOFrjdofipvLdmS7wC1h6+Ee1zl4RHYo+/
zaQroJt89neXfBJ2nWp+UF+ggBcOlr/RLaD4Mv1h5vRaAX/zxMyM3iMh6M6M
gOgHBTTwZ596cJ+E1Vx8vR9HFbC3xHAmpJCEI62qwUFcisjLx13TXUSCtLqh
9kZRRfRjr2w/VUxCe7L9AkteEbN8Fc6v+Y8Epa0Hrp21UMTFC9NRliUk9FSf
3mnvroiBskpX3lL4zJpLSiv9FVHb9izd4wF1rw+WPL0dp4gh4JK6tZSE1P1/
Rp68UMR+/opGuTISOGKOalHTDIoNTEgkVlB8Dp+Zr3ZRQr9vyukkhXdYXmuO
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
+C86wP75w9XUd48bLSz8H9cfrIA=
       "]]},
     Annotation[#, "Charting`Private`Tag$5085427#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9786611381753246},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {0.9786611381753224, 1.4908941896696826`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.89714904802871*^9, 3.8971490742633533`*^9}, 
   3.897149221619487*^9},
 CellLabel->
  "Out[674]=",ExpressionUUID->"3ace8be0-9230-4aea-aaf0-c1dedecac3db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Im", "[", 
     RowBox[{"psiSolh1", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], 
    RowBox[{"Re", "[", 
     RowBox[{"psiSolh1", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.897149252602907*^9, 3.897149253731688*^9}, {
  3.897149368329815*^9, 3.897149379884532*^9}},
 CellLabel->
  "In[676]:=",ExpressionUUID->"b1ead31c-198f-4962-8a5a-be143d8269de"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
LjgG3w==
       "]]},
     Annotation[#, "Charting`Private`Tag$5086803#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {-1.7205732487534524`, 1.7320508075688776`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.897149254698247*^9, 3.8971493812121143`*^9},
 CellLabel->
  "Out[676]=",ExpressionUUID->"bbc3812b-681e-4c94-ae15-b41f028c6a6d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"psiSolh1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "//", "Re"}], ")"}], "^", 
      "2"}], "+", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"psiSolh1", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "//", "Im"}], ")"}], "^", 
      "2"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Re[\[Psi]]\>\"", ",", "\"\<Im[\[Psi]]\>\""}], "}"}]}]}], 
  "]"}]], "Input",ExpressionUUID->"fb59a9b5-6f48-4ecd-bef0-a133a9c90cc6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"psiSol", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}], "//", "Re"}], ",", " ", 
     RowBox[{
      RowBox[{"psiSol", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}], "//", "Im"}]}], "}"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.897140545715312*^9, 3.8971405664998703`*^9}},
 CellLabel->
  "In[488]:=",ExpressionUUID->"0f99c933-3c49-446e-bc01-a60acb0c3afd"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$290020#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$290020#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {-0.8530366739450148, 1.7320508075683028`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8971405589473886`*^9, 3.8971405682101717`*^9}},
 CellLabel->
  "Out[488]=",ExpressionUUID->"1ca1f238-642e-4e98-9772-4e3d5fa16172"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pSpinPoints", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"pSpinPointsp", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"pSpinPointsm", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "}"}]}], "}"}], ",", " ", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", " ", "3"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"PlotMarkers", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", " ", "12.5"}], "}"}]}], ",", " ", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<H\>\"", ",", " ", 
         "\"\<H + \!\(\*SubscriptBox[\(Z\), \(1\)]\)\>\"", ",", " ", 
         "\"\<H - \!\(\*SubscriptBox[\(Z\), \(1\)]\)\>\""}], "}"}]}]}], "]"}],
     ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", 
      RowBox[{"Length", "[", "pSpinPoints", "]"}], ",", " ", "1"}], "}"}]}], 
   "]"}]}]], "Input",ExpressionUUID->"990afddf-1734-4f63-9335-2b497564a2f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ut", " ", "=", " ", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "H"}], "/.", "params2"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"utdg", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Conjugate", "[", "ut", "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8971407599633512`*^9, 3.897140805968636*^9}, 
   3.897149714570052*^9},
 CellLabel->
  "In[683]:=",ExpressionUUID->"2d7fbbe4-732d-4c22-8fe7-5032f8e74fa5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"realSol", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"utdg", ".", 
      RowBox[{"(", 
       RowBox[{"sz1", "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", 
           RowBox[{"\[Pi]", "/", "3"}]}], "]"}], "*", "sz2"}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"4", 
           RowBox[{"\[Pi]", "/", "3"}]}], "]"}], "*", "sz3"}]}], ")"}], ".", 
      "ut"}], ")"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"realSol", " ", "=", " ", 
   RowBox[{"Chop", "[", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"Chop", "[", 
       RowBox[{"realSol", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "8"}]]}], "]"}], "]"}], ",", " ", 
     SuperscriptBox["10", 
      RowBox[{"-", "8"}]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imagSol", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"utdg", ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", 
           RowBox[{"\[Pi]", "/", "3"}]}], "]"}], "*", "sz2"}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"4", 
           RowBox[{"\[Pi]", "/", "3"}]}], "]"}], "*", "sz3"}]}], ")"}], ".", 
      "ut"}], ")"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"imagSol", " ", "=", " ", 
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Chop", "[", 
      RowBox[{"imagSol", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "8"}]]}], "]"}], "]"}], ",", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "8"}]]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8971408136350937`*^9, 3.897140912766686*^9}, 
   3.8971410475414553`*^9, {3.897141127575274*^9, 3.897141146625204*^9}},
 CellLabel->
  "In[514]:=",ExpressionUUID->"a8d9faae-27d5-4665-927d-964e5ca66b02"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.2880791063062459`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.09212159716609847`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     "t"}]]}], "+", 
  RowBox[{"0.2880791063062459`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.09212159716611268`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     "t"}]]}], "+", 
  RowBox[{"0.28818668118959334`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.10713075057054766`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     "t"}]]}], "+", 
  RowBox[{"0.28818668118959334`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.10713075057054766`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     "t"}]]}], "+", 
  RowBox[{"0.2886751345948134`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.19999999999998863`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     "t"}]]}], "+", 
  RowBox[{"0.2886751345948134`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.20000000000000284`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     "t"}]]}], "+", 
  RowBox[{"0.0005960282885658557`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"3.9078784028338873`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     "t"}]]}], "+", 
  RowBox[{"0.0005960282885658557`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"3.9078784028339015`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     "t"}]]}], "+", 
  RowBox[{"0.0004884534052188231`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"4.107130750570548`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     "t"}]]}], "+", 
  RowBox[{"0.0004884534052188231`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"4.107130750570548`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     "t"}]]}]}]], "Output",
 CellChangeTimes->{3.897141166211733*^9},
 CellLabel->
  "Out[517]=",ExpressionUUID->"d1c8b431-c9da-4eec-875c-33ce2a6f2e25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blah", " ", "=", " ", 
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Chop", "[", 
      RowBox[{"realSol", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "8"}]]}], "]"}], "]"}], ",", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "8"}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.897140915123667*^9, 3.897141014088501*^9}},
 CellLabel->
  "In[512]:=",ExpressionUUID->"60dd610f-4d48-40f1-bc8d-671fdb90e81a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.33264509914763596`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"0.09212159716610835`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"0.18809415075540742`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"0.10713075057054788`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"0.520863466678761`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"0.10713075057054877`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"0.33000155339387705`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"0.1999999999999994`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"0.0033317799394566444`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"0.2000000000000003`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"0.0006882341856962573`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3.907878402833893`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"0.0008828219711720601`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4.107130750570548`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"0.0003188045611927053`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4.107130750570549`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"0.3178022644600548`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"0.10713075057054788`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"0.31780226446005455`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"0.10713075057054877`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"0.6174194857547142`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"0.1999999999999994`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"0.6174194857547137`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"0.2000000000000003`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"0.0005386494532675114`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4.107130750570548`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"0.0005386494532675414`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4.107130750570549`", " ", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.89714091588109*^9, 3.8971410144655123`*^9}, 
   3.897141064610655*^9},
 CellLabel->
  "Out[512]=",ExpressionUUID->"b6f8386c-3320-4d0e-a8c2-f3c14c0c3f04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"realSol", ",", 
     RowBox[{"imagSol", "//", "Re"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.897141015288377*^9, 3.897141018607225*^9}, {
  3.897141172406221*^9, 3.897141195373691*^9}},
 CellLabel->
  "In[520]:=",ExpressionUUID->"b98f1954-1cbb-4d8d-9d61-39e36c572422"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwcV3c8le//xicrI4QKlSQr2SvreRsHkWMdjmRkhUhIJakoKVJZSbIqiRTa
Em7EsUccm3Mo2XtG0ff5/fxzXtfrftzv67re477vA27nrD2ZGBgYxLYxMPz/
74PN5xn7KnW3b/7D/+awz2zS+896Z2IhC9vje3BcGVKQLeVdiDW95k50w3Gi
2ogj1/3PmMPL0ImMrTmMohDoxeKNsE8rsRwPNuewMIF/xf+yvmHdA6+2VP7O
YckJBN2/92oxRtWHxMSNOaxwR+y336GN2NGW5P/e/J7D6mLbTVa8WrGP9Pbk
W6tz2Hwk51jIq+9YZfPQiOjyHHb1W6H0WlYHFi8+se/mAr4frBYs3evGnoT5
nCqYmsMOXn+8EBjZiyk9qugLH5/Disq0VeZD+7HX8n5MR37NYfWaN79Me9Gx
SeP3jw7R5rB87Z3XVAuHsMg2BocrfXPYQr9HZvCrYWzZQdqirGsOuybE9mMx
6ye2ts+xRKB1Dnv0iOg1d28M0xpdkQtEc1hDfH/guNccdlo20Hkocw67k5Jc
n6g4jxHs4EPnkzlM1htzUC6cxx6Tn54ofTSHBbHGXwl6tYDlbgsON38whwl0
H+Xkk1rE/O9FHpuLmcOKc36kvX2xiOUa+O8MjJrDtggq5fNZS9i14hMFjFfn
sKcCg8S4fcvYjUI+ZtaQOczw1y26fNoylnNkPbY3aA67G9nNcO7RCub6eIlK
xXnt/hZqMHNvDWvr/BBXSpzDviYcpMZy/MaY+MPyqoznMGe3Jg/Z6N/YvpId
vFdhDstm3BflG7mOTRJayjgU5zBFqKybCP2D0Sx1O55wz2HUHWdORP/+g7Vd
j/QyY57DQuh8k1IX/2K3rroyFv+ZxcqveXB4B25ix9+mWnaNzWKmZazEUa9/
WElsyIG0sllM8Z/biuD8P0yW+8fJz29nsVhRl5aD2gwwdlND8s2LWSzYreQC
qZoBDBVmtODeLGY4GlD9kcoIh6mxso9PzmI/ZgZdQ1b+A1n+9J+0tRms6/7d
j3FHt8FP1TNVp6dmsAb5o+x5V7dBwStZlTHaDPYuMKmol5kZIrlsj1TWzGAR
K6b/NAVZILK5y+R4wgwmuvk5bVONDWj8MrzjB2Yw/gzPeYErbDBSVLMtlW8G
Y8N2GsohNjhqx8GwwTSDzYX7Tzkbs0POMNsb9GMaK992SLOCvB0Oh+/I9M+Y
xpw4E7pvhHCC9soaMyv7NNbMpca+zYkHWJKPmek1T2LtZnwpLWE8wM+t0E8r
mcR6omclHqfxgN+LzNVLuZPYCPNLQ7kBHjjDycb34OYk9ndzV7j9SV4IUvsn
O6wxicnMrq++PsEH0D7/0S1tArvTUjZia8cPKTFuZwM0xjH9B4SKlxa7wVLJ
oO25xi8s3PRDXrv/bjBjVYk2Ef2FlTMfTNy8txs+S2XrVLL+wjTDGE7bNO2G
/c9FmyS6RjBln68c/0z2QOSOy5PPA0YwcQNFsp2+EJRE/Wc+k/YTY1kTmd2m
KgJL+x8bUUeHMU/5DS5FLlFI+jtdNDs/gJlLey4IGovD7QsT59X1GrB31KsX
6jWkYO9yly974H2Ue8vD7ccxKQhPUj8rT0lAGWpmFn8cpCAi9zuXtlUyiknZ
LX3kqhRk1zT/vXIqHbk7vh+Iq5SC4FHBJL6PLxD/yLiBvak0JNxIjbTueIsu
LtnwjZ2UgY3C60FK1xDyy9b8989PBixyrXOPSlcgN9sD07uvycB3F5FVakIF
In6erTHNkoEdn+p6/D0qkeSV6MsFIzLgUy9+7B/DN9TDhIYunD0Md63Pfbgi
SkFafDKF267LwtL4lWNXeJtQC6NDffMDWejVvX5nr18TOrUQ/TM5Sxbavl2M
8Kc0oci2iV3SVbJggxkw7gxtRi3388LNmY8AW8azBv7BFnSKQ9o6+e4RoC0E
PHpY24Yit0mtSKbIwXnflUPXTDuQ4DJ5x0KuHNiuVx+ICuhAuT9vS5d8kQPz
xgl1i+QO1Fw15nS8Xw6UTXJcJYbx7yNeUgL2yQPj0rjJ0nkqytuUSPmSLQ9p
tI4dxvc7kdefhPQX9grAqX7nssujbpREnP52+ZQC3BF5EMn8oRtVPCVMmnsr
QFJmYuiVtm602+S32uolBShN0i7sYutBdUlObUaPFOAq18oH/Us9SFpO6r/x
TgWQq7wSEmjai+wiIqRLBxXAKxj20t170Q1qn0XcLwUw8Pirx3e1F/WF3kvT
WFGA10d/TlcX9KKY2kXVaH5FOMt+TF9vRx+aOlXmLWOjCC/cAqt3VPeh3R8E
H2w5KEKBCefUzd4+ZMga8LHdTRG2lx8MLJ7tQ2lvxJiuBCmCxYpD1und/ej4
xu0njfGKUJG4neOvdz96k2jd4temCHOrOUtXGQZQ32j+MvQoQrNTkmQu3wBi
0WQWFhhShHh1ydP54gPIeeizV9mcIu5nqrWeyQDiPrKXkXuHEvwWKN5edm8A
naOMKReaK8EeZ2/xj7yDqAJe+8raKcHunLt5FLFBxPM14HmesxKcy093yVAe
REWF63zZ55Sg6zTZK4k0iBZTOBZT4pVg35MvEYTEQaS/s01aMFUJ7udJ3VN5
NogS7yW5Jj5TgpbjpvXtRYNI5cbe7/feK4FxsAiVv3kQXfSVL7rRqQRXvpfW
xjLSEOXX0ti/QSWo/xb3o42LhnadKt5/dVQJGp2qOdAeGiom6T24tKYEexMJ
HZkKNLSuY+Pvt0cZ2O8dkSl2oCHT4l05EweU4cGgQec9DxpKVRoYPC2jDAm3
viaL+9OQpqSnuauWMlxiX9yfE05DYTyXZO2clIHF+cOTc89pqClGy6PDUxmE
RMxzqvJpaC8zQ5qlvzLszSc8Xn1PQ+XrdzjMriuDya0VEmc1DTH8TJ3EniqD
4zt3iQM/acjSyUWsLE8ZFCQkVYomaehp90EHzXfKQFRTipNapCH9ptf1Kt+U
wTRvxb2FgY5ufizPlf6Fr0s2rWeJ0BFV/uZQzowyRBNbCxUP0pH4K+Pd4qvK
cJJ1sSxemo6qM9pu72NVgQyhUqY3qnTEv+cherJDBY58Xyty1qIjz8QTa7t3
qwDFOrqjCeiI5c6P0zulVSD77VV6kykd2TG9zIhTVAHDX/Pf7Czo6GWYbxeX
pgrU33uhdc+Gjn6vynPf1VcBi8RT7mfJdGQSuExgM1MB7dO3J5Yd6Chlqvjq
LRsVuDz7RVjMmY4mPK9+ZHJUAcHvlIWlU3SkOaQ3c91DBQ6QywXOuNNRjAPL
oU0/FRioXR6P9KQjXQXO1YlgFdDMrg+V8aKjBWa+2q4wFfDiWB6+4U1H2f27
Ur5F4vpe/ROJ86Ej+7d7fYpiVcA8Rf8N6Qwdcdw+qJmepAK2BTYPOnBc7ijN
EZOmAry24Yo8vnQUpCQ/cDFbBZ7UuHpz4/gQm+ob99cqoPf5i2s7/n3PoOY1
yw8qQGiveXgKx7HvwUKnVAWebWCfy/B4WLSRqEy1CliHGT+bxfksOh9fEGxS
AS6lYNPfON8cFeuq/6gq8LXfPpd+mo5ObLdPnO9XAdGx0pw8XF/FR3fVhikV
YI7rDf3tRkfBd31YPi+pQLcru2aUKx1Jup7rfv5HBYw1KMfYcL/uc165fJVD
FVwCpPTWHOnopHtCmcJhVUiflOirsaMj7qMp9/cqq8LacpqQri0dVXFnuGzX
UoWK5ke+xXi+pEryGEdMVSEqSLmgwJKOVnkqCY/OqIKF2JGSU3i+X41SBCOD
VEGuKNv9jQkdOZU2jQWEqkIyKahjxIiOeBLai51uqILgwYeaTAS8vrx6ok1j
VOFd3WQSgwEdXdKhOagnqMK/PX5lfXg9yewcOSyeqgp/mfbfvKtLR/Hlc82b
eapAp9087XiUjgyTVjIm36qCusm1nCA1vJ58/pzr/qIKEiZDC2bKdJSPMepV
V6rC2xzl3SPydOQswMr3tl4V8nRcyeqydMQ3xfkz/bsqsF+L8NOXoqOaCr4P
Mb2qkPtp4BmTOB3J+u2z85jAMeX1u1QhOhrSE5e0WlCFQykh1gECdJS4S+a3
zroqnFacfbO6g442qlRTd7GrAV3wKm33NjoqSNHy3carBpKNsiLFmzTk6q+n
vbBbDZRvkGncazRUt8ec1iClBn9CYvgWxvH5MGdd+FlBDToCiBy3hmlIvsY+
PFtDDboOdYcM99JQcoCH2DUTNbCtPdjD3kBD7rVXTit6q0FytpBWVS4NeWhL
EFfPqQHXycl3Z7Jo6PTbNtWvl9TgrJObNGcKDXk/OcRMuK0GASFsZIvbNOR/
rvW5fY4abG18uE86TUOhuw4OXx9RgwdnD6eclML5xDbXGU6rwTsR4eZVURq6
yhhSxL6sBnGqYfvT8fkYPtV0PfE/ddg6XqGxvp2GotDFfS/F1MHP8lz0yZlB
dEflAIufjDpUMN+5WPFrEEXnNc4oKKnDB4vnVdtogyg2UbSsRE8ddJsz1fhb
BlGCV8PJllPqEJCyPbU0fxAlDQQbJHqrw+OXHVIx+Hx/aLX/sH2AOrg9l6fw
PR5EKVrBG8PX1aH8lcB24q1BlLFj3+OVDHVosoNJT4dBlBVZF16Sow7cZ//M
/iMOoqfrQd7XC9TBUvHJhIPBIMr+WavOXq4OLezJPz0OD6JXnwO7RAbxeA/V
V0+tD6BK1j1Wvic0QGrtgkms0gAafS5n2uuqAQpKHcEOEgOIEwwNjM9oQNh9
np6TQgPIPuSc6sErGrC7tnj7JNMAmhuv2dOfpgFbOT84Hnf2I/5b/XzHXmjA
P3ndSf+GfqR5YIHj8xsN8DJOXzdE/SjqhMhWQjm+H8GOqSW3H+1tCPphOqQB
quuWK86h/Uj/9J3+4nEN3M9mU0P/fuTNlEGVWNAA1sQPPhOu/eiDZj2Fieko
eFxTM3Yx6Udm+fvzSw4ehfKClxIFvP3ocmzTeRmvo/DlQsTspUd9SJE3PHki
WBOYFn8Wso71oBK2bqnaME1QFZsQq+7vQfoMcl+zIzXhTFg+q0VbDyLN9dNd
knBcXrhRXtyDLjarS3e91wQbt/Ci6qgeVBo997VqUROczsa65+3uQYQII2LW
hiY4PHqUYbO9B7WEpA9dZdKC3NbgtNU/3YiOv3qO8mnBzoQ8I1N6N2Iyekks
VNSC4LlhwoGX3eiuztZQ7FEtkLji9+z2427Er2p7/oyeFjTbPFCQie1Gh8T/
SzlkpQUXbV42awd1IxMml+EnAVowPoYl8+t3o+/rH89fDtGCkGy35UG1buSw
wMlCDtcC9d83L/893I18h0pk+OK0YC0q1VdxVze6Xy4YfKdQC8jGf3ZwLXQh
amgLy4VZLfjZwPf60esudGpJR5bopw1nzHl02nm6EBcfQxs1WBuOuuQKx23r
QiUKVedPXtWGOJ0NS8XfnYjf3+ir931t6Ny8GWFM70R140TTm0XasHfCQ5ml
oBNdYOWdZf+iDeqmCT/2POtEYhId8XGV2nC4nJTnl9yJwtzJvent2jD203ri
9/VOJH1jz1Xxfm0gr9VXG17oRF1Z/aL5P7WBV4QsvXymEynQXLyLl7VhzxRq
SSJ3osG/BzixTW0odBRiv0/sRDHCI4U1zDqgYxb2ZIPQiUbsvdfaBXVAVf5J
kKxaJ4q/JPPkxH4dQDsS+WfkOpFu8rTukKQOqNdZ0nZJdaKUjoCoGQ0dqDmY
65og3IkIi0oywXo6wFBZJN0u0IkWeVaaN47pwJ893tcdeTrRceJlAbaTOsAj
GgESLJ2IoT4iW+yqDlyTqD1/bImK3owZmOTd0oH72ERZ1iwVObCwTMvfx3Hk
IbexCSr6YBCjrJOpA9z/Il2Eh6jI1e1497eXOmDl2Ja61kdF3BHcV0yLdCBj
wdnwaScVeZcnVJErdUCwXontWAMVCQziU61eB068dmfSq6aiqj+C2z3bdWB/
R47JRhkViRx9YhX0UweOBWaIfyqiorb3z4dimXWBYzRWui2Riq62e0bu5NYF
o4Mxy/qxVCSzICmVKqgLep0/H7yMpKJIudfnXkrqwkUft9fnL1CRorn/TjkF
XWgnVR1ZOktFNF+Fzx80dOFxb9POpNNUpJH3YavymC68fpPN4WtPRb9qLz4z
sdYFbiLla7EVFSWMahi1OuDr7XbP7MyoCGP+M2HrrgsJ1N1VRAIVTR/Eb9G+
urCNqsjzCqOix/rXFd2DdWG+PNosQJOKjFz1OifCdEFs8kXvS1UqWr7+3+WA
W7owN5WVZ6tIRU8zakTW7umC33r13qtHqCjNUbbbNlkXiK4/M+RkqChFKDH+
Q4YumM6T1ciSVJTYs26286Uu5H2fDl8Rp6L7yadYggp1wYYtJZXlIBVFk2or
2j7rQutnhcNRB3A/+OSuyFfowquzUZf9RanoeluS6v06XfjjfDuyeD8Vhd7/
Mzfdpgsnqaxijji+cNztlVkv7u+hbDFLHAdsr/d4NawLO/aIhsbg2LdOfj/7
pC68yE/wZcD3Ox2V3Ou1qAsyHmnFOTh2NdxMpGzowvXFnvZAPL4jkwfx0H8Y
5NLecduJUZH1NcVvP3ZiIGCTStPC+Ztrp1zVE8Hgr3AnSfIQFZlsbKlniWPQ
KejMxyBBRQbFnotbshgEZhNrS3Gse7HptZMqBmf4xw/a4n4cVVH2KtXBgFlG
cbMSxyqLjw8IG2Egc/me3yaOFYoYBi4TMZj3+jbBJEVFh/29knvsMLgisuXc
iq9LyLZYqrtg8FTwvJorjsUmVTiSvTCYVjjnWozH25v7pGb5HAZWzfn2XTi/
3aeZwm1CMFi/OSlQjvPfKe6j+S4cAy/CEksw7j/3j9ZlnmgMXjLKbWzi+tmz
1ArPxWNgx3GE2R33Z5tzuk/LYwzChVM88/dR0T/hbeJHnmEQlMbgNCRCRRu9
Z2h3X2FwzESXjVOYilYefU+ZfIfBf+0sykf3UNG8rYbNsa8YRP+6KXV+FxVN
7czkyv2GwfltxRE1AlQ0+p25jqUJA7bTsYta/FQ0/MDvhicVA5MfXoI/+Kho
wLxDu3oAA+9FBZ1vvFTUzaG5JvYL938x9egkDxW112e9jZjBwF7wsaIrjptv
s/oNrWBwdL02UBHHdQR/CWwL9+t9vKE7jn9EnJkn/gdwpxE1b+KYPpRufo0V
wGlEaIrl/+Jh31+94QBY+PpU6OZOKurL2MY2uAMg1aXu9AWcb8+muicnP8DB
WYETdFxPp6NvldZugEXpk0sVQjifrxn7fUUAbvNmFu7G/WoTag9LFQU4JFkZ
9RP3t+Uyc1+9OIDV7febIni+Gns01NelAHzmeI8ivH8oyZkLZEWAejMBc1G8
/6pX2om3VQGEig49aMb7s5LE8vrTUQC45PSxAqiolO/saQF9gJXAje7j5lT0
/r5mf7s1gP2VG9XFXlTk9oSbucQOoC55ausXPk/4cn/IPXUAsPxMz2MKxvul
MubGOTcAUVqI7/R1Ktrf4vza7jRAxrx95OtbON8+pS6dMwBbzkv6+nepSHa5
T5ozCI/PStCkP6SifoZCm6UL+H730dnhVCqK4bp5te8yzj/jMbEwk4rGJQ5/
z40A2PlJNK4ol4qyT1wJIcQDUC+k+KcUU5HNaYtnsg8B1I3+PdUtpSKm8web
dj4G2JfI+rwNUdGp2Mb9P7IAwi3eqPdQqGjH48xj9dkAPQy8/C74fC5/cf58
US7AefEKzuVmfB4j4dprRQCM8qqWZ/F53tg4N+/5AeDuW7FF9158fvR8EzIv
BnA9yLD73iAVSf96ZKhSCjD+7orUwjCe3wVff+EKgIL7Hf8ejVLR7S0shaka
oMUr4/udKSpS4+CvmqgF8Ijfz9UwT0VJ4qUCxa0A3Aufd9n8xftfMQ7L7AC4
5iIv9pwJP890PHyiugE+bl6bsWHvRJZkzjISHY/nKec4sKsT/XMfGtX6CRDx
49uF9/s7UUHAB56DYwDbxm7rTkp2Is4YR4+FWQDj0+9SfY52oq/JCvd7FgF/
L7Fu5up3ojPPtxWjVYD+b5qtqsfx+0Hpa477WwBe2vylwqc6UeTc33cy3Hrg
QKLfUorpRMp/2wZ4+fTgt+9Rjq2kTvSD7QXLuoAe2KHjU+2ZnQjEzB1q9+rB
Vq5+YvDHTvSXlM7ocUQPyqOmRt7h94/gEh3L9ON68O7fXZOww13oo0MtU6+l
HqTD0J1SlS60umH5kd9WD1oJZwVqdbrQZS0PoVgnPXh54DmvnUUXulYaMxLq
rwc+x8hq1oFdCDnyP/oUpAenGqXa2y53IYbN9GOLF/VgB2XGz/NGF7qh87bA
57oerPc6sG4mdqHb5d0h9nF60JduNcFU0oXqnF0PJyXpwYR6IQ+xugtt/zc5
2JqiB26dO8ZWW7pQLLalb/xUD1xMGwwCf3WhuApxLrV3eiB97+NDcfy+9v1U
AQr8hOuXMNh2U7wb8TFqBL0p0YMfb/TDNJS60UM9s27xb3rgP+GhdJfYjVKr
Ap/upOpBxEGrxKboboQaXixGn9QHmfuOrvwSvejd7rbAqy76sCmQ1Tal2Iuy
T2/MB7jrw60fPvksur0ohslijuyrD7zhPEQeci8iaf6eOnRFHxgJtKmw2F40
mWf6qzJVHxxXCSytjH1oYC3Y42OGPkRZKPOs8/ShVkLmz9xneLzKiRBx0T70
YXhp+MErfVgMjbNz0u1D1/ek05xK9OGFtLDfpct9iD96rnu9Vx8ko/b90//V
h1i695BnBvXhraPgvQcLfWhd3LBraFgfLg9EvXuy2YdoFSnU2gl9YDjSwsAo
0I/yfut9f7iuD68jIi7d1+tHut5JDYp7DOCa6pBp4aN+5GN8tMzH3gA0fxwj
3XQaQLNSe2reOhoAR+bjV0Z+Ayho+3rT+ikD0I9POc9/ZQCFNRcPRPsYALdf
gFNeygCKs9H4mxdqAPXTLFWv2geQgOrubYvXDIB3fLP989AAShX8zaF50wC+
nq+8HDU7gJ73fhZuuGsAT8ttdInsg+iTi7rWZJoBiCK1d+xag0hLb5eB0lMD
kP6v4l6m0SCqEFszDX1hACUX1pnoVoOo/tcnh+0FBnBZO3rew2sQDfiqhcog
A0g5mbKL+8EgYgpR/XJm2ADMvB7a8HQPotsnBCrf/TIA4Z6Ypj/0QcSptVK3
MWEAV+wZ+DbGB5HA1oeemEUDqF0RbNX/M4ikIlV+v/rPECbEd9eRD9CQRZyy
+tQhQ8jdm5yUGURD1MCdmLKMIQinnNk7FkZD9jZLRlfkDOGoih/sxd/TboLv
7TjUDUHDRVJB5QkNja0lONtoGcJ08MmL217QkF9v0OknmCGEFR5IeFZAQxfT
lC4eNjEE2m2DIJlKGvpzle/a+eOGsNnUm8+Cv+/DXRZvfbU0hPHdbLSH7TQU
LfbuodkJQ7Carvcs+UFD3NsS0hOdDGFF+MAzk0kaSvgV+KLf1RC4rgmXX1mg
obRcxY++ZwwhvnaJ1LxFQ3W97nWZ/oZwwMtqs20bHS1vT+7vCDKERNbQy9e2
05Godt0s6yVD0FvuudSzg47Mzm4wal8xhNsHjgb/4KejixmyAgHXDYEQZ/0i
aw8dPWt1lsq+aQixJ0zGdu2jow3Fb0TOWENYvaD8yViCjiTcV1whzhB4krys
OWXoyDpJ8kJwkiGQboWMPD1CR69W7z4ZSDOEaOVhZgcVOjrxlTT++o0hENMb
x98AHUVOR/0ZemsIASf0gnIN6Kho7xdugU+GoJ64P+epER2xhe9VvVpuCMyk
adX043RUbDgaYd5qCAWsMpXj9nQ0cmH3w4gOQ8BMi0O5HOmI56Vp7sduQ6ju
vyii5kJHXuyFLXuHDCFQpDg4ypOOBFsuCc/OG4I2nRbyMpCO9P/lyYmtGMJz
xc6kC8F05K8woGe3bghNz+7YiF6io1RXbtuYTUO4fFHD++llOqIkgHc5IwEe
HPseu3iFjha/BV1ZZCbAgRByGtc1Otq3kn1fYjsBRmovvJ6+TkemEt1PHbgJ
MKxfeSgmgo4ukNk/3ucjgOxh076hG3SUdUerrkqQAMcKhISmb9JR05ez/atC
BPhlQax5GUlHvyczZ2X2EyDifchJnlt0JC7SzuhykAC9RvvZDuLY0nybQKIk
Ab7t2PV6EP8+7JqaVO1hAkxY5PzUxXFuobfWH3kCbL9hz26E708dSiXKqxDg
zpEbqks4Hwa+Zld3DQIk/AjXNA6nI1mDf8GPtAkQfqA93QDXYx+seKcRCIBV
Sd+fxPXefOH+5J8hAeRPlnXp4n4UdD0sUD5GAF5GljaDi3TUx1pX6WVOgHl9
Q+JmEB0pnZEdb7UlwP79WfszfenI+Ynzn/8cCDD0RqctzouOYpriuDWcCbBy
vivxmDsd/ZBbUck6TQD755H24g50FL9UFhFwiQCEPy2O2/B68G+Pc3W8QoDF
/XOWO/To6Phbdz2T6wTwObr4gkWbjljOsTOK3ibAuNn2iCpF3I9JUnhrMv7/
bBqC90Xw+quXPPU1lQA3eDb27NtFR2q5G9jLDAKk+o1nZPDS0YJn1r9rOQTQ
Xz527wwLHZ0enrom94kAP4/fKJ+cpSHDinJnoRIC5EjlM6JxGjqQGa/LUo77
qbW+0x/v1wFH9a3BGgIUR9htmHfS0Bet7bT6egKcDOjzu9RCQ8lCg2Ufm3H/
LhaynK2lIaueG1fvdRKAEpLVX1BMQ3KfbZ0u9xLAquLos+UiGuJMltLxHCRA
4H4oW8+lIYpNy1/tX/i6asW8egoNabfuCZteJoDT3v1ZVudpaE/B9Mme3wS4
9qjc2smHhlZjkVb1XwKY2XvX73Whobemnn+ebDMCbfZORnSMhiQoRaFm/Ebg
6y++PVuYhnjLjC+/UjYCK+73Qp3vB9HsE6ETyepGoJZ6Jn3txSBqCp3RuKFl
BHxv3MTmHw2iKI3E3ycMjMCZK3Dc98og+vuedondxgi8/FcNymEQjb66cNE7
yAhyVC+pnqoZQHZ7t2i5F43gGj2pkuHDAKp5EGU8EWoEd4Ti2IKfDaDs4Ee7
z9w0gjKj4+z11waQm+6XEt8kIzhg1s3yQ2UA0b7/3fL/ZATnLHb6Jib1I6Lh
La/CEiM4/PMOUf16Pyr7xNU2V24ETgSiT6xPP0p7su9pQK0RSNSzhxzT6UcO
nmAQ1GMEMvxOgnuG+1Dn75u3L2wYwU/l4Eoe4T5k6Ms5/3HLCIyHPupL4uf7
h8Ek+1UmY3isl3+JcawXJVS9kL7EYQy9/w53sLzrRZaxtY0hIsZwULzO9yKh
FzXt5+AJ0zWGmHidCB+3HlRtlJBy44YxtL+lH3YI6kK/Tn9tDo0yhrs173dE
2XQhltsjTOdjjOHE9e1Fofj9zKRW7ax7gjGQ45gfl610oibjfj3DZ8awVNd2
9+WFTtRhIj7FXGUMl7gm+xl98feS6SedaEYTiFFollo/3I4YLfp+PAg3gUix
Zw+OEBpQXbntweBIE7A7LHrz73w9ipP77m5/xwT6hM52nkmrR6LcdSOicSZQ
KPm3V2ixDkHzx9G3mSZw2FTRPiqlFoWbxU92lJuAvl3n00tt1YjBxGRx16YJ
MLxdqCMvlSEGvU+MWZePQXb2xp2P3x6iO7vWzNtvmwKxBQO/kgYswMG9au2m
GUxJBgm+ONuPcWdODmnfMQPjoxenv73sx17/DPwXEWsGmYFaEZnD/diYX7g2
50MzsG2XX3lBGsCcr6d/Es0xg7HdP/6r1BjEjmd3vzpWZwaLf9n3STLQMalZ
s8QnnMdhK2cvU67lMEZR6ng7xHMc2PN73t05O4x5XHJoOyRwHLT5VH8cixnG
Mhl8uIr2HgcNPsXrJ78NY4I7o25Xyx2HRKxoy0L5B7ZNo+LKjOVx0GEQLaKx
/cSGI1Q8sIfHIcGv2urL4xFMQpD7fsDj42CIsdrrvBvBzrwa+/w0/Tg07mXm
bGkYwZbbUzm25RwHUTHmbP6/IxibOOP7uk/H4XWathyXyy9MjtLMaN1zHE5H
vQzJOTiKhW73yvQQNgcTxzfYxegxDGVA/cP95rBHsufdp/QxbJuy0BLloDn8
kvb8U/l2DLt3stlIWtYcBKjC8aa9Y1jWa+XZGW1z0NSO28qXGMdqiQw6l5zN
YSD+4cf28nGMP/FxX/RTczD3u9sROjuBbe/c+T3ohTm0bdvDc/HfBMaw637t
yTxz6OtVT9HnmcRmUm98OPLWHLpithVjipMY5Znv/e8V5tCpbWfmHzCJhbzT
0d8zZA5+r94G6v2YxPyXP2swjZjDXqlOut3cJOahpiQ/NWYOtz8KxSj9ncSs
SiREyubMQYh+McJUYAqTqdqxeuqfOZzq7yg6S5jCBr8P5+XuI0IK/6N+3adT
GHWnY1a8GBGCDPVYHr2ewhpsu5JDJYjAMlyHzX+ewj71Ntw8LkcE7vmZC69a
prC44fdO8zpE0ExM4MT+TmFRB+VIvXpE6EyPz81mncbCPHNNqwhESG/JU2DZ
OY35TKSpJ5kT4QFr9tsi6WlMf+EWr4YTEfi5rWM07KYxDWUGtgOuRKBJC5wS
dJ3G5C6EbrF7EkF56+uLVt9pTHjdf6rfjwj9jvtQZfg0tsxgX3M9jAinyp5J
SOdOY5P67V+9w4lg0GBQ5/V2GhuKPP7OKpIIG66zO9xKprFmNr3Mg7FEGNWu
KA9vnMZyeGQu1z4hAtPLfA7jSTze6Inf27KIUOF426BjYRr7/DX6kn42EW5Y
UPw41qexutMTF8peE4HraYnGXZYZzFJ7z8pGERFOUH5a9XHOYL28x4I1PhKB
0BktOcI3g02W5ga9LyMCq5vvM+19M1hQQs/CfCUR0JvHZ5MPzmB/vNgC5ShE
KHF7wl0pNYNx7vQ+l9dChKMj4flZSjPYER9Jv0w6EUxPbPsiRZjBPumSpwZ+
EuHl9geBL4/NYLr8t88IjRNhiOuqvihxBiOiUe+H80T4VGIQx0GewQIEcjzv
MlrA1qbo41nvGez3ZOdIHbMFXDgul+59dgaLqGD2YNluAVbtXNH0wBkswdfT
LYLPAqQUWbg+h85gHyrFXS4dtIAD/i7icXdnMO1HJNoHSQt4JFidFvpgBqvx
i3RaPGwB71h/TWom4vH1PwzIK1gAVe/zSkPyDNa1a+TkWRULSFtg/CSeOoM5
z+zsf6VhASZ2QVb66TPYaJWBw7i2BZzcPamyL2sG808533tIzwIc1OKPvH82
g62dfW7vTrAAGU3N8L/ZM1i4QUd31jELmFoo2FrJmcHY9vxHpplbwGGrW0Jp
uTNY3KxSl7C1BdzRlVyZypvBdle72Z6ws4CH76v9fr6awbIeJ1CTHSzg3rWV
QxH5M5j0uSobqrMFUKZp8dU4fme42M7rbgEKrpXzb3CsKSRmbeFlAVoCPyx1
cVw1Z/U91tcCYj53Rl/C9zOribBsOGcBL36DiiMej5r6tpU12AJuCKhkzL2c
wRwDhomEEAvwbLAtVcX5jhB4W26EWcDkDdHdyries8J65hXhuJ8DEV+nn85g
q/MBTZuRFhDvriHknTmDXaNkmWlFW8D5XNv1V2kzGEtaW0PIPQtYUbax/fp4
BnsQyGD6Kd4Cli3kjTNxv7NETpkoplrAUUq15gaen8qg/QTJfAsYHJxheBIx
g22szMWJFFrAl0J/0qFrM5jK5YoB3ve4/sv7/uXj+c697hr8t8QCvF5MF346
j/sZ+/z59wYLWGjU5u/3nMEadgTPUVosYA+5NsHTbQbblmioVdqO59+qPHvG
eQYLefyrPafPAt5ftxOexuvvVI4kU9ikBSzGiI9ieL2mSv82D5y1gPqxmiV7
vJ6pr+sen160gLts3s8t9WYwk/c+ilYbFtDx6AWpTmMGu6GmedVoywLEvThy
dFVmMJrjrZG9jJbQv37SJVwez++QrcJOZktI9fj8jnRoBvt4QLeLi9USDiFS
IH3/DGbtLhHGxm4JypQ9DBJCM1js6GrtJqclvBhqzO3nwvMvRT/7m9sSInSF
s41YZzCKT+3OJR5LeHi/WN+TYQb7N/3IZZzfEjDsbtpXfB6kyYUz/xS0hNEc
4bWlCXxeBXjnD+62hIWK84rDw9NY0JLGWruIJaRMFzD/aJvGRtd775eJW0Ln
OWWLtvxprIVFpDxBxRJszNZZhE5MYxmiWSI6JEtQsKUxdOdPYdwxinVH7CwB
LVvbiOHz+PpS1fl99pYQF3Jk3jF5CjtF+dXw76Ql/PuTd+pB+BQm5nf4cpW7
JeyXfHXC32YKS+gsFX/vaQm2yRUeX42nsP8wYttzL0vIfZV9p1NrChvhDZS8
5Yvzu1qX73ZwCsv5/KnT+LwlbFdnjo/Dzw/BAyYRGhcsQXUna8Py8CR2O6ZX
VvqSJXRsCwN+6iTm7fT35vYrllDgf+Larc+TmMx/+krNN3C/fT5a2lyZxAqI
zfetEyxB9AqZKL4+ge0rdtY0SLKEAMEQAf3xCezBgflfysmWkNy09MesewIL
WObTEUi1BNZz8SyqHycwpVT7qe6nlrBvZH9PVcAE9unXT2Ont5aQ+DAsJ3d8
HCsL22DwbrMEPa2iJ4HtY9hq4ej8jXZLMHouu0O/fAxT+Nk+lE61BB/RJsu2
vDEs+1h+RUePJWQ6Vy3sDR/DYgQdw7FhS1BXNd95RnoMsysq+ye4aAmNpZOW
pwJGsbmf4Vs1O61Avc598c7sCHbAjPXvQbIVWD3I1xSuHMY+tErf7aVawV1N
s44ZsS4slrKlIOpkDStVYtrOxmUYBI4q7nWxhkSWKcefQaXYsnCLkpCrNexS
jGQ3z/iKOQamq/B7WsNBtzPOT5a/YEdEtDXYzuLrsmz71TM+YS2Bl7H5MGsY
XnsN/o2FGM/eZfOKNGtg/NbBGyF4C0s8P3Hm1IA1/CMtesRVfERCRqGBNjRr
qBssoN4P/YSe7eYIMRqyhikl2kOCymf0rkz2luyINRS1GD57m1OM2lgDMn9P
WcPHxuORalFfEXfaakfcH2t4FrWIUhMq0J3q/3QqhWxAYbu4ZVxvDeJ5lGTw
QcQG+iyJBUdlKOiRzyHTl/tsQPvg1oFboRSUw21MvidmA6YlL0L5hGpRjX1M
4AkZG5iM0co+Z1uHmGZ4chaO2sB5ku/5i6gBhQns2yF2wgZeOG0urDi1oua3
7A7YSRu4eVpAve5VK9pHXMl2dLKBLunCx7vXWhGKatJ85GoDb0KQAb9xG2L6
HXqa84wNRK1ZbB/ta0O3+7rLVkNtoCxFesl85TvqufiNjf+qDfBHLp1139WO
pHYW2ihet4F32m841Y62owazqAnfmzbw69oJOcGwdsRZpiIwfNcGDjIdWezd
akcJmfF+jWk2cCV3gJltvQP91Lr6eTzDBgr/DH8l7KIilR5vJpanNlBiruBy
TJWKOnkgBV7YQHTkxUvPAqho943Zbx/f2ACnkjshdYSKMjzMhLPKcT+PpR6+
XdmJ5hjUT5dV2IBqtc4hoYFOBOlib/uqbOBVGPe5wNVONNy5biRQawO60R6G
fjJdSNw4Nyim1QYyp41JsQ+6UJ40c0PwkA082xVEESR2o3YRvT9nf9iAx9uR
x3ru3ejvjquyXiM28O+nv7liSDciri7fPzFuAzxfQi44Pu1Gy1UjNrrzeD4c
Mi61zHcjcKweZGUggeaN0e73N3vQGQuGHYxMJAC3hfaZpB6UqK8NG/+R4Pxb
LonxFz1oVOrDs2lWEhxeKk0Xre1BsSvPvb7vIMHBRq13X1l6Uc/9mwup+0kw
buAcXHmlFzHdQGJJB0hg8zHVLCa6Fx2+8Mfm3kESfE28hyQf9aJrJ89/ui5J
grddJQ0jb3uRuJT7FQ95EmjkFSiE/epFROHM106KJPjs3Xjr30IvusTdP2in
TAJLsU8mJ7d6UcOyNRxTJ8H6kx8LjwX70LlKfWY5DOfnKum2m9CHUj5cU5PU
I4GaacsVgmUfqnpZ4iVqQILAH2RrvZN9iP++UgOfMQlO864ZpQf0oRIHsQdr
RBKcMRa5nZ/Sh0bMnSvmLUlwn1raw/+sD3HppS5MWJNAcmdhlHZ+HzolyUca
sCNBIY+EWEVpH2JZZtxT6UyCH8m9O4IH+tDvopT7I6dIcO3V1nH9kT40dVZ+
G5s7CSRyH6WWTPWhtjHHOaIX7m9CbVP+Os4ve8kjyIcELzq3GCUZ+tFH15i+
h764f0t7f1my9KPU/s81A+dI+HvC5d8X3n4Um0LUYggigXP4yfotwX503fZX
0cFgEgj+WbXeFO5HHq18aWdCSNA+ELGieqgf2cXm8d4PJYGnamjeJel+dOwY
3H4bRoJf0VeUbxzpR3Lfzgb9DidBQgBbKqNqPxIN3zYufJMETmRGmWsa/Win
zhMn7BYJpFS3Otq1+tHvT3UmUdEkcKgWjODV70eT513K8+6SoBGbkmMk9KNB
hVXl5nskKJvSV6Aa96OqVwf38yeQIJ5pxwsZ8370waskST2JBHpl+SxFFv3o
pbjV9pPJJIh+snZXxBrXl3Ft5WkqXg/5KSW5dv14vQj41qSRQCbetbfGvh8F
7n49NJ6B57dDe0eNA663U9+O8ykJ7glF1T53xPUm9DbKPydBU/fe387O/cjE
IkDP5gUJHrzxklty6UdanKyfL74kgcuEX4ajK66/Pl02NY8ENXq/lB+54fqj
VJ6V5eN+rQ1mZ7j3Iz6Dxl3Db0jQkVFwy9+jHzEzuN3bVkQCLuufTkyeuB+l
v5mk3uHxOMrLbHE8eflBiNkHEmSmTdt44HhATWLW/xOOhbj/k8Fx61Kpe0Ix
CcLXnq4+w/erKrLp/VhCAmHev58a8Xgfzk4Se0tJ8FpiQOspzidHJqL6bzkJ
hpiOb4rifB+P7dIUrSSBtbc/0zFcT2x2QaHBNxLkqC7M7HLC/XIlHPKqIcEN
ZTrrPdyfgH0DqTG1JIh0eWyYS+5H7v1BPAX1JFjc12RyhoT7lcIe9b2RBDvJ
+meolrhftll/lptJQCyPejN+vB9p8qkH7m4jQUGsdUWeST860to8qtVOguqS
7nkhQ9yfY3++3+giwf5b46V7NfvRNpYE45weEtB6r2cWq/SjtSqpsvo+Eqj0
7WEXlMf90LbL5aGTQPTB/He5g3j+Fd5eyxgjgUFg6mgoez/yF1hY/zxBgomY
ndoTTP1IZUPhwvcpvB4DS9WM//ahim9FvtvmSeB4wSnkx2wf6rErsj/zmwRJ
Sw4fxjv6UIbWfMfNDbx/iSm50s19yENUwSL9L97v/ke/nKH0ofmJQkIbgy04
nG9fGivuQ2xXC5XU2G1hPPmA/s30PtTiOvfGgsMW1NgXPK8n96EkI3lpHy5b
yPim//LUgz4kylO4P43XFt5EGhNKw/vQ6PJs6sedtlDaSxI9fLkPve6VE2wV
sAX92TBT78A+pPG8gJNJyBbulTryq7v2oa3bs7eFRWwhaERQtNy+D1X7yf2n
us8WJK9zRm1Z9CFLtYJ1LzFbKItrVXqi04e869+MNsvYwg1S/eYafx+SK5hx
HZO1hSKuWusN9j60nHBkkEHeFjxcn5zPxedjuOObDmVlW1C+e6iKZ6wXpcy9
rnisZQsj35rNQz/0ojqB16mex22hSkD5KdWoF0m7vSJunrUFHYYitCOgB9Wl
axYtnrOFPV2ia2wePeh0bwPveKAt0I4/IP0h96Bsyylq+wVbILFjHR+wHiSK
yZ7MvWoLXGHH5bq5ehAKLS1Nv47zOThz7jdDD3L+dHxfYoQtbNPbufBrqRs9
OXJ2+OotW9jadlOSv7cbCYoUeNncs4WWQ2zu7lnd6CNZt97kgS1E5H55FR3f
jUiJLTK68bbgc8eqx+dGN4rfPjcj9dAWCscfNTvi5x/nunzwVpotrDY6yDqI
dSOmrrfhea9tIYorKW/v4y7Uf+zLO9spW1jkGvxT8IyK9C2y7S/M2MKLQuyG
VjwVvSI92EqaswX/PzIZ169TUaiLpyl1yRYW1mxZJU9SkdAF3h/Wf23hc2N7
2n87qMg+y4fXkssOQm8Ky5ic7UBdq3sCTOXtgMSV3Bqg247an4cewc7bQbjl
pHzGrjbEx/Dpi+YFO3gryvF7iLkN2TguENQu2cGjlF3BceOtiMrv7Xzkih34
XOQtMXveirpv2T4QvmkHBFkeIeq+VrT7R5zwrlt2wPqYMVjnXwuy1216yXfb
DnKDLojZDLWgvlX9Cva7djD2cP1cQnYLGvBSWFhLsIOpo8jSXLUFiVT7Xl1K
soNKQcsKAeEW5CT6kn0u2Q4O6yjWnmNsQbSevWKjqXbQ+cek+UVrMxo6xmFD
fYbvLzGndDagGf06PPqh6J0dZN16b3b2QxOSuHNA7/UHO/DW06lZedKETo84
Nr/8ZAdog58merMJjad1/MoosYMJV7KisWUTmuSqFLxXZQf5albx+b8a0ezc
kxCfdjsoG2Z7+pWpEckd797mSbWDoX49332jDehcLl/8qS47eLK1vFpQ34Dm
T0Xnkftw/ndVeXLiG9DS94t9hB92ENdeWjMh0YBU5N6d1huxgxXRzLaPXA0o
OGZmUXvUDm7oDamprNSjVX0PDpVJO2h/ZlfkT6lHv99baYst2gG/5pGUs0H1
iFNDrWXnsh14WdOtGl3qkWip0CnmVTt48yrdaNS8HplU/7w5vm4HxSdO/VKW
rUePqRcaCxjJILVE8pycq0MF9g5OWf+RQcXyVsrWcB2qGtCdi2cmw1rAJ1cv
ah2aHGHdeYGdDB1RXHfnvtQhzZXHDlq8ZNh7N6p+8lYdIl6+Ni27kwy5lubn
v4TUIbdNt2v7BMjAtTQUSvatQzHMss8Y95BhRlPJtt2iDvULlE/UipKh0IRr
js5fh8LUfoSQFMhweNcjEeUHtSiuhLLdSIkMu+otT6ZcrUXZuvlp6ipkSErf
EFj3rUVNRsEVQhpk+P2FQ3/JpBYNNdhbc2qSQaRx2eqtei1aJuqMbGqR4cnF
2vj3ErVoL5mFbRgjg8ney49amGuRUv/k43Y9Mpy6fEmUY5WCjFxaD1cbkOHN
hGRv+ygF+XulWLw0JkONkMRlaKCgG1NhwynHyCAcdJONsYyCks+5no8xI4Pk
Nbn3EUUUVH5J5tFZCzKUHJfMGnlMQe1/uKVdrMjgEslLaH9AQaPXl0osbXA+
wxGZyVEUtPFfz3F9WzLcXCe2KF6jIO47pTRlMhlGPni+fnqRgsQ4nwYcOkEG
PzTVM3yOgtTibjHtOkmGufXu2ikfCjLlP5PE5oTzjfnW98mDgpxTiBIbzmRI
GU+O0DhFQUEiysVTp8jw0jbFzcORgqKydpkOupGhmIkQLXuCglLF//a3eJAh
38zwSYQdBRXkDp2tOE2GC7xv+GxIFFQlW/PvrTcZXo9VhD2wpqCuorz452fI
UIDkS8WtKGhS5f7Bh35kqOWcMGewpKB/xUEfo/zJ8DH7woMdFhQ0wPLu7rMA
3G84SpYnUlAJacG1PIgMsWcMlF3M8ffYMwWNvmAy0OHxvujjFBQ8f4579SIZ
bhvMXkgxoyAr3cIR3stkuGQuTQo1pSC52NmSI1dwf2qkx/YeoyCOviPxx67i
/vlZfQ02pqBxybNentfJEGgQ/jeIQEE1F17rRESQQVPEJX+HAQU9+za1M/0m
GS5fZacYAgWF8x6eLL6F53fexX2HDgU5uZypoN4mQ9DJ2xXnjlKQ5pu85Plo
Mqy2ksFHlYJ2/xn344zF9RwsdWRSxPOb7LXHMI4Mf7VOcmtLUlDhSM6cSwIZ
fl1grF87QEGxSqM1V5LIwL/wdfGOCAUZt3gEvU8hw6N4CcdQXgoSF8k2aU3F
67mqb5KZk4KYzvzcN5VGhuDppZpSFgqifxZbYckkw9UDh2o+MVJQKbNbo9hT
MkycGv/JsVmDHts8far7nAz29551dfyuQRefDl1yeEGGx1N/sw6t1CCbuf3E
iy/JMDthJr9rsQYp6LiIJ+SRodSlebl0rgZx3c3YeJNPBqPWoDjp2Ro02TPY
Vv8Gr9fJlstnZ2pQncTel78KcT8NH39OxvGLYMerjO/IUC/P87QI//5G1ROb
vR/IEK9qmf9tvgad4umXPvoJ71/emwadSzVIx1mIwbaYDH2f738aW6tBQq9P
dAWUkGHHrSKJjb81aG095XVsKRnMzyk9YPuPgqjGPTdyy/F5sF+6i2M7Bb19
uOtEdQUZGNcnp9Zxv+7/tJMfqiLDjcF3azVCFOSrmMz8txr3/0lO3ClxCjK5
3tm/q5YMf1L1mIrlKOg/YdIdi0YyRCrc+s8cr4cQa6vh8g4ysD4pTHl4iYJs
s+I+93WSwYn7qF5BJAUpzbbeW+0mQ2++9O/meAqaiSZqyg3g/Z3zfHtzPgU1
dN/jMaWRYX6qqv1WMQXlHmoe9RzC432MkF2vpiC3SrPE9BG8HqM30/oHKAjb
cdfnyygZAiq4C9THKUjEqQHrHCfDonrjI6klvJ9+m0xzzuD9LLd2rpq1Fpkp
GBHCVsjwbP/tuEDZWsTQ2ckYvEaGmOmYEw4qtejTZc9y33UyiAXvur5fuxaJ
fYtUP7lJhqozXmrXzWpRjxf/svU/MrgnGHzRtqlF9zmzi0wZ7eHq4IMF4ZO1
aMP2m7Qmsz3YphW9vovPz6IN61FFVnuQ4pDX1A+uRaczfzyTZreHrl8Rm574
vBUxDHI5wGEPVlar2Wy3a1H7OKPIHi57KLvq1aUZX4vu3Ivv4dlhDyTlI7Mc
abVIV+nAQzZee5DzEPwW/bIWvboC3L/57WHWFpMoqahFp0TbGuYE7SFI3Y3p
ekstEqxxuT222x4eddDm+Adr0Q3u6wzdIvawJlEvW/G3Fmm85y5r2WcPg4j3
XSdXHZolZ1ymiNrDT2/596X765DD07LFj+L24LNvhXuUUId4jMwL30jYQ2B+
xXlBhzpEmRzwfSFlD6P/yt4s+9chJZW/I0myuL7BCskbqXWIvVaz+7yKPdAP
KUtxrtWhct+GRF81ewjzpZePcNejYB4HS3cNe9CST2iiS9SjoROX66217WEd
eWGLdvWoePrzV0VDe2jNf876+mM98uZTzZqzwfVcsq4uc29A+z5XO47Z2sPC
jhCs6VIDop4k7aGT7cHLzy/+zt0GBC/OJ7SctId3dO4A1XcNaLfGu8g37vaw
NO1z4tdmA2oZ0NN74WkPe8wutXfzNKLIiO+baV72kNlYeG/+YCOab5i/GOtr
Dyd5e2oGTRtRrZO8j+95e9havGgem96I+Ny9v6ZfsId0zdPTRz41Imfvp1xt
l+zhudEH5ozWRrQatPOdSpg95ORORAoxNyHxO2sbm5F4PVhFHRa70oQC7imY
K9y2B/bP249Opjahrwk+mW7R9rD9xUJrzNcmZJ3eb1B7zx4CXtm8Ff7XhMLf
odi4ZNwPM50Qh3vNSJPVsujjF3tI9Mp9tb+8FUVxRjONf7WHgWkZDq/BVvSd
t4okVI7XS9CbML2/rchbRGX9WpU99D8/H3tJpA09Utytb9KIx9dbCzti34Z+
qFklhTbbg7xtIYe0VxuS044Zfd1qD9npTt/0LrYhitHfGF6qPdxeqxH7ndSG
lk8OdfQN2ENJbEbm/c42BK57JLjo9tBzayQ+ZrQN3T1tHYIN24O+VcPD0bU2
JBZYLZL9yx6MfLRUa4W/I6uoXM+z/wt7AIT/7lhAijDAewpo0b+ci+G3n/BY
QDdW96Dye9G/6JAaCtLyWEDyn2WRIpDRv4CbjK4291hAFJfHuDO50b/MoMUA
aflYQKIOdLH/zdG/F6b+Upv7WEBgjJZd6eLRv2KrN6XN/VhAt9871eT30b+u
sHD3//9YQChvMhDmDNK/+/H2rg==
       "]]},
     Annotation[#, "Charting`Private`Tag$809620#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
378/sDUh
       "]]},
     Annotation[#, "Charting`Private`Tag$809620#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {-0.853036803268762, 1.7320508075687302`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.897141018858905*^9, 3.897141072932354*^9, {3.897141180003182*^9, 
   3.897141195559407*^9}},
 CellLabel->
  "Out[520]=",ExpressionUUID->"3bcace84-4d9a-43fd-b63c-3de34ae396a8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"points", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"realSol", "/.", 
        RowBox[{"{", 
         RowBox[{"t", "->", "tp"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"imagSol", "/.", 
         RowBox[{"{", 
          RowBox[{"t", "->", "tp"}], "}"}]}], "//", "Re"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"tp", ",", " ", "0", ",", " ", "100", ",", 
       RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8971413962636967`*^9, 3.8971414928587723`*^9}},
 CellLabel->
  "In[523]:=",ExpressionUUID->"9fd46e0a-c61a-46e4-b1de-2293c7044ae1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"points", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", " ", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", " ", "3"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"PlotMarkers", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", " ", "12.5"}], "}"}]}], ",", " ", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", "\"\<H\>\"", "}"}]}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", 
      RowBox[{"Length", "[", "points", "]"}], ",", " ", "1"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.897141498344018*^9, 3.897141549366324*^9}},
 CellLabel->
  "In[528]:=",ExpressionUUID->"90e25b63-4ede-401f-bc9a-82b493577a98"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 463, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 1001, 1}}, Typeset`size$$ = {
    607., {168., 175.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[{
         Part[$CellContext`points, $CellContext`i$$]}, 
        PlotRange -> {{-3, 3}, {-3, 3}}, PlotMarkers -> {Automatic, 12.5}, 
        PlotLegends -> {"H"}], 
      "Specifications" :> {{$CellContext`i$$, 1, 1001, 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{673., {216., 225.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.897141510042742*^9, 3.897141549771723*^9}},
 CellLabel->
  "Out[528]=",ExpressionUUID->"093fb032-3b76-45d6-b1e3-5add3b9d88e3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Solving", " ", "with", " ", "\[CapitalGamma]"}], " ", "=", " ", 
   "0.1"}], ",", " ", 
  RowBox[{"J", " ", "=", " ", "1"}], ",", " ", 
  FormBox[
   RowBox[{
    SubscriptBox["h", "1"], " ", "=", " ", "1"}],
   TraditionalForm]}]], "Subsection",
 CellChangeTimes->{{3.897141961853489*^9, 
  3.897141987510892*^9}},ExpressionUUID->"8b418419-8f98-47d3-9411-\
2507b0281aaf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalGamma]", "->", "0.1"}], ",", 
     RowBox[{"J", "->", "1"}], ",", 
     RowBox[{"h1", "->", "1"}], ",", 
     RowBox[{"h2", "->", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"h3", "->", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut", " ", "=", " ", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "H"}], "/.", "params"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"utdg", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Conjugate", "[", "ut", "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"utdg", ".", 
      RowBox[{"(", 
       RowBox[{"sz1", "+", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "2", 
           RowBox[{"\[Pi]", "/", "3"}]}], "]"}], "*", "sz2"}], "+", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "4", 
           RowBox[{"\[Pi]", "/", "3"}]}], "]"}], "*", "sz3"}]}], ")"}], ".", 
      "ut"}], ")"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"points", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", "#", "]"}], ",", 
         RowBox[{"Im", "[", "#", "]"}]}], "}"}], "&"}], "@", 
      RowBox[{"(", 
       RowBox[{"sol", "/.", 
        RowBox[{"{", 
         RowBox[{"t", "->", "tp"}], "}"}]}], ")"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"tp", ",", " ", "0", ",", " ", "tf", ",", 
       RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8971420091579638`*^9, 3.8971420296668577`*^9}, {
   3.897142652023766*^9, 3.89714265596459*^9}, {3.897142723942157*^9, 
   3.8971427294868383`*^9}, {3.897142921172686*^9, 3.897142951046883*^9}, {
   3.89714317990847*^9, 3.897143204986808*^9}, {3.897143284503681*^9, 
   3.897143337241065*^9}, {3.897144594168017*^9, 3.897144597645854*^9}, {
   3.897149736337512*^9, 3.897149736536224*^9}, 3.8971497747552233`*^9},
 CellLabel->
  "In[690]:=",ExpressionUUID->"d07738cc-8db5-444c-9072-0b808b3a7103"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"points", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", " ", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", " ", "3"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"PlotMarkers", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", " ", "12.5"}], "}"}]}], ",", " ", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", "\"\<H\>\"", "}"}]}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", 
      RowBox[{"Length", "[", "points", "]"}], ",", " ", "1"}], "}"}]}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[639]:=",ExpressionUUID->"93d3de17-813c-4f6d-87d2-0fb07a38309a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 606, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 1001, 1}}, Typeset`size$$ = {
    607., {168., 175.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[{
         Part[$CellContext`points, $CellContext`i$$]}, 
        PlotRange -> {{-3, 3}, {-3, 3}}, PlotMarkers -> {Automatic, 12.5}, 
        PlotLegends -> {"H"}], 
      "Specifications" :> {{$CellContext`i$$, 1, 1001, 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{673., {216., 225.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.897142084723956*^9, 3.897142756073107*^9, 
  3.897143175166367*^9, 3.8971433053919487`*^9, 3.897144602453195*^9},
 CellLabel->
  "Out[639]=",ExpressionUUID->"95de89e0-472d-4bcd-8293-76e41b3586a4"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalGamma]", "->", "0.1"}], ",", 
     RowBox[{"J", "->", "1"}], ",", 
     RowBox[{"h1", "->", "1"}], ",", 
     RowBox[{"h2", "->", "0"}], ",", 
     RowBox[{"h3", "->", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut", " ", "=", " ", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "H"}], "/.", "params"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"utdg", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Conjugate", "[", "ut", "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"realSol", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"utdg", ".", 
      RowBox[{"(", 
       RowBox[{"sz1", "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", 
           RowBox[{"\[Pi]", "/", "3"}]}], "]"}], "*", "sz2"}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"4", 
           RowBox[{"\[Pi]", "/", "3"}]}], "]"}], "*", "sz3"}]}], ")"}], ".", 
      "ut"}], ")"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"realSol", " ", "=", " ", 
   RowBox[{"Chop", "[", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"Chop", "[", 
       RowBox[{"realSol", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "8"}]]}], "]"}], "]"}], ",", " ", 
     SuperscriptBox["10", 
      RowBox[{"-", "8"}]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imagSol", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"utdg", ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", 
           RowBox[{"\[Pi]", "/", "3"}]}], "]"}], "*", "sz2"}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"4", 
           RowBox[{"\[Pi]", "/", "3"}]}], "]"}], "*", "sz3"}]}], ")"}], ".", 
      "ut"}], ")"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"imagSol", " ", "=", " ", 
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Chop", "[", 
      RowBox[{"imagSol", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "8"}]]}], "]"}], "]"}], ",", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "8"}]]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"points", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"realSol", "/.", 
        RowBox[{"{", 
         RowBox[{"t", "->", "tp"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"imagSol", "/.", 
         RowBox[{"{", 
          RowBox[{"t", "->", "tp"}], "}"}]}], "//", "Re"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"tp", ",", " ", "0", ",", " ", "tf", ",", 
       RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",Expressi\
onUUID->"23aa7f24-496a-414b-b395-bff02ab68d65"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "2", " ", "t"}], "]"}], 
          "]"}], ",", " ", 
         RowBox[{"Im", "[", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "2", " ", "t"}], "]"}], 
          "]"}]}], "}"}], "}"}], ",", " ", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", " ", "3"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"PlotMarkers", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", " ", "12.5"}], "}"}]}], ",", " ", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", "\"\<H\>\"", "}"}]}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.897143671023218*^9, 3.897143765493844*^9}},
 CellLabel->
  "In[633]:=",ExpressionUUID->"6fd6308e-0f46-44ce-9506-452c6ea255e6"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 9.69137191772461, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 10}}, Typeset`size$$ = {607., {168., 175.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[{{
          Re[
           Exp[((-I) 2) $CellContext`t$$]], 
          Im[
           Exp[((-I) 2) $CellContext`t$$]]}}, PlotRange -> {{-3, 3}, {-3, 3}},
         PlotMarkers -> {Automatic, 12.5}, PlotLegends -> {"H"}], 
      "Specifications" :> {{$CellContext`t$$, 0, 10, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{673., {216., 225.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.897143676632187*^9, 3.897143727819062*^9, {3.897143758588872*^9, 
   3.897143766661151*^9}},
 CellLabel->
  "Out[633]=",ExpressionUUID->"acea8c96-0c40-44a4-8768-e438fc0a3157"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalGamma]", "->", "0.1"}], ",", 
     RowBox[{"J", "->", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ut", " ", "=", " ", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "H"}], "/.", "params"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.897149840620187*^9, 3.897149840779022*^9}},
 CellLabel->
  "In[695]:=",ExpressionUUID->"2bdcbb83-b678-49f8-a63f-0276d41eb3e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"choppedUt", " ", "=", " ", 
  RowBox[{"Chop", "[", "ut", "]"}]}]], "Input",
 CellChangeTimes->{{3.897149852627308*^9, 3.8971498897615337`*^9}},
 CellLabel->
  "In[700]:=",ExpressionUUID->"4508798b-f680-4fba-b524-dad9fb5f30cf"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"0.125`", "\[VeryThinSpace]"}], "+", 
                   RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
               RowBox[{"RootSum", "[", 
                 RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"8.64536409`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"27.958788`", " ", 
                    SuperscriptBox["h1", "2"]}], "+", 
                    RowBox[{"30.3598`", " ", 
                    SuperscriptBox["h1", "4"]}], "-", 
                    RowBox[{"12.04`", " ", 
                    SuperscriptBox["h1", "6"]}], "+", 
                    RowBox[{"1.`", " ", 
                    SuperscriptBox["h1", "8"]}], "+", 
                    RowBox[{"16.315199999999997`", " ", "h1", " ", "h2"}], 
                    "-", 
                    RowBox[{"32.32`", " ", 
                    SuperscriptBox["h1", "3"], " ", "h2"}], "+", 
                    RowBox[{"16.`", " ", 
                    SuperscriptBox["h1", "5"], " ", "h2"}], "-", 
                    RowBox[{"27.958787999999995`", " ", 
                    SuperscriptBox["h2", "2"]}], "+", 
                    RowBox[{"19.602000000000007`", " ", 
                    SuperscriptBox["h1", "2"], " ", 
                    SuperscriptBox["h2", "2"]}], "+", 
                    TemplateBox[{"227"}, "OutputSizeLimit`Skeleton"], "+", 
                    RowBox[{"4.`", " ", 
                    SuperscriptBox["h1", "2"], " ", 
                    SuperscriptBox["h3", "2"], " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    RowBox[{"4.`", " ", 
                    SuperscriptBox["h2", "2"], " ", 
                    SuperscriptBox["h3", "2"], " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    RowBox[{"6.`", " ", 
                    SuperscriptBox["h3", "4"], " ", 
                    SuperscriptBox["#1", "4"]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"16.000000000000004`", " ", "\[ImaginaryI]"}]}], 
                    ")"}], " ", 
                    SuperscriptBox["#1", "5"]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"16.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "h1", " ", "h2", " ", 
                    SuperscriptBox["#1", "5"]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"16.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "h1", " ", "h3", " ", 
                    SuperscriptBox["#1", "5"]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"16.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "h2", " ", "h3", " ", 
                    SuperscriptBox["#1", "5"]}], "+", 
                    RowBox[{"12.119999999999997`", " ", 
                    SuperscriptBox["#1", "6"]}], "+", 
                    RowBox[{"4.`", " ", 
                    SuperscriptBox["h1", "2"], " ", 
                    SuperscriptBox["#1", "6"]}], "+", 
                    RowBox[{"4.`", " ", 
                    SuperscriptBox["h2", "2"], " ", 
                    SuperscriptBox["#1", "6"]}], "+", 
                    RowBox[{"4.`", " ", 
                    SuperscriptBox["h3", "2"], " ", 
                    SuperscriptBox["#1", "6"]}], "+", 
                    RowBox[{"1.`", " ", 
                    SuperscriptBox["#1", "8"]}]}], "&"}], ",", 
                   RowBox[{
                    FractionBox[
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]], "&"}]}], 
                 "]"}]}], ",", 
             TemplateBox[{"6"}, "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
                   RowBox[{"0.0007500000000000002`", " ", "\[ImaginaryI]"}]}],
                  ")"}], " ", 
               RowBox[{"RootSum", "[", 
                 RowBox[{
                   RowBox[{
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "&"}], 
                   ",", 
                   TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], 
                 "]"}]}]}], "}"}], ",", 
         TemplateBox[{"7"}, "OutputSizeLimit`Skeleton"]}], "}"}], 
     Short[#, 8]& ], "line" -> 700, "sessionID" -> 26115282580420316454, 
   "byteCount" -> 8665848, "size" -> 8, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.897149853687936*^9, 3.897149892473627*^9}},
 CellLabel->
  "Out[700]=",ExpressionUUID->"7a2e7b3c-5fe4-48c1-ab45-ec58d1cfa6fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"choppedUt", ".", 
  RowBox[{"formVec", "[", "\"\<uud\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.897149902835826*^9, 3.897149926170848*^9}},
 CellLabel->
  "In[702]:=",ExpressionUUID->"9586c6a2-b0c4-4c36-8816-e4536db5961f"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{
           RowBox[{"(", 
             RowBox[{
               RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
           RowBox[{
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                 RowBox[{"0.0125`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             RowBox[{"RootSum", "[", 
               RowBox[{
                 RowBox[{
                   RowBox[{
                    RowBox[{"8.64536409`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"27.958788`", " ", 
                    SuperscriptBox["h1", "2"]}], "+", 
                    RowBox[{"30.3598`", " ", 
                    SuperscriptBox["h1", "4"]}], "-", 
                    RowBox[{"12.04`", " ", 
                    SuperscriptBox["h1", "6"]}], "+", 
                    RowBox[{"1.`", " ", 
                    SuperscriptBox["h1", "8"]}], "+", 
                    RowBox[{"16.315199999999997`", " ", "h1", " ", "h2"}], 
                    "-", 
                    RowBox[{"32.32`", " ", 
                    SuperscriptBox["h1", "3"], " ", "h2"}], "+", 
                    RowBox[{"16.`", " ", 
                    SuperscriptBox["h1", "5"], " ", "h2"}], "-", 
                    RowBox[{"27.958787999999995`", " ", 
                    SuperscriptBox["h2", "2"]}], "+", 
                    RowBox[{"19.602000000000007`", " ", 
                    SuperscriptBox["h1", "2"], " ", 
                    SuperscriptBox["h2", "2"]}], "+", 
                    TemplateBox[{"227"}, "OutputSizeLimit`Skeleton"], "+", 
                    RowBox[{"4.`", " ", 
                    SuperscriptBox["h1", "2"], " ", 
                    SuperscriptBox["h3", "2"], " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    RowBox[{"4.`", " ", 
                    SuperscriptBox["h2", "2"], " ", 
                    SuperscriptBox["h3", "2"], " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    RowBox[{"6.`", " ", 
                    SuperscriptBox["h3", "4"], " ", 
                    SuperscriptBox["#1", "4"]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"16.000000000000004`", " ", "\[ImaginaryI]"}]}], 
                    ")"}], " ", 
                    SuperscriptBox["#1", "5"]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"16.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "h1", " ", "h2", " ", 
                    SuperscriptBox["#1", "5"]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"16.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "h1", " ", "h3", " ", 
                    SuperscriptBox["#1", "5"]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"16.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "h2", " ", "h3", " ", 
                    SuperscriptBox["#1", "5"]}], "+", 
                    RowBox[{"12.119999999999997`", " ", 
                    SuperscriptBox["#1", "6"]}], "+", 
                    RowBox[{"4.`", " ", 
                    SuperscriptBox["h1", "2"], " ", 
                    SuperscriptBox["#1", "6"]}], "+", 
                    RowBox[{"4.`", " ", 
                    SuperscriptBox["h2", "2"], " ", 
                    SuperscriptBox["#1", "6"]}], "+", 
                    RowBox[{"4.`", " ", 
                    SuperscriptBox["h3", "2"], " ", 
                    SuperscriptBox["#1", "6"]}], "+", 
                    RowBox[{"1.`", " ", 
                    SuperscriptBox["#1", "8"]}]}], "&"}], ",", 
                 RowBox[{
                   FractionBox[
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]], "&"}]}], 
               "]"}]}]}], ",", 
         TemplateBox[{"6"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{
           RowBox[{"(", 
             RowBox[{
               RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
           RowBox[{"0.0025000000000000005`", " ", 
             RowBox[{"RootSum", "[", 
               TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "]"}]}]}]}], 
       "}"}], Short[#, 8]& ], "line" -> 702, "sessionID" -> 
   26115282580420316454, "byteCount" -> 1083816, "size" -> 8, "stored" -> 
   False, "expr" -> Missing["NotAvailable", "NewSessionID"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.897149920203517*^9, 3.897149926621695*^9}},
 CellLabel->
  "Out[702]=",ExpressionUUID->"b2f73da0-7ce8-4f35-875b-c31ca098c8f3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"comm", "[", 
   RowBox[{"{", 
    RowBox[{"A_", ",", " ", "B_"}], "}"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"A", ",", " ", 
    RowBox[{
     RowBox[{"A", ".", "B"}], " ", "-", " ", 
     RowBox[{"B", ".", "A"}]}]}], "}"}]}], "\n", 
 RowBox[{"Rest", "[", 
  RowBox[{"Nest", "[", 
   RowBox[{"comm", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", "2"}], "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", ".", "b"}], "-", 
       RowBox[{"b", ".", "a"}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", ".", "b"}], "-", 
       RowBox[{"b", ".", "a"}]}], ")"}], ".", "a"}]}], "}"}], 
  "\[IndentingNewLine]"}], "\n"}], "Input",
 CellChangeTimes->{{3.897405138943191*^9, 3.8974051490881033`*^9}},
 FontWeight->"Plain",ExpressionUUID->"2a07f7ca-b7e6-4918-84bb-a39e886aec3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Doing commutator stuff a la Magnus type expansion", "Section",
 CellChangeTimes->{{3.897405327489501*^9, 
  3.897405338065605*^9}},ExpressionUUID->"ac7439eb-3244-4177-a494-\
aa4badadbabe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "comm", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"comm", "[", 
    RowBox[{"{", 
     RowBox[{"B_", ",", "A_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"B", ",", " ", 
     RowBox[{
      RowBox[{"B", ".", "A"}], "-", 
      RowBox[{"A", ".", "B"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Rest", "[", 
  RowBox[{"Nest", "[", 
   RowBox[{"comm", ",", " ", 
    RowBox[{"{", 
     RowBox[{"b", ",", " ", "a"}], "}"}], ",", " ", "2"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.897405150625691*^9, 3.897405181216354*^9}},
 CellLabel->
  "In[717]:=",ExpressionUUID->"7981e0f9-b1f7-4a88-9036-258c15a80ce7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"b", ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"a", ".", "b"}]}], "+", 
      RowBox[{"b", ".", "a"}]}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"a", ".", "b"}]}], "+", 
      RowBox[{"b", ".", "a"}]}], ")"}], ".", "b"}]}], "}"}]], "Output",
 CellChangeTimes->{3.897405182410911*^9},
 CellLabel->
  "Out[719]=",ExpressionUUID->"9fdf707d-f31b-4d7c-944b-52ace657a02f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Rest", "[", 
   RowBox[{"Nest", "[", 
    RowBox[{"comm", ",", " ", 
     RowBox[{"{", 
      RowBox[{"H", ",", " ", "sy1"}], "}"}], ",", " ", "1"}], "]"}], "]"}], "//",
   "First"}]], "Input",
 CellChangeTimes->{{3.897405193311903*^9, 3.897405257864869*^9}},
 CellLabel->
  "In[727]:=",ExpressionUUID->"ea9ee1dc-849b-4c59-99ec-6993bcd84756"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
         RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"h1", "+", "h2", "+", 
         RowBox[{"3", " ", "J"}], "+", 
         RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", "0", 
     ",", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
         RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"h1", "+", "h2", "-", "J", "+", 
         RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", "0", 
     ",", "0", ",", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
         RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"h1", "-", "h2", "-", "J", "+", 
         RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], ",", 
     "0", ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"(", 
        RowBox[{"h1", "-", "h2", "-", "J", "+", 
         RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "h1"}], "-", "h2", "+", 
         RowBox[{"3", " ", "J"}], "+", 
         RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
         RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"h1", "+", "h2", "+", 
         RowBox[{"3", " ", "J"}], "+", 
         RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ",", "0", ",", "0", ",", 
     "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
         RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"h1", "+", "h2", "-", "J", "+", 
         RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
         RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"h1", "-", "h2", "-", "J", "+", 
         RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"(", 
        RowBox[{"h1", "-", "h2", "-", "J", "+", 
         RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "h1"}], "-", "h2", "+", 
         RowBox[{"3", " ", "J"}], "+", 
         RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.897405198784622*^9, 3.8974052581787043`*^9}},
 CellLabel->
  "Out[727]=",ExpressionUUID->"12258bbf-3d13-45a7-b25f-c1ac30e4d9b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rest", "[", 
  RowBox[{"Nest", "[", 
   RowBox[{"comm", ",", " ", 
    RowBox[{"{", 
     RowBox[{"H", ",", " ", "sy1"}], "}"}], ",", " ", "2"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.897405291417437*^9, 3.897405291462772*^9}},
 CellLabel->
  "In[728]:=",ExpressionUUID->"63bd37df-a82f-4a3d-8bd8-e577923384b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "+", "h2", "+", 
          RowBox[{"3", " ", "J"}], "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "+", "h2", "+", 
          RowBox[{"3", " ", "J"}], "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "+", "h2", "+", 
          RowBox[{"3", " ", "J"}], "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "12"}], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"h1", "+", "h2", "+", 
          RowBox[{"3", " ", "J"}], "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}], 
         "2"]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "-", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "-", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "+", "h2", "+", 
          RowBox[{"3", " ", "J"}], "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", "0", 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "-", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "12"}], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"h1", "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}], 
         "2"]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "-", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "+", "h2", "+", 
          RowBox[{"3", " ", "J"}], "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", "0", 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "h3"}], " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "-", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "12"}], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"h1", "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}], 
         "2"]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "-", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "+", "h2", "+", 
          RowBox[{"3", " ", "J"}], "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{"h1", "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", "0", 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "-", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "-", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "12"}], " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"h1", "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "-", "h2", "+", 
          RowBox[{"3", " ", "J"}], "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}], 
         "2"]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"12", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"h1", "+", "h2", "+", 
          RowBox[{"3", " ", "J"}], "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}], 
         "2"]}]}], ",", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "+", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "+", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", "0", ",", 
      RowBox[{
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "-", "h2", "+", 
          RowBox[{"3", " ", "J"}], "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "+", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{"12", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"h1", "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}], 
         "2"]}]}], ",", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "+", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "h3"}], " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", "0", 
      ",", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "-", "h2", "+", 
          RowBox[{"3", " ", "J"}], "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "+", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{"12", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"h1", "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}], 
         "2"]}]}], ",", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "+", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", "0", 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "-", "h2", "+", 
          RowBox[{"3", " ", "J"}], "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "+", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "+", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}]}]}], 
      ",", 
      RowBox[{
       RowBox[{"12", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["h3", "2"], " ", 
        SuperscriptBox["sz3z", "2"]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"h1", "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "-", "h2", "+", 
          RowBox[{"3", " ", "J"}], "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h3", " ", "sz3z"}], "-", "\[CapitalGamma]"}], ")"}], 
         "2"]}]}], ",", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "-", "h2", "+", 
          RowBox[{"3", " ", "J"}], "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "-", "h2", "+", 
          RowBox[{"3", " ", "J"}], "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "+", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "h1"}], "-", "h2", "+", 
          RowBox[{"3", " ", "J"}], "+", 
          RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"h3", " ", "sz3z", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"h1", "-", "h2", "-", "J", "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "h1"}], "-", "h2", "+", 
             RowBox[{"3", " ", "J"}], "+", 
             RowBox[{"h3", " ", "sz3z"}]}], ")"}]}]}], ")"}]}]}], ",", "0"}], 
     "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.897405291870676*^9},
 CellLabel->
  "Out[728]=",ExpressionUUID->"9b56e042-7eac-4ee1-8850-d26892455ea9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let\[CloseCurlyQuote]s just find the basis in which Hamiltonian is diagonal \
and then write operators in this basis\
\>", "Subsection",
 CellChangeTimes->{{3.901191856665923*^9, 3.901191871782336*^9}, {
  3.901191909509554*^9, 
  3.901191910265502*^9}},ExpressionUUID->"72fca965-5d28-4e69-a9d6-\
2175e652f885"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"H", ",", " ", "h"}], "]"}]], "Input",
 CellChangeTimes->{{3.901191911684391*^9, 
  3.901191914251874*^9}},ExpressionUUID->"7b5a6503-d412-4d10-9d97-\
5c728225236e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"H", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Omega]x", " ", 
     RowBox[{"PauliMatrix", "[", "1", "]"}]}], " ", "+", " ", 
    RowBox[{"\[Omega]y", " ", 
     RowBox[{"PauliMatrix", "[", "2", "]"}]}], " ", "+", " ", 
    RowBox[{"\[Omega]z", " ", 
     RowBox[{"PauliMatrix", "[", "3", "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9011919280067*^9, 3.901191969598426*^9}, {
  3.90119238884779*^9, 
  3.901192389415619*^9}},ExpressionUUID->"8446b18b-6b43-46cd-8bf5-\
3896acc04622"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Lambda]", " ", "=", " ", 
  RowBox[{"Eigenvalues", "[", "H", "]"}]}]], "Input",
 CellChangeTimes->{{3.901192391046844*^9, 3.901192394884017*^9}},
 CellLabel->
  "In[428]:=",ExpressionUUID->"017a078b-8c90-4110-aede-e7f87ef0bdee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[Omega]x", "2"], "+", 
      SuperscriptBox["\[Omega]y", "2"], "+", 
      SuperscriptBox["\[Omega]z", "2"]}]]}], ",", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[Omega]x", "2"], "+", 
     SuperscriptBox["\[Omega]y", "2"], "+", 
     SuperscriptBox["\[Omega]z", "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.90119239510797*^9},
 CellLabel->
  "Out[428]=",ExpressionUUID->"18969969-5e92-47f6-a1f7-3851162e0738"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", " ", "=", " ", 
  RowBox[{"Eigenvectors", "[", "H", "]"}]}]], "Input",
 CellChangeTimes->{{3.901191972479197*^9, 3.901191977894017*^9}, {
  3.9011920711585903`*^9, 3.901192078044496*^9}},
 CellLabel->
  "In[425]:=",ExpressionUUID->"51a9126f-e076-4a45-8bde-3e550e5967bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "\[Omega]z"}], "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Omega]x", "2"], "+", 
          SuperscriptBox["\[Omega]y", "2"], "+", 
          SuperscriptBox["\[Omega]z", "2"]}]]}], 
       RowBox[{"\[Omega]x", "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}]]}], ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "\[Omega]z"}], "-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Omega]x", "2"], "+", 
          SuperscriptBox["\[Omega]y", "2"], "+", 
          SuperscriptBox["\[Omega]z", "2"]}]]}], 
       RowBox[{"\[Omega]x", "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}]]}], ",", "1"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.901191978434079*^9, {3.901192073168734*^9, 3.90119207831325*^9}},
 CellLabel->
  "Out[425]=",ExpressionUUID->"beef7e55-eab5-4e21-9dda-34176c6ae0d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ComplexExpand", "[", 
      RowBox[{"Conjugate", "[", 
       RowBox[{"v", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ".", 
     RowBox[{"PauliMatrix", "[", "3", "]"}], ".", 
     RowBox[{"v", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", 
      RowBox[{"Length", "[", "v", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "1", ",", " ", 
      RowBox[{"Length", "[", "v", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.901192083447361*^9, 3.901192158905134*^9}},
 CellLabel->
  "In[427]:=",ExpressionUUID->"3f329d3d-473a-4dd6-b3e6-1a2e351cd333"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Omega]z"}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"], "+", 
            SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"\[Omega]x", " ", "\[Omega]z"}], 
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"]}]], "-", 
          FractionBox[
           RowBox[{"\[Omega]x", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}], 
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"]}]], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Omega]y", " ", "\[Omega]z"}], 
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"]}]], "-", 
             FractionBox[
              RowBox[{"\[Omega]y", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["\[Omega]x", "2"], "+", 
                 SuperscriptBox["\[Omega]y", "2"], "+", 
                 SuperscriptBox["\[Omega]z", "2"]}]]}], 
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"]}]]}], ")"}]}]}], ")"}]}], 
       RowBox[{"\[Omega]x", "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}]]}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Omega]z"}], "-", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"], "+", 
            SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"\[Omega]x", " ", "\[Omega]z"}], 
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"]}]], "-", 
          FractionBox[
           RowBox[{"\[Omega]x", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}], 
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"]}]], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Omega]y", " ", "\[Omega]z"}], 
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"]}]], "-", 
             FractionBox[
              RowBox[{"\[Omega]y", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["\[Omega]x", "2"], "+", 
                 SuperscriptBox["\[Omega]y", "2"], "+", 
                 SuperscriptBox["\[Omega]z", "2"]}]]}], 
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"]}]]}], ")"}]}]}], ")"}]}], 
       RowBox[{"\[Omega]x", "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Omega]z"}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"], "+", 
            SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"\[Omega]x", " ", "\[Omega]z"}], 
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"]}]], "+", 
          FractionBox[
           RowBox[{"\[Omega]x", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}], 
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"]}]], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Omega]y", " ", "\[Omega]z"}], 
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"]}]], "+", 
             FractionBox[
              RowBox[{"\[Omega]y", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["\[Omega]x", "2"], "+", 
                 SuperscriptBox["\[Omega]y", "2"], "+", 
                 SuperscriptBox["\[Omega]z", "2"]}]]}], 
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"]}]]}], ")"}]}]}], ")"}]}], 
       RowBox[{"\[Omega]x", "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}]]}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Omega]z"}], "-", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"], "+", 
            SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"\[Omega]x", " ", "\[Omega]z"}], 
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"]}]], "+", 
          FractionBox[
           RowBox[{"\[Omega]x", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}], 
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"]}]], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Omega]y", " ", "\[Omega]z"}], 
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"]}]], "+", 
             FractionBox[
              RowBox[{"\[Omega]y", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["\[Omega]x", "2"], "+", 
                 SuperscriptBox["\[Omega]y", "2"], "+", 
                 SuperscriptBox["\[Omega]z", "2"]}]]}], 
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"]}]]}], ")"}]}]}], ")"}]}], 
       RowBox[{"\[Omega]x", "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9011921326493196`*^9, 3.901192159200986*^9}},
 CellLabel->
  "Out[427]=",ExpressionUUID->"e20aeaf9-2dd7-4d38-9c91-ebdf8033b038"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9011925166696863`*^9, 3.901192517607147*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"45eb9064-ddd5-43f0-9cc1-1af2a8586552"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Omega]z"}], "-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[Omega]x", "2"], "+", 
        SuperscriptBox["\[Omega]y", "2"], "+", 
        SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Omega]x", " ", "\[Omega]z"}], 
       RowBox[{
        SuperscriptBox["\[Omega]x", "2"], "+", 
        SuperscriptBox["\[Omega]y", "2"]}]], "-", 
      FractionBox[
       RowBox[{"\[Omega]x", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Omega]x", "2"], "+", 
          SuperscriptBox["\[Omega]y", "2"], "+", 
          SuperscriptBox["\[Omega]z", "2"]}]]}], 
       RowBox[{
        SuperscriptBox["\[Omega]x", "2"], "+", 
        SuperscriptBox["\[Omega]y", "2"]}]], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Omega]y", " ", "\[Omega]z"}], 
          RowBox[{
           SuperscriptBox["\[Omega]x", "2"], "+", 
           SuperscriptBox["\[Omega]y", "2"]}]], "-", 
         FractionBox[
          RowBox[{"\[Omega]y", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}], 
          RowBox[{
           SuperscriptBox["\[Omega]x", "2"], "+", 
           SuperscriptBox["\[Omega]y", "2"]}]]}], ")"}]}]}], ")"}]}], 
   RowBox[{"\[Omega]x", "+", 
    RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}]]}]], "Output",
 CellChangeTimes->{3.901192517865995*^9},
 CellLabel->
  "Out[430]=",ExpressionUUID->"eb5ff8cd-5f23-439c-b88a-a0afbad19e07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zt", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"ComplexExpand", "[", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"\[Lambda]", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], "*", 
       RowBox[{"c", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", 
      RowBox[{"Length", "[", "\[Lambda]", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "1", ",", " ", 
      RowBox[{"Length", "[", "\[Lambda]", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.9011924220505342`*^9, 3.901192525317286*^9}, {
  3.9011925865650187`*^9, 3.901192592533154*^9}},
 CellLabel->
  "In[435]:=",ExpressionUUID->"f057cf0b-582e-4c7a-aea2-c27403906f9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Omega]x", "2"], "+", 
          SuperscriptBox["\[Omega]y", "2"], "+", 
          SuperscriptBox["\[Omega]z", "2"]}]]}], "-", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Omega]x", "2"], "+", 
          SuperscriptBox["\[Omega]y", "2"], "+", 
          SuperscriptBox["\[Omega]z", "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Omega]z"}], "-", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Omega]x", " ", "\[Omega]z"}], 
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"]}]], "-", 
              FractionBox[
               RowBox[{"\[Omega]x", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["\[Omega]x", "2"], "+", 
                  SuperscriptBox["\[Omega]y", "2"], "+", 
                  SuperscriptBox["\[Omega]z", "2"]}]]}], 
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"]}]], "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[Omega]y", " ", "\[Omega]z"}], 
                  RowBox[{
                   SuperscriptBox["\[Omega]x", "2"], "+", 
                   SuperscriptBox["\[Omega]y", "2"]}]], "-", 
                 FractionBox[
                  RowBox[{"\[Omega]y", " ", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["\[Omega]x", "2"], "+", 
                    SuperscriptBox["\[Omega]y", "2"], "+", 
                    SuperscriptBox["\[Omega]z", "2"]}]]}], 
                  RowBox[{
                   SuperscriptBox["\[Omega]x", "2"], "+", 
                   SuperscriptBox["\[Omega]y", "2"]}]]}], ")"}]}]}], ")"}]}], 
           
           RowBox[{"\[Omega]x", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}]]}], ")"}]}]}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Omega]x", "2"], "+", 
          SuperscriptBox["\[Omega]y", "2"], "+", 
          SuperscriptBox["\[Omega]z", "2"]}]]}], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Omega]x", "2"], "+", 
          SuperscriptBox["\[Omega]y", "2"], "+", 
          SuperscriptBox["\[Omega]z", "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Omega]z"}], "-", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Omega]x", " ", "\[Omega]z"}], 
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"]}]], "-", 
              FractionBox[
               RowBox[{"\[Omega]x", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["\[Omega]x", "2"], "+", 
                  SuperscriptBox["\[Omega]y", "2"], "+", 
                  SuperscriptBox["\[Omega]z", "2"]}]]}], 
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"]}]], "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[Omega]y", " ", "\[Omega]z"}], 
                  RowBox[{
                   SuperscriptBox["\[Omega]x", "2"], "+", 
                   SuperscriptBox["\[Omega]y", "2"]}]], "-", 
                 FractionBox[
                  RowBox[{"\[Omega]y", " ", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["\[Omega]x", "2"], "+", 
                    SuperscriptBox["\[Omega]y", "2"], "+", 
                    SuperscriptBox["\[Omega]z", "2"]}]]}], 
                  RowBox[{
                   SuperscriptBox["\[Omega]x", "2"], "+", 
                   SuperscriptBox["\[Omega]y", "2"]}]]}], ")"}]}]}], ")"}]}], 
           
           RowBox[{"\[Omega]x", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}]]}], ")"}]}]}]]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Omega]x", "2"], "+", 
         SuperscriptBox["\[Omega]y", "2"], "+", 
         SuperscriptBox["\[Omega]z", "2"]}]], "-", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Omega]x", "2"], "+", 
          SuperscriptBox["\[Omega]y", "2"], "+", 
          SuperscriptBox["\[Omega]z", "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Omega]z"}], "-", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Omega]x", " ", "\[Omega]z"}], 
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"]}]], "-", 
              FractionBox[
               RowBox[{"\[Omega]x", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["\[Omega]x", "2"], "+", 
                  SuperscriptBox["\[Omega]y", "2"], "+", 
                  SuperscriptBox["\[Omega]z", "2"]}]]}], 
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"]}]], "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[Omega]y", " ", "\[Omega]z"}], 
                  RowBox[{
                   SuperscriptBox["\[Omega]x", "2"], "+", 
                   SuperscriptBox["\[Omega]y", "2"]}]], "-", 
                 FractionBox[
                  RowBox[{"\[Omega]y", " ", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["\[Omega]x", "2"], "+", 
                    SuperscriptBox["\[Omega]y", "2"], "+", 
                    SuperscriptBox["\[Omega]z", "2"]}]]}], 
                  RowBox[{
                   SuperscriptBox["\[Omega]x", "2"], "+", 
                   SuperscriptBox["\[Omega]y", "2"]}]]}], ")"}]}]}], ")"}]}], 
           
           RowBox[{"\[Omega]x", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}]]}], ")"}]}]}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Omega]x", "2"], "+", 
         SuperscriptBox["\[Omega]y", "2"], "+", 
         SuperscriptBox["\[Omega]z", "2"]}]], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Omega]x", "2"], "+", 
          SuperscriptBox["\[Omega]y", "2"], "+", 
          SuperscriptBox["\[Omega]z", "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Omega]z"}], "-", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Omega]x", " ", "\[Omega]z"}], 
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"]}]], "-", 
              FractionBox[
               RowBox[{"\[Omega]x", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["\[Omega]x", "2"], "+", 
                  SuperscriptBox["\[Omega]y", "2"], "+", 
                  SuperscriptBox["\[Omega]z", "2"]}]]}], 
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"]}]], "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[Omega]y", " ", "\[Omega]z"}], 
                  RowBox[{
                   SuperscriptBox["\[Omega]x", "2"], "+", 
                   SuperscriptBox["\[Omega]y", "2"]}]], "-", 
                 FractionBox[
                  RowBox[{"\[Omega]y", " ", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["\[Omega]x", "2"], "+", 
                    SuperscriptBox["\[Omega]y", "2"], "+", 
                    SuperscriptBox["\[Omega]z", "2"]}]]}], 
                  RowBox[{
                   SuperscriptBox["\[Omega]x", "2"], "+", 
                   SuperscriptBox["\[Omega]y", "2"]}]]}], ")"}]}]}], ")"}]}], 
           
           RowBox[{"\[Omega]x", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}]]}], ")"}]}]}]]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9011925089305067`*^9, 3.901192527409761*^9}, 
   3.9011925927940817`*^9},
 CellLabel->
  "Out[435]=",ExpressionUUID->"105ed7aa-446c-4e2f-8110-2965b6f34dd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zt", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.901192531893305*^9, 3.9011925420639257`*^9}},
 CellLabel->
  "In[436]:=",ExpressionUUID->"d9dfec52-3686-4daa-8fe3-6960522b777e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Omega]x", "2"], "+", 
           SuperscriptBox["\[Omega]y", "2"], "+", 
           SuperscriptBox["\[Omega]z", "2"]}]]}], "-", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Omega]x", "2"], "+", 
           SuperscriptBox["\[Omega]y", "2"], "+", 
           SuperscriptBox["\[Omega]z", "2"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Omega]z"}], "-", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["\[Omega]x", "2"], "+", 
                 SuperscriptBox["\[Omega]y", "2"], "+", 
                 SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[Omega]x", " ", "\[Omega]z"}], 
                RowBox[{
                 SuperscriptBox["\[Omega]x", "2"], "+", 
                 SuperscriptBox["\[Omega]y", "2"]}]], "-", 
               FractionBox[
                RowBox[{"\[Omega]x", " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["\[Omega]x", "2"], "+", 
                   SuperscriptBox["\[Omega]y", "2"], "+", 
                   SuperscriptBox["\[Omega]z", "2"]}]]}], 
                RowBox[{
                 SuperscriptBox["\[Omega]x", "2"], "+", 
                 SuperscriptBox["\[Omega]y", "2"]}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[Omega]y", " ", "\[Omega]z"}], 
                   RowBox[{
                    SuperscriptBox["\[Omega]x", "2"], "+", 
                    SuperscriptBox["\[Omega]y", "2"]}]], "-", 
                  FractionBox[
                   RowBox[{"\[Omega]y", " ", 
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["\[Omega]x", "2"], "+", 
                    SuperscriptBox["\[Omega]y", "2"], "+", 
                    SuperscriptBox["\[Omega]z", "2"]}]]}], 
                   RowBox[{
                    SuperscriptBox["\[Omega]x", "2"], "+", 
                    SuperscriptBox["\[Omega]y", "2"]}]]}], ")"}]}]}], ")"}]}], 
            RowBox[{"\[Omega]x", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}]]}], ")"}]}]}]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Omega]x", "2"], "+", 
           SuperscriptBox["\[Omega]y", "2"], "+", 
           SuperscriptBox["\[Omega]z", "2"]}]]}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Omega]x", "2"], "+", 
           SuperscriptBox["\[Omega]y", "2"], "+", 
           SuperscriptBox["\[Omega]z", "2"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Omega]z"}], "-", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["\[Omega]x", "2"], "+", 
                 SuperscriptBox["\[Omega]y", "2"], "+", 
                 SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[Omega]x", " ", "\[Omega]z"}], 
                RowBox[{
                 SuperscriptBox["\[Omega]x", "2"], "+", 
                 SuperscriptBox["\[Omega]y", "2"]}]], "-", 
               FractionBox[
                RowBox[{"\[Omega]x", " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["\[Omega]x", "2"], "+", 
                   SuperscriptBox["\[Omega]y", "2"], "+", 
                   SuperscriptBox["\[Omega]z", "2"]}]]}], 
                RowBox[{
                 SuperscriptBox["\[Omega]x", "2"], "+", 
                 SuperscriptBox["\[Omega]y", "2"]}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[Omega]y", " ", "\[Omega]z"}], 
                   RowBox[{
                    SuperscriptBox["\[Omega]x", "2"], "+", 
                    SuperscriptBox["\[Omega]y", "2"]}]], "-", 
                  FractionBox[
                   RowBox[{"\[Omega]y", " ", 
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["\[Omega]x", "2"], "+", 
                    SuperscriptBox["\[Omega]y", "2"], "+", 
                    SuperscriptBox["\[Omega]z", "2"]}]]}], 
                   RowBox[{
                    SuperscriptBox["\[Omega]x", "2"], "+", 
                    SuperscriptBox["\[Omega]y", "2"]}]]}], ")"}]}]}], ")"}]}], 
            RowBox[{"\[Omega]x", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}]]}], ")"}]}]}]]},
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Omega]x", "2"], "+", 
          SuperscriptBox["\[Omega]y", "2"], "+", 
          SuperscriptBox["\[Omega]z", "2"]}]], "-", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Omega]x", "2"], "+", 
           SuperscriptBox["\[Omega]y", "2"], "+", 
           SuperscriptBox["\[Omega]z", "2"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Omega]z"}], "-", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["\[Omega]x", "2"], "+", 
                 SuperscriptBox["\[Omega]y", "2"], "+", 
                 SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[Omega]x", " ", "\[Omega]z"}], 
                RowBox[{
                 SuperscriptBox["\[Omega]x", "2"], "+", 
                 SuperscriptBox["\[Omega]y", "2"]}]], "-", 
               FractionBox[
                RowBox[{"\[Omega]x", " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["\[Omega]x", "2"], "+", 
                   SuperscriptBox["\[Omega]y", "2"], "+", 
                   SuperscriptBox["\[Omega]z", "2"]}]]}], 
                RowBox[{
                 SuperscriptBox["\[Omega]x", "2"], "+", 
                 SuperscriptBox["\[Omega]y", "2"]}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[Omega]y", " ", "\[Omega]z"}], 
                   RowBox[{
                    SuperscriptBox["\[Omega]x", "2"], "+", 
                    SuperscriptBox["\[Omega]y", "2"]}]], "-", 
                  FractionBox[
                   RowBox[{"\[Omega]y", " ", 
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["\[Omega]x", "2"], "+", 
                    SuperscriptBox["\[Omega]y", "2"], "+", 
                    SuperscriptBox["\[Omega]z", "2"]}]]}], 
                   RowBox[{
                    SuperscriptBox["\[Omega]x", "2"], "+", 
                    SuperscriptBox["\[Omega]y", "2"]}]]}], ")"}]}]}], ")"}]}], 
            RowBox[{"\[Omega]x", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}]]}], ")"}]}]}]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Omega]x", "2"], "+", 
          SuperscriptBox["\[Omega]y", "2"], "+", 
          SuperscriptBox["\[Omega]z", "2"]}]], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Omega]x", "2"], "+", 
           SuperscriptBox["\[Omega]y", "2"], "+", 
           SuperscriptBox["\[Omega]z", "2"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Omega]z"}], "-", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["\[Omega]x", "2"], "+", 
                 SuperscriptBox["\[Omega]y", "2"], "+", 
                 SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[Omega]x", " ", "\[Omega]z"}], 
                RowBox[{
                 SuperscriptBox["\[Omega]x", "2"], "+", 
                 SuperscriptBox["\[Omega]y", "2"]}]], "-", 
               FractionBox[
                RowBox[{"\[Omega]x", " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["\[Omega]x", "2"], "+", 
                   SuperscriptBox["\[Omega]y", "2"], "+", 
                   SuperscriptBox["\[Omega]z", "2"]}]]}], 
                RowBox[{
                 SuperscriptBox["\[Omega]x", "2"], "+", 
                 SuperscriptBox["\[Omega]y", "2"]}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[Omega]y", " ", "\[Omega]z"}], 
                   RowBox[{
                    SuperscriptBox["\[Omega]x", "2"], "+", 
                    SuperscriptBox["\[Omega]y", "2"]}]], "-", 
                  FractionBox[
                   RowBox[{"\[Omega]y", " ", 
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["\[Omega]x", "2"], "+", 
                    SuperscriptBox["\[Omega]y", "2"], "+", 
                    SuperscriptBox["\[Omega]z", "2"]}]]}], 
                   RowBox[{
                    SuperscriptBox["\[Omega]x", "2"], "+", 
                    SuperscriptBox["\[Omega]y", "2"]}]]}], ")"}]}]}], ")"}]}], 
            RowBox[{"\[Omega]x", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}]]}], ")"}]}]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9011925357244263`*^9, 3.9011925422443037`*^9}, 
   3.901192596799184*^9},
 CellLabel->
  "Out[436]//MatrixForm=",ExpressionUUID->"46e455ea-1038-40d9-abcf-\
0784922136d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ztp", " ", "=", " ", 
  RowBox[{
   RowBox[{"MatrixExp", "[", 
    RowBox[{"\[ImaginaryI]", " ", "t", " ", "H"}], "]"}], ".", 
   RowBox[{"PauliMatrix", "[", "3", "]"}], ".", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "H"}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.901192545954279*^9, 3.90119260967387*^9}},
 CellLabel->
  "In[438]:=",ExpressionUUID->"62cbb5d8-65cb-4ec8-bbaf-a3d153165244"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Omega]x"}], "-", 
              RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]]}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Omega]x"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{"\[Omega]x", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{"\[Omega]x", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Omega]z"}], "-", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]]}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Omega]z"}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{"\[Omega]z", "-", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]]}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{"\[Omega]z", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{"\[Omega]x", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{"\[Omega]x", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{"\[Omega]z", "-", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]]}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{"\[Omega]z", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Omega]x"}], "+", 
              RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]]}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Omega]x"}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{"\[Omega]z", "-", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]]}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{"\[Omega]z", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]]}], ")"}]}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Omega]x"}], "-", 
              RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]]}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Omega]x"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Omega]z"}], "-", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Omega]z"}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{"\[Omega]x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]]}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{"\[Omega]x", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Omega]z"}], "-", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]]}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Omega]z"}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Omega]x"}], "+", 
              RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]]}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Omega]x"}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{"\[Omega]x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]]}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{"\[Omega]x", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Omega]z"}], "-", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Omega]z"}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{"\[Omega]z", "-", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Omega]x", "2"], "+", 
                SuperscriptBox["\[Omega]y", "2"], "+", 
                SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]]}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "t", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{"\[Omega]z", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Omega]x", "2"], "+", 
               SuperscriptBox["\[Omega]y", "2"], "+", 
               SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}]]}], ")"}]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9011925767785473`*^9, 3.9011926099645653`*^9}},
 CellLabel->
  "Out[438]=",ExpressionUUID->"9bb0af8a-ccea-4b55-b23b-4fefab9eb8a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"ztp", " ", "-", "zt"}], "]"}]], "Input",
 CellChangeTimes->{{3.90119261415376*^9, 3.901192629466926*^9}},
 CellLabel->
  "In[440]:=",ExpressionUUID->"a1e5f362-88bd-4e70-9263-020605e363d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "t"}]}], ")"}], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Omega]x", "2"], "+", 
           SuperscriptBox["\[Omega]y", "2"], "+", 
           SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", "t"}]}], ")"}], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", "t"}]}], ")"}], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
          SuperscriptBox["\[Omega]z", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "t", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"], "+", 
            SuperscriptBox["\[Omega]z", "2"]}], ")"}]}]}], ")"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Omega]x", "2"], "+", 
         SuperscriptBox["\[Omega]y", "2"], "+", 
         SuperscriptBox["\[Omega]z", "2"]}], ")"}]}]], ",", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Omega]x", "2"], "+", 
          SuperscriptBox["\[Omega]y", "2"], "+", 
          SuperscriptBox["\[Omega]z", "2"]}], ")"}]}]], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "t", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Omega]x", "2"], "+", 
           SuperscriptBox["\[Omega]y", "2"], "+", 
           SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "t", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
          RowBox[{"(", 
           RowBox[{"\[Omega]x", "-", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}], " ", 
          "\[Omega]z"}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", "t"}]}], ")"}], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"], "+", 
            SuperscriptBox["\[Omega]z", "2"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Omega]x", "-", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Omega]z"}], "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], "-", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", "t", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
          RowBox[{"(", 
           RowBox[{"\[Omega]x", "-", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"\[Omega]z", "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}]}], ")"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"\[Omega]x", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}], " ", 
        "\[Omega]z"}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"3", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"], "+", 
            SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Omega]x", "2"], "+", 
          SuperscriptBox["\[Omega]y", "2"], "+", 
          SuperscriptBox["\[Omega]z", "2"]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "t", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"], "+", 
            SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Omega]x", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Omega]z"}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"], "+", 
            SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "t", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"], "+", 
            SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Omega]x", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]y"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Omega]z", "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"], "+", 
            SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Omega]x", "2"], "+", 
         SuperscriptBox["\[Omega]y", "2"], "+", 
         SuperscriptBox["\[Omega]z", "2"]}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "t"}]}], ")"}], " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Omega]x", "2"], "+", 
             SuperscriptBox["\[Omega]y", "2"], "+", 
             SuperscriptBox["\[Omega]z", "2"]}]]}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]]}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"]}], ")"}]}], "-", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", "t"}]}], ")"}], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"]}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", "t"}]}], ")"}], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
          SuperscriptBox["\[Omega]z", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "t", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Omega]x", "2"], "+", 
              SuperscriptBox["\[Omega]y", "2"], "+", 
              SuperscriptBox["\[Omega]z", "2"]}]]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Omega]x", "2"], "+", 
            SuperscriptBox["\[Omega]y", "2"], "+", 
            SuperscriptBox["\[Omega]z", "2"]}], ")"}]}]}], ")"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Omega]x", "2"], "+", 
         SuperscriptBox["\[Omega]y", "2"], "+", 
         SuperscriptBox["\[Omega]z", "2"]}], ")"}]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.901192622705599*^9, 3.901192633026622*^9}},
 CellLabel->
  "Out[440]=",ExpressionUUID->"39a9fec3-a531-4e58-b0e5-47d5f6e8d17d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1792, 1007},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.5,
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"97c95e6e-6ab3-4097-a3bf-647ac4d28cc2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 179, 3, 146, "Title",ExpressionUUID->"40c82feb-b695-4808-9e78-94609df15865"],
Cell[762, 27, 2842, 73, 450, "Input",ExpressionUUID->"f27721d8-caae-4e5f-8967-0b10b1d7fb01"],
Cell[CellGroupData[{
Cell[3629, 104, 414, 12, 68, "Subsubsection",ExpressionUUID->"b0318d7d-9b55-4f6b-8201-d6fbf6424c0c"],
Cell[4046, 118, 165, 3, 46, "Input",ExpressionUUID->"14dd63a1-a97b-4c8b-b879-2ffc4b845949"],
Cell[CellGroupData[{
Cell[4236, 125, 817, 21, 112, "Input",ExpressionUUID->"5f2f9630-8c1d-4093-8283-10fe33bbea39"],
Cell[5056, 148, 983, 30, 55, "Output",ExpressionUUID->"ca03ef61-942a-450a-8c16-c7f4e614f32b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6076, 183, 823, 22, 46, "Input",ExpressionUUID->"fc7b9283-d33b-49c2-baf4-ef3ecd1f7550"],
Cell[6902, 207, 1162, 34, 55, "Output",ExpressionUUID->"b1359b8a-07f1-4320-b49e-c0b6a2c747e9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8113, 247, 754, 22, 71, "Subsubsection",ExpressionUUID->"8998a4b7-4d8f-4de9-a59c-0c6245ac6cf2"],
Cell[8870, 271, 235, 5, 46, "Input",ExpressionUUID->"e76a81e5-f038-47af-bb49-07c3a1be7e5d"],
Cell[9108, 278, 1040, 28, 82, "Input",ExpressionUUID->"c678a04a-d2ed-4472-b517-460fef71d48d"],
Cell[CellGroupData[{
Cell[10173, 310, 211, 4, 46, "Input",ExpressionUUID->"f2590870-89f5-4763-8dbb-7c7bb05f7ae3"],
Cell[10387, 316, 572, 16, 63, "Output",ExpressionUUID->"6427dc5e-9998-4bd4-bb0b-6fa20fb5a609"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10996, 337, 1040, 25, 46, "Input",ExpressionUUID->"87a6caab-305f-4c2e-923f-d0926e264726"],
Cell[12039, 364, 6624, 168, 352, "Output",ExpressionUUID->"75617ad6-68a3-40ca-a740-a5555f822fca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18700, 537, 668, 17, 140, "Input",ExpressionUUID->"7561ac89-eec9-440e-a784-5a9c6af2bb47"],
Cell[19371, 556, 33361, 811, 210, "Output",ExpressionUUID->"2741fb11-daa2-4a08-9283-0ff650f921a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52769, 1372, 445, 11, 46, "Input",ExpressionUUID->"0d28255c-f29a-416f-bf27-0df57ae94492"],
Cell[53217, 1385, 160, 3, 52, "Output",ExpressionUUID->"f74253ec-334d-4b05-bcf1-9455ff759453"]
}, Open  ]],
Cell[53392, 1391, 358, 7, 46, "Input",ExpressionUUID->"bee6fa84-b5a3-4e61-96e4-0f69db1f24bc"],
Cell[CellGroupData[{
Cell[53775, 1402, 780, 20, 140, "Input",ExpressionUUID->"e7105b84-a449-44a7-891e-27a8167f1c64"],
Cell[54558, 1424, 54075, 1307, 210, "Output",ExpressionUUID->"733d796e-699d-40c7-b478-726e1fbafc01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108670, 2736, 508, 12, 46, "Input",ExpressionUUID->"e572d8f5-7d32-42d2-8db5-d2d361781e1f"],
Cell[109181, 2750, 4750, 123, 184, "Output",ExpressionUUID->"ad0056e3-be09-4f38-a85e-af38071968e9"]
}, Open  ]],
Cell[113946, 2876, 152, 3, 46, "Input",ExpressionUUID->"90c083ad-a662-4d64-a9d1-1dde279e6fed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114135, 2884, 472, 9, 67, "Subsubsection",ExpressionUUID->"ae39839f-f386-493d-87d8-d9c57bdf78c4"],
Cell[114610, 2895, 402, 7, 46, "Input",ExpressionUUID->"73a3ebc8-e050-416d-943a-b3a3c3f0b00f"],
Cell[115015, 2904, 2902, 76, 212, "Input",ExpressionUUID->"6b1036ff-2bc0-4fc2-85d8-42c8784da09a"],
Cell[117920, 2982, 2955, 76, 109, "Input",ExpressionUUID->"e0aab22a-4880-470d-bf88-4ec2ca5d1c86"],
Cell[CellGroupData[{
Cell[120900, 3062, 182, 3, 46, "Input",ExpressionUUID->"453d99fd-d8dc-44b8-97a9-ba70a36b3fd9"],
Cell[121085, 3067, 10176, 311, 287, "Output",ExpressionUUID->"2662300e-ba9b-44fd-829a-016311d70665"]
}, Open  ]],
Cell[131276, 3381, 313, 7, 46, "Input",ExpressionUUID->"2a635fb0-a056-462b-9fc4-cfc9d4141fc9"],
Cell[CellGroupData[{
Cell[131614, 3392, 495, 12, 46, "Input",ExpressionUUID->"e8e0eb6c-4f4f-4741-af09-71be7d9fe0e6"],
Cell[132112, 3406, 3109, 85, 115, "Output",ExpressionUUID->"72a3dd94-5ba0-4095-b101-726b7c3ac22c"]
}, Open  ]],
Cell[135236, 3494, 154, 3, 46, "Input",ExpressionUUID->"eed803b7-cef9-4e52-a879-c4affeab1873"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135427, 3502, 545, 10, 67, "Subsubsection",ExpressionUUID->"04c08a85-473d-4910-984c-e40f21165530"],
Cell[135975, 3514, 503, 10, 46, "Input",ExpressionUUID->"546cf172-44e8-4b3e-b4db-8f58dfb7cbfe"],
Cell[136481, 3526, 3210, 85, 212, "Input",ExpressionUUID->"b2d71438-1e50-4ddc-afb8-61f4a8629262"],
Cell[139694, 3613, 832, 22, 140, "Input",ExpressionUUID->"41f13d11-62ae-4062-b805-cb7ebaa08904"],
Cell[CellGroupData[{
Cell[140551, 3639, 452, 9, 46, "Input",ExpressionUUID->"c28bce29-1204-4c94-8e36-b4c3065cc554"],
Cell[141006, 3650, 4149, 88, 213, "Output",ExpressionUUID->"9bf1a858-7f13-40ca-9b0b-78bbdfa78617"]
}, Open  ]],
Cell[145170, 3741, 1592, 36, 46, "Input",ExpressionUUID->"87f1eb86-cbb5-4c18-aff8-4a1c06ea7388"],
Cell[CellGroupData[{
Cell[146787, 3781, 474, 13, 46, "Input",ExpressionUUID->"d170d7d6-10b5-4305-8be7-deac4c3718e4"],
Cell[147264, 3796, 58682, 981, 345, "Output",ExpressionUUID->"b5b1ce8b-35f2-4880-9c25-2fce58ce2739"]
}, Open  ]],
Cell[205961, 4780, 1537, 44, 78, "Input",ExpressionUUID->"9784b526-6bc9-439f-9753-7724d1dc37cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207535, 4829, 572, 10, 67, "Subsubsection",ExpressionUUID->"a7b2f8a3-5244-495d-be56-5f2736ba7565"],
Cell[208110, 4841, 406, 8, 46, "Input",ExpressionUUID->"70ce98c3-c827-426e-bfab-0684f33e5842"],
Cell[208519, 4851, 3210, 85, 212, "Input",ExpressionUUID->"59bb3519-21c8-4921-a4b7-7770b4017a68"],
Cell[211732, 4938, 1592, 36, 46, "Input",ExpressionUUID->"726b2f15-9ba6-47d8-b8fc-5c606fe9d64e"],
Cell[CellGroupData[{
Cell[213349, 4978, 474, 13, 46, "Input",ExpressionUUID->"bf3dc569-f342-45d1-90b9-d558746658cc"],
Cell[213826, 4993, 58682, 981, 345, "Output",ExpressionUUID->"81bd6177-98f5-42c0-b3e3-326017b1f6f6"]
}, Open  ]],
Cell[272523, 5977, 1537, 44, 78, "Input",ExpressionUUID->"6698ec73-c572-4a39-8b50-0d8dd87314ec"],
Cell[CellGroupData[{
Cell[274085, 6025, 240, 5, 46, "Input",ExpressionUUID->"2b79c0f0-bfef-4a2f-84a3-b24ee3e2a020"],
Cell[274328, 6032, 317, 10, 52, "Output",ExpressionUUID->"f22a012f-be2a-45cf-9f8e-52e0ca510d56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274682, 6047, 238, 5, 46, "Input",ExpressionUUID->"e2a3ece1-ed1e-45ff-b153-9061a33501f0"],
Cell[274923, 6054, 340, 10, 52, "Output",ExpressionUUID->"b931f786-515e-4215-8799-1b669cc94835"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275300, 6069, 231, 5, 46, "Input",ExpressionUUID->"5ddc54bd-c40e-45b1-b9f6-2685620a6440"],
Cell[275534, 6076, 377, 12, 52, "Output",ExpressionUUID->"cb9647da-ac30-4d81-af78-1e2fcb2f20e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275948, 6093, 220, 4, 46, "Input",ExpressionUUID->"8505a167-8e64-40ea-804d-586bd6b6aa40"],
Cell[276171, 6099, 374, 12, 52, "Output",ExpressionUUID->"a629e78c-7508-4a61-9c1d-358c4bde0b0e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[276594, 6117, 1178, 32, 68, "Subsubsection",ExpressionUUID->"1002164c-8861-44d7-bd3e-02126a58d2e2"],
Cell[277775, 6151, 445, 9, 46, "Input",ExpressionUUID->"a576deb4-3f0d-4789-8b51-c50180b6f029"],
Cell[278223, 6162, 3988, 101, 243, "Input",ExpressionUUID->"26600b75-b5af-4493-b6ce-b13f0da79953"],
Cell[CellGroupData[{
Cell[282236, 6267, 832, 22, 140, "Input",ExpressionUUID->"6fc36715-13b2-402b-a422-f5e93a1d61bd"],
Cell[283071, 6291, 159, 3, 52, "Output",ExpressionUUID->"543c0af5-2363-468d-94c6-17c69a8b2d37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283267, 6299, 1235, 33, 46, "Input",ExpressionUUID->"c70aadcf-e080-466e-9065-b7f213984cbb"],
Cell[284505, 6334, 396, 10, 41, "Message",ExpressionUUID->"aa74ae91-7490-45b2-bc27-b261ef275d8a"],
Cell[284904, 6346, 399, 10, 41, "Message",ExpressionUUID->"1f564412-1257-489e-9c8c-7a17c1a20f61"],
Cell[285306, 6358, 399, 10, 41, "Message",ExpressionUUID->"47606f44-a7c9-4733-932d-666d8de456d4"],
Cell[285708, 6370, 465, 10, 41, "Message",ExpressionUUID->"2bca4161-ff6e-458a-8cd2-fce0958c2d0e"]
}, Open  ]],
Cell[286188, 6383, 420, 12, 46, "Input",ExpressionUUID->"a5f6c365-b40b-4bf7-9802-16948eea4c17"],
Cell[CellGroupData[{
Cell[286633, 6399, 1251, 34, 78, "Input",ExpressionUUID->"68a7d2b7-31a4-4f91-8220-971b61c9a361"],
Cell[287887, 6435, 160, 3, 52, "Output",ExpressionUUID->"cbb94d83-10f5-425d-906a-094eb40a5d90"]
}, Open  ]],
Cell[288062, 6441, 1297, 35, 78, "Input",ExpressionUUID->"402df7cc-4aa0-4415-a2e5-9ff9ba9677e2"],
Cell[289362, 6478, 326, 7, 46, "Input",ExpressionUUID->"4f95d862-0745-450c-8b95-5f110f1240cc"],
Cell[CellGroupData[{
Cell[289713, 6489, 514, 13, 46, "Input",ExpressionUUID->"d24d3919-8e17-481d-8e6d-5616acb5a373"],
Cell[290230, 6504, 9553, 205, 273, "Output",ExpressionUUID->"4a2aea33-4639-4294-94f3-0326d13d6b46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299820, 6714, 1615, 36, 46, "Input",ExpressionUUID->"68341ccd-9487-496f-aa95-436ae45c626f"],
Cell[301438, 6752, 160, 3, 52, "Output",ExpressionUUID->"c987c256-1449-4b0f-ab87-47e92260d584"]
}, Open  ]],
Cell[301613, 6758, 815, 25, 46, "Input",ExpressionUUID->"55be65f6-98d4-4f54-b3db-73fe5a3e5dd2"],
Cell[302431, 6785, 1537, 44, 78, "Input",ExpressionUUID->"5e84ffe7-2f8c-4e3a-86ae-3aec6b0cfe6d"],
Cell[303971, 6831, 950, 27, 46, "Input",ExpressionUUID->"7a119d9f-3afb-40c3-8ef0-1534dd74f962"],
Cell[CellGroupData[{
Cell[304946, 6862, 325, 9, 46, "Input",ExpressionUUID->"1051bebb-dd67-448b-b93f-e9a04715c5d9"],
Cell[305274, 6873, 290, 8, 54, "Output",ExpressionUUID->"259c0972-da27-4ca8-ac3b-081016513bff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305601, 6886, 2420, 70, 204, "Input",ExpressionUUID->"d3870d17-56b2-4e43-940f-fe72093e31a1"],
Cell[308024, 6958, 2523, 62, 74, "Output",ExpressionUUID->"8804bd82-cfbe-4bca-8a5f-f87ee337c4cc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[310596, 7026, 1149, 28, 68, "Subsubsection",ExpressionUUID->"cbd746c2-1602-49b2-b3c8-394e6fff7a8e"],
Cell[311748, 7056, 445, 9, 46, "Input",ExpressionUUID->"64fd395f-7521-417f-b9ab-94a887351598"],
Cell[312196, 7067, 4084, 102, 243, "Input",ExpressionUUID->"facf8d4f-39e5-424b-bbf0-0391f2936859"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316317, 7174, 410, 11, 68, "Subsubsection",ExpressionUUID->"f5bebd0d-37eb-486d-960a-a91a86c9643a"],
Cell[316730, 7187, 4248, 115, 233, "Input",ExpressionUUID->"6078a5be-23dc-4b16-9be8-5282b03c64b1"],
Cell[320981, 7304, 4066, 112, 295, "Input",ExpressionUUID->"679e9c50-1407-4795-83cc-69ef7b79711e"],
Cell[325050, 7418, 4069, 112, 295, "Input",ExpressionUUID->"5a2d5f29-7a8e-43e7-be49-f7821cea8fc0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329156, 7535, 281, 6, 67, "Subsubsection",ExpressionUUID->"d54f113c-b306-4745-bbc5-81b7e12cb744"],
Cell[CellGroupData[{
Cell[329462, 7545, 435, 10, 46, "Input",ExpressionUUID->"ced500c8-9557-446f-a40a-9b4dbeef5b83"],
Cell[329900, 7557, 22122, 383, 345, "Output",ExpressionUUID->"76e7b503-d172-4b6b-85e7-0f44bd93e5b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352059, 7945, 1041, 27, 46, "Input",ExpressionUUID->"10d6f194-b7aa-4e5b-8647-c767810c1113"],
Cell[353103, 7974, 81452, 1410, 347, "Output",ExpressionUUID->"3899e92d-8993-4def-b051-d04528ef7aab"]
}, Open  ]],
Cell[434570, 9387, 152, 3, 46, "Input",ExpressionUUID->"d932620a-4952-4774-89e9-e5951f379a9d"],
Cell[CellGroupData[{
Cell[434747, 9394, 3270, 92, 171, "Input",ExpressionUUID->"41e5d4d0-fcc0-449c-869c-489c13529da9"],
Cell[438020, 9488, 239243, 4111, 675, "Output",ExpressionUUID->"f86a35c6-38a9-4b88-a3a2-0dad7bf2c798"]
}, Open  ]],
Cell[CellGroupData[{
Cell[677300, 13604, 3136, 90, 171, "Input",ExpressionUUID->"d38de344-f9da-4d9a-81fa-a87119313245"],
Cell[680439, 13696, 277767, 4726, 683, "Output",ExpressionUUID->"bb5cc8ac-6c33-483b-a62e-90ba8969eafe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[958243, 18427, 881, 27, 46, "Input",ExpressionUUID->"e87624ed-83d0-477a-93e3-292a9c86057f"],
Cell[959127, 18456, 39689, 690, 358, "Output",ExpressionUUID->"999f82ef-7faf-4a22-b99e-5e533a42597d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[998853, 19151, 152, 3, 46, "Input",ExpressionUUID->"b8f4e6d3-81c6-40eb-8140-92916809f3c6"],
Cell[999008, 19156, 214, 4, 52, "Output",ExpressionUUID->"f66de6a0-4d58-4d81-8f45-87b2dc5ebcc3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[999259, 19165, 300, 7, 46, "Input",ExpressionUUID->"4e2ee5a5-d373-4e23-b79d-230957b05205"],
Cell[999562, 19174, 512, 11, 52, "Output",ExpressionUUID->"5827b7ae-73f1-4312-a05a-8b101ab04ef3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1000111, 19190, 255, 6, 46, "Input",ExpressionUUID->"ef48958f-f0a6-4bfe-985f-3eb32bad5822"],
Cell[1000369, 19198, 171, 3, 52, "Output",ExpressionUUID->"829722e3-94e5-48f0-9473-5d19a7ffaf73"]
}, Open  ]],
Cell[1000555, 19204, 139, 3, 46, "Input",ExpressionUUID->"2fb1dbca-170b-4283-99a1-a1e82d897c97"],
Cell[CellGroupData[{
Cell[1000719, 19211, 943, 24, 46, "Input",ExpressionUUID->"1f97d460-c740-4d47-88ea-7fcd95c7ab7d"],
Cell[1001665, 19237, 34154, 582, 345, "Output",ExpressionUUID->"b2d04d9e-2715-49ff-970e-09ba6dbc6fe4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1035856, 19824, 480, 12, 46, "Input",ExpressionUUID->"c065e2c3-bf4d-4ce3-bc8f-0d03d4b99daa"],
Cell[1036339, 19838, 30044, 512, 356, "Output",ExpressionUUID->"3ace8be0-9230-4aea-aaf0-c1dedecac3db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1066420, 20355, 624, 17, 75, "Input",ExpressionUUID->"b1ead31c-198f-4962-8a5a-be143d8269de"],
Cell[1067047, 20374, 13817, 246, 345, "Output",ExpressionUUID->"bbc3812b-681e-4c94-ae15-b41f028c6a6d"]
}, Open  ]],
Cell[1080879, 20623, 787, 24, 46, "Input",ExpressionUUID->"fb59a9b5-6f48-4ecd-bef0-a133a9c90cc6"],
Cell[CellGroupData[{
Cell[1081691, 20651, 609, 18, 46, "Input",ExpressionUUID->"0f99c933-3c49-446e-bc01-a60acb0c3afd"],
Cell[1082303, 20671, 45888, 773, 345, "Output",ExpressionUUID->"1ca1f238-642e-4e98-9772-4e3d5fa16172"]
}, Open  ]],
Cell[1128206, 21447, 1449, 39, 109, "Input",ExpressionUUID->"990afddf-1734-4f63-9335-2b497564a2f2"],
Cell[1129658, 21488, 601, 16, 78, "Input",ExpressionUUID->"2d7fbbe4-732d-4c22-8fe7-5032f8e74fa5"],
Cell[CellGroupData[{
Cell[1130284, 21508, 2039, 61, 145, "Input",ExpressionUUID->"a8d9faae-27d5-4665-927d-964e5ca66b02"],
Cell[1132326, 21571, 2713, 74, 84, "Output",ExpressionUUID->"d1c8b431-c9da-4eec-875c-33ce2a6f2e25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1135076, 21650, 481, 13, 49, "Input",ExpressionUUID->"60dd610f-4d48-40f1-bc8d-671fdb90e81a"],
Cell[1135560, 21665, 1977, 47, 115, "Output",ExpressionUUID->"b6f8386c-3320-4d0e-a8c2-f3c14c0c3f04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1137574, 21717, 443, 11, 46, "Input",ExpressionUUID->"b98f1954-1cbb-4d8d-9d61-39e36c572422"],
Cell[1138020, 21730, 45996, 777, 345, "Output",ExpressionUUID->"3bcace84-4d9a-43fd-b63c-3de34ae396a8"]
}, Open  ]],
Cell[1184031, 22510, 691, 19, 46, "Input",ExpressionUUID->"9fd46e0a-c61a-46e4-b1de-2293c7044ae1"],
Cell[CellGroupData[{
Cell[1184747, 22533, 1067, 29, 109, "Input",ExpressionUUID->"90e25b63-4ede-401f-bc9a-82b493577a98"],
Cell[1185817, 22564, 2064, 42, 469, "Output",ExpressionUUID->"093fb032-3b76-45d6-b1e3-5add3b9d88e3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1187930, 22612, 419, 12, 80, "Subsection",ExpressionUUID->"8b418419-8f98-47d3-9411-2507b0281aaf"],
Cell[1188352, 22626, 2442, 66, 171, "Input",ExpressionUUID->"d07738cc-8db5-444c-9072-0b808b3a7103"],
Cell[CellGroupData[{
Cell[1190819, 22696, 1001, 28, 109, "Input",ExpressionUUID->"93d3de17-813c-4f6d-87d2-0fb07a38309a"],
Cell[1191823, 22726, 2133, 43, 469, "Output",ExpressionUUID->"95de89e0-472d-4bcd-8293-76e41b3586a4"]
}, Open  ]],
Cell[1193971, 22772, 3150, 96, 270, "Input",ExpressionUUID->"23aa7f24-496a-414b-b395-bff02ab68d65"],
Cell[CellGroupData[{
Cell[1197146, 22872, 1338, 38, 109, "Input",ExpressionUUID->"6fd6308e-0f46-44ce-9506-452c6ea255e6"],
Cell[1198487, 22912, 2174, 46, 469, "Output",ExpressionUUID->"acea8c96-0c40-44a4-8768-e438fc0a3157"]
}, Open  ]],
Cell[1200676, 22961, 574, 16, 78, "Input",ExpressionUUID->"2bdcbb83-b678-49f8-a63f-0276d41eb3e5"],
Cell[CellGroupData[{
Cell[1201275, 22981, 250, 5, 46, "Input",ExpressionUUID->"4508798b-f680-4fba-b524-dad9fb5f30cf"],
Cell[1201528, 22988, 5500, 115, 193, "Output",ExpressionUUID->"7a2e7b3c-5fe4-48c1-ab45-ec58d1cfa6fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1207065, 23108, 250, 5, 46, "Input",ExpressionUUID->"9586c6a2-b0c4-4c36-8816-e4536db5961f"],
Cell[1207318, 23115, 5371, 112, 193, "Output",ExpressionUUID->"b2f73da0-7ce8-4f35-875b-c31ca098c8f3"]
}, Open  ]],
Cell[1212704, 23230, 963, 30, 171, "Input",ExpressionUUID->"2a07f7ca-b7e6-4918-84bb-a39e886aec3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1213704, 23265, 194, 3, 101, "Section",ExpressionUUID->"ac7439eb-3244-4177-a494-aa4badadbabe"],
Cell[CellGroupData[{
Cell[1213923, 23272, 695, 20, 109, "Input",ExpressionUUID->"7981e0f9-b1f7-4a88-9036-258c15a80ce7"],
Cell[1214621, 23294, 502, 17, 52, "Output",ExpressionUUID->"9fdf707d-f31b-4d7c-944b-52ace657a02f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1215160, 23316, 377, 10, 46, "Input",ExpressionUUID->"ea9ee1dc-849b-4c59-99ec-6993bcd84756"],
Cell[1215540, 23328, 7257, 189, 270, "Output",ExpressionUUID->"12258bbf-3d13-45a7-b25f-c1ac30e4d9b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1222834, 23522, 345, 9, 46, "Input",ExpressionUUID->"63bd37df-a82f-4a3d-8bd8-e577923384b3"],
Cell[1223182, 23533, 82883, 2155, 2711, "Output",ExpressionUUID->"9b56e042-7eac-4ee1-8850-d26892455ea9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1306102, 25693, 321, 7, 81, "Subsection",ExpressionUUID->"72fca965-5d28-4e69-a9d6-2175e652f885"],
Cell[1306426, 25702, 212, 5, 46, "Input",ExpressionUUID->"7b5a6503-d412-4d10-9d97-5c728225236e"],
Cell[1306641, 25709, 525, 13, 46, "Input",ExpressionUUID->"8446b18b-6b43-46cd-8bf5-3896acc04622"],
Cell[CellGroupData[{
Cell[1307191, 25726, 254, 5, 46, "Input",ExpressionUUID->"017a078b-8c90-4110-aede-e7f87ef0bdee"],
Cell[1307448, 25733, 527, 16, 63, "Output",ExpressionUUID->"18969969-5e92-47f6-a1f7-3851162e0738"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1308012, 25754, 298, 6, 46, "Input",ExpressionUUID->"51a9126f-e076-4a45-8bde-3e550e5967bc"],
Cell[1308313, 25762, 1089, 34, 81, "Output",ExpressionUUID->"beef7e55-eab5-4e21-9dda-34176c6ae0d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1309439, 25801, 779, 20, 46, "Input",ExpressionUUID->"3f329d3d-473a-4dd6-b3e6-1a2e351cd333"],
Cell[1310221, 25823, 7689, 206, 358, "Output",ExpressionUUID->"e20aeaf9-2dd7-4d38-9c91-ebdf8033b038"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1317947, 26034, 257, 6, 46, "Input",ExpressionUUID->"45eb9064-ddd5-43f0-9cc1-1af2a8586552"],
Cell[1318207, 26042, 1798, 52, 97, "Output",ExpressionUUID->"eb5ff8cd-5f23-439c-b88a-a0afbad19e07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1320042, 26099, 1011, 27, 46, "Input",ExpressionUUID->"f057cf0b-582e-4c7a-aea2-c27403906f9d"],
Cell[1321056, 26128, 10504, 270, 522, "Output",ExpressionUUID->"105ed7aa-446c-4e2f-8110-2965b6f34dd0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1331597, 26403, 211, 4, 46, "Input",ExpressionUUID->"d9dfec52-3686-4daa-8fe3-6960522b777e"],
Cell[1331811, 26409, 11009, 274, 250, "Output",ExpressionUUID->"46e455ea-1038-40d9-abcf-0784922136d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1342857, 26688, 472, 12, 46, "Input",ExpressionUUID->"62cbb5d8-65cb-4ec8-bbaf-a3d153165244"],
Cell[1343332, 26702, 28313, 739, 970, "Output",ExpressionUUID->"9bb0af8a-ccea-4b55-b23b-4fefab9eb8a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1371682, 27446, 244, 5, 46, "Input",ExpressionUUID->"a1e5f362-88bd-4e70-9263-020605e363d0"],
Cell[1371929, 27453, 11429, 301, 394, "Output",ExpressionUUID->"39a9fec3-a531-4e58-b0e5-47d5f6e8d17d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

